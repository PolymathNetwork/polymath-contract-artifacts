{
  "contractName": "CappedSTOFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_module",
          "type": "address"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        }
      ],
      "name": "changeSetupCost",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tagsData",
          "type": "bytes32[]"
        }
      ],
      "name": "changeTags",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setupCostInPoly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_title",
          "type": "string"
        }
      ],
      "name": "changeTitle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_version",
          "type": "string"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "setLogicContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCostInPoly",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "title",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestUpgrade",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "logicContracts",
      "outputs": [
        {
          "name": "version",
          "type": "string"
        },
        {
          "name": "logicContract",
          "type": "address"
        },
        {
          "name": "upgradeData",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lowerSTVersionBounds",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polymathRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "setupCost",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "modules",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "moduleToSecurityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upperSTVersionBounds",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "name": "_isCostInPoly",
          "type": "bool"
        }
      ],
      "name": "changeCostAndType",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "types",
      "outputs": [
        {
          "name": "",
          "type": "uint8[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgrade",
          "type": "uint256"
        },
        {
          "name": "_version",
          "type": "string"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "updateLogicContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tags",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "changeDescription",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_boundType",
          "type": "string"
        },
        {
          "name": "_newVersion",
          "type": "uint8[]"
        }
      ],
      "name": "changeSTVersionBounds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "name": "_logicContract",
          "type": "address"
        },
        {
          "name": "_polymathRegistry",
          "type": "address"
        },
        {
          "name": "_isCostInPoly",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_version",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_upgrade",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_logicContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_upgradeData",
          "type": "bytes"
        }
      ],
      "name": "LogicContractSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_securityToken",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_version",
          "type": "uint256"
        }
      ],
      "name": "ModuleUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_oldSetupCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_newSetupCost",
          "type": "uint256"
        }
      ],
      "name": "ChangeSetupCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_isOldCostInPoly",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "_isNewCostInPoly",
          "type": "bool"
        }
      ],
      "name": "ChangeCostType",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_module",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_moduleName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "_moduleFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_creator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_setupCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_setupCostInPoly",
          "type": "uint256"
        }
      ],
      "name": "GenerateModuleFromFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_boundType",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_major",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_minor",
          "type": "uint8"
        },
        {
          "indexed": false,
          "name": "_patch",
          "type": "uint8"
        }
      ],
      "name": "ChangeSTVersionBound",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"deploy\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"}],\"name\":\"changeSetupCost\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tagsData\",\"type\":\"bytes32[]\"}],\"name\":\"changeTags\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setupCostInPoly\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_title\",\"type\":\"string\"}],\"name\":\"changeTitle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"setLogicContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isCostInPoly\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"title\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestUpgrade\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"logicContracts\",\"outputs\":[{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"logicContract\",\"type\":\"address\"},{\"name\":\"upgradeData\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lowerSTVersionBounds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polymathRegistry\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"setupCost\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"modules\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"moduleToSecurityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upperSTVersionBounds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"name\":\"_isCostInPoly\",\"type\":\"bool\"}],\"name\":\"changeCostAndType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"types\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgrade\",\"type\":\"uint256\"},{\"name\":\"_version\",\"type\":\"string\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"updateLogicContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tags\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"changeDescription\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_boundType\",\"type\":\"string\"},{\"name\":\"_newVersion\",\"type\":\"uint8[]\"}],\"name\":\"changeSTVersionBounds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"name\":\"_logicContract\",\"type\":\"address\"},{\"name\":\"_polymathRegistry\",\"type\":\"address\"},{\"name\":\"_isCostInPoly\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_version\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_upgrade\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_logicContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_upgradeData\",\"type\":\"bytes\"}],\"name\":\"LogicContractSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_securityToken\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_version\",\"type\":\"uint256\"}],\"name\":\"ModuleUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_oldSetupCost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_newSetupCost\",\"type\":\"uint256\"}],\"name\":\"ChangeSetupCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_isOldCostInPoly\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"_isNewCostInPoly\",\"type\":\"bool\"}],\"name\":\"ChangeCostType\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_module\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_moduleName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"_moduleFactory\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_creator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_setupCost\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_setupCostInPoly\",\"type\":\"uint256\"}],\"name\":\"GenerateModuleFromFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_boundType\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_major\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_minor\",\"type\":\"uint8\"},{\"indexed\":false,\"name\":\"_patch\",\"type\":\"uint8\"}],\"name\":\"ChangeSTVersionBound\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"changeCostAndType(uint256,bool)\":{\"params\":{\"_isCostInPoly\":\"new setup cost currency. USD or POLY\",\"_setupCost\":\"new setup cost\"}},\"changeDescription(string)\":{\"params\":{\"_description\":\"New description that will replace the old one.\"}},\"changeName(bytes32)\":{\"params\":{\"_name\":\"New name that will replace the old one.\"}},\"changeSTVersionBounds(string,uint8[])\":{\"params\":{\"_boundType\":\"Type of bound\",\"_newVersion\":\"new version array\"}},\"changeSetupCost(uint256)\":{\"params\":{\"_setupCost\":\"new setup cost\"}},\"changeTags(bytes32[])\":{\"params\":{\"_tagsData\":\"New list of tags\"}},\"changeTitle(string)\":{\"params\":{\"_title\":\"New Title that will replace the old one.\"}},\"constructor\":{\"params\":{\"_isCostInPoly\":\"true = cost in Poly, false = USD\",\"_logicContract\":\"Contract address that contains the logic related to `description`\",\"_polymathRegistry\":\"Address of the Polymath registry\",\"_setupCost\":\"Setup cost of the module\"}},\"deploy(bytes)\":{\"params\":{\"_data\":\"Data used for the intialization of the module factory variables\"},\"return\":\"address Contract address of the Module\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"lowerSTVersionBounds()\":{\"return\":\"lower bound\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setLogicContract(string,address,bytes)\":{\"params\":{\"_logicContract\":\"Address of deployed module logic contract referenced from proxy\",\"_upgradeData\":\"Data to be passed in call to upgradeToAndCall when a token upgrades its module\",\"_version\":\"Version of upgraded module\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateLogicContract(uint256,string,address,bytes)\":{\"params\":{\"_logicContract\":\"Address of deployed module logic contract referenced from proxy\",\"_upgrade\":\"logic contract to upgrade\",\"_upgradeData\":\"Data to be passed in call to upgradeToAndCall when a token upgrades its module\",\"_version\":\"Version of upgraded module\"}},\"upgrade(address)\":{\"params\":{\"_module\":\"Address of (proxy) module to be upgraded\"}},\"upperSTVersionBounds()\":{\"return\":\"upper bound\"}},\"title\":\"Factory for deploying CappedSTO module\"},\"userdoc\":{\"methods\":{\"changeCostAndType(uint256,bool)\":{\"notice\":\"Used to change the currency and amount of setup cost\"},\"changeDescription(string)\":{\"notice\":\"Updates the description of the ModuleFactory\"},\"changeName(bytes32)\":{\"notice\":\"Updates the name of the ModuleFactory\"},\"changeSTVersionBounds(string,uint8[])\":{\"notice\":\"Function use to change the lower and upper bound of the compatible version st\"},\"changeSetupCost(uint256)\":{\"notice\":\"Used to change the fee of the setup cost\"},\"changeTags(bytes32[])\":{\"notice\":\"Updates the tags of the ModuleFactory\"},\"changeTitle(string)\":{\"notice\":\"Updates the title of the ModuleFactory\"},\"constructor\":\"Constructor\",\"deploy(bytes)\":{\"notice\":\"Used to launch the Module with the help of factory\"},\"lowerSTVersionBounds()\":{\"notice\":\"Used to get the lower bound\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setLogicContract(string,address,bytes)\":{\"notice\":\"Used to upgrade the module factory\"},\"setupCostInPoly()\":{\"notice\":\"Get the setup cost of the module\"},\"tags()\":{\"notice\":\"Get the tags related to the module factory\"},\"types()\":{\"notice\":\"Type of the Module factory\"},\"updateLogicContract(uint256,string,address,bytes)\":{\"notice\":\"Used to update an existing token logic contract\"},\"upgrade(address)\":{\"notice\":\"Used by a security token to upgrade a given module\"},\"upperSTVersionBounds()\":{\"notice\":\"Used to get the upper bound\"},\"version()\":{\"notice\":\"Get the version related to the module factory\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol\":\"CappedSTOFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/victor/Repos/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x135291a6bf5fb3fe3eb43632609f03353a06b647983e0951e60a6bd48fab3aad\",\"urls\":[\"bzzr://f8a5b7c699087985b56e58898f166ea3b0c9f9ed42ff2f59caa69e65e9f836ea\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xb30a1bc64af3d08ef58bb262fd30828a91644da8273a90be11143b46fb5a30cb\",\"urls\":[\"bzzr://da04ef1fce9eca7ae8164b922c08fbe4f446c7f0bbb1837b5a80bb34ed5983be\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0xef41b58540d6bd264c073d4fc1debfe03a113d83a964c4d677cec23b6af14048\",\"urls\":[\"bzzr://02e4adb922cba63fa116caebd60b0e25d03ecffece8284a2c3cf1eb3a573b8ac\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/IModuleRegistry.sol\":{\"keccak256\":\"0xfab54ffd754e4d51611a7285922e811a761e7d1c62b8459818f9843aa52ddbc7\",\"urls\":[\"bzzr://d229ebc7f4572a1c894c70a7508f7f569a410c8b79d7562a45d46bf136a22a18\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x30190e594f1a7efe4bc2c6b24506b072a2dcc2a47ff11db014403363fb0ae7f6\",\"urls\":[\"bzzr://08a5cf602220b9b94b500ca1c1b8fb8de13c8324e40f5b35bde47aa21b997755\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/IPolymathRegistry.sol\":{\"keccak256\":\"0xb50253e0be51bca8e3694723947032379fbaf67af0476cfc3ccb68f2860b9fe9\",\"urls\":[\"bzzr://7b868e0b3c37223e425fcbf730ca2656d2f62fcde900854bc55220e2a49cb19a\"]},\"/C/Users/victor/Repos/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0xb84fcf7cdaa3c86009e4e54648364f927aeff98c45cb387e51bb03a9c5f28f44\",\"urls\":[\"bzzr://cf4d0943877b4d5f2b7f0ec70892d894ede2c8b8ee5df169a487955cba4cf72d\"]},\"/C/Users/victor/Repos/polymath-core/contracts/libraries/DecimalMath.sol\":{\"keccak256\":\"0xb8d2b9b9d04899b338cedf9da11131c1a3a5e2af2a10fb3a17954fb578d8cc09\",\"urls\":[\"bzzr://fd2ead6d1ae8a0f44e61af900e82dedfba2992fb5e9ca5c080cbb6bfc599f9a2\"]},\"/C/Users/victor/Repos/polymath-core/contracts/libraries/Util.sol\":{\"keccak256\":\"0xb89c73f9e99d888087543ca42846efd86381fd54bc269fcd667599ebb6423ac9\",\"urls\":[\"bzzr://d04ffd19b7bbdf5de91ae46ab7d491b58a490646f63961e09cee356ed8897476\"]},\"/C/Users/victor/Repos/polymath-core/contracts/libraries/VersionUtils.sol\":{\"keccak256\":\"0xe35c41e6357e13a58dd20cd51f2695d490cf6db816453e6d5191ec7c6afc3163\",\"urls\":[\"bzzr://fb7ee2115ab5e0685295acff5c60affa1d2a6d2d2fd3d0e84c4fbab17a25ecda\"]},\"/C/Users/victor/Repos/polymath-core/contracts/modules/ModuleFactory.sol\":{\"keccak256\":\"0x65991c20f153158514e6f7738c28e5f4163a83a00c8ad770015fa0d6f036638d\",\"urls\":[\"bzzr://ad04124a256e1ad16833179cd3af76840a4cbd9001a03b7cc5dd0579975a26c6\"]},\"/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol\":{\"keccak256\":\"0xa961fe0ba78a358a05d1ad38a6d5fd7a56058ebd9b3a87a21766b87b79a4ecad\",\"urls\":[\"bzzr://9c48b7ddec116e6cbcd062fcf1453c6dc8c1a392c183ae6109d06c0a836f97d8\"]},\"/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol\":{\"keccak256\":\"0xbc6553e5fae51ef50059296e4db38184da4af3bc5d024c71ce6abda94c12612e\",\"urls\":[\"bzzr://ae9e16bf54b8bf1c0b5bd371f99b14b75a555f288804f80e94756c123a7c6500\"]},\"/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOStorage.sol\":{\"keccak256\":\"0x8155612e26a4ddc1b3e1126800113bdd1ed00ad8d981bfc672de170eba05c8b1\",\"urls\":[\"bzzr://eb4f0ac61ffe268574dddbedad740b6bf4bffafb132775edd3f06387dc95dd88\"]},\"/C/Users/victor/Repos/polymath-core/contracts/modules/UpgradableModuleFactory.sol\":{\"keccak256\":\"0xbceb2e756f0fb875e983d6998c70f26598c59014895b72492b4eef85722741ab\",\"urls\":[\"bzzr://7051fa3973ac477cd8ae633b5bed4ffdcef07021d4d0958af535482edc8cce97\"]},\"/C/Users/victor/Repos/polymath-core/contracts/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0x5c32c500f7c107350bc0c345e1ee6a2a008c5df6d29bc7c09c6880ae8ec075ad\",\"urls\":[\"bzzr://fe211a28ce5ffaa82cfeeff4d47ea0d1a2c53010fe4938d0a2cd2e70f9110ad4\"]},\"/C/Users/victor/Repos/polymath-core/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x29256534e188f9fec5d5311be495d024ba67ed1a58dafd26ca6bed50c3ab883c\",\"urls\":[\"bzzr://645acb9fb7723c45720e0cc52db460cb7a6d9cb6546c1f5aab8e9bb683074551\"]},\"/C/Users/victor/Repos/polymath-core/contracts/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x06e505c39048f0eccc64b23146156cbecbecb10f8c90f006611d0c9161cdb6a6\",\"urls\":[\"bzzr://7c43dc6b45146278265420baa0ba1b63280be2bc9e9cae18687ce8884669fbd9\"]},\"/C/Users/victor/Repos/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd8e050c4238cc894c5b9803a2e3d93e8eda8a10be9334ab2f89359976494a653\",\"urls\":[\"bzzr://4999443e783062d597bacac7706bf71cec038f9a918fed231e9a49d0973ac0a4\"]},\"/C/Users/victor/Repos/polymath-core/contracts/storage/modules/STO/STOStorage.sol\":{\"keccak256\":\"0x18f4fda13a1ef106f653fac80ea32ceae4e11e01eeb75476488e0325948326a2\",\"urls\":[\"bzzr://13dea86bff1570e9d78a0c076f27880e2b591e379364fe0b17c2770e61d2c446\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x080fa336eb92fca1f96bf5c7738b6ef6e23582809d81868e9498c08e1207c125\",\"urls\":[\"bzzr://3bc299fd722679f1313dc1387e2efc0591dcddc3727b6a7ccc98132c6e02f323\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620002135760003560e01c80637284e4161162000129578063aa934d0c11620000b1578063de6b7e09116200007b578063de6b7e091462000938578063e61204131462000942578063f2fde38b14620009ec578063fb9724561462000a155762000213565b8063aa934d0c1462000821578063c97767f0146200082b578063ccbff9791462000853578063d26633e0146200085d5762000213565b80638da5cb5b11620000f35780638da5cb5b14620007b35780638f32d59b14620007bd578063a01fe64614620007c7578063a76a0cad14620007f85762000213565b80637284e416146200077557806377282b70146200077f5780637e363ffa1462000789578063898855ed14620007935762000213565b80633c1fdaa511620001ad57806360fece01116200017757806360fece0114620005e85780636b68e14414620005f25780636d4e259c146200070f578063715018a6146200076b5762000213565b80633c1fdaa5146200046a578063436846b8146200053e5780634a79d50c146200055c57806354fd4d5014620005de5762000213565b80630c4c2d8f11620001ef5780630c4c2d8f14620002ef578063265a7218146200030f5780632d0aa22e14620003b65780632dbe07c714620003c05762000213565b8062774360146200021857806306fdde0314620002a85780630900f01014620002c4575b600080fd5b6200028c600480360360208110156200023057600080fd5b810190602081018135600160201b8111156200024b57600080fd5b8201836020820111156200025e57600080fd5b803590602001918460018302840111600160201b831117156200028057600080fd5b50909250905062000adc565b604080516001600160a01b039092168252519081900360200190f35b620002b262000cc5565b60408051918252519081900360200190f35b620002ed60048036036020811015620002dc57600080fd5b50356001600160a01b031662000ccb565b005b620002ed600480360360208110156200030757600080fd5b503562000f99565b620002ed600480360360208110156200032757600080fd5b810190602081018135600160201b8111156200034257600080fd5b8201836020820111156200035557600080fd5b803590602001918460208302840111600160201b831117156200037757600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955062000fef945050505050565b620002b262001068565b620002ed60048036036020811015620003d857600080fd5b810190602081018135600160201b811115620003f357600080fd5b8201836020820111156200040657600080fd5b803590602001918460018302840111600160201b831117156200042857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955062001220945050505050565b620002ed600480360360608110156200048257600080fd5b810190602081018135600160201b8111156200049d57600080fd5b820183602082011115620004b057600080fd5b803590602001918460018302840111600160201b83111715620004d257600080fd5b919390926001600160a01b0383351692604081019060200135600160201b811115620004fd57600080fd5b8201836020820111156200051057600080fd5b803590602001918460018302840111600160201b831117156200053257600080fd5b50909250905062001295565b62000548620014fe565b604080519115158252519081900360200190f35b6200056662001507565b6040805160208082528351818301528351919283929083019185019080838360005b83811015620005a257818101518382015260200162000588565b50505050905090810190601f168015620005d05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6200056662001599565b620002b26200163f565b62000612600480360360208110156200060a57600080fd5b503562001645565b6040518080602001846001600160a01b03166001600160a01b0316815260200180602001838103835286818151815260200191508051906020019080838360005b838110156200066d57818101518382015260200162000653565b50505050905090810190601f1680156200069b5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015620006d0578181015183820152602001620006b6565b50505050905090810190601f168015620006fe5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b6200071962001792565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620007575781810151838201526020016200073d565b505050509050019250505060405180910390f35b620002ed620017d3565b6200056662001831565b6200028c6200188f565b620002b26200189e565b620002ed60048036036020811015620007ab57600080fd5b5035620018a4565b6200028c62001905565b6200054862001914565b620002b260048036036040811015620007df57600080fd5b506001600160a01b038135811691602001351662001925565b6200028c600480360360208110156200081057600080fd5b50356001600160a01b031662001942565b620007196200195d565b620002ed600480360360408110156200084357600080fd5b5080359060200135151562001999565b6200071962001a47565b620002ed600480360360808110156200087557600080fd5b81359190810190604081016020820135600160201b8111156200089757600080fd5b820183602082011115620008aa57600080fd5b803590602001918460018302840111600160201b83111715620008cc57600080fd5b919390926001600160a01b0383351692604081019060200135600160201b811115620008f757600080fd5b8201836020820111156200090a57600080fd5b803590602001918460018302840111600160201b831117156200092c57600080fd5b50909250905062001abe565b6200071962001ddd565b620002ed600480360360208110156200095a57600080fd5b810190602081018135600160201b8111156200097557600080fd5b8201836020820111156200098857600080fd5b803590602001918460018302840111600160201b83111715620009aa57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955062001e36945050505050565b620002ed6004803603602081101562000a0457600080fd5b50356001600160a01b031662001eab565b620002ed6004803603604081101562000a2d57600080fd5b810190602081018135600160201b81111562000a4857600080fd5b82018360208201111562000a5b57600080fd5b803590602001918460018302840111600160201b8311171562000a7d57600080fd5b919390929091602081019035600160201b81111562000a9b57600080fd5b82018360208201111562000aae57600080fd5b803590602001918460208302840111600160201b8311171562000ad057600080fd5b50909250905062001ecd565b600e546000908152600b602090815260408083206001548251600160e01b63bf40fac10281526004810185905260096024820152600160b91b682837b63caa37b5b2b702604482015292518594929333936001600160a01b039093169263bf40fac192606480840193829003018186803b15801562000b5a57600080fd5b505afa15801562000b6f573d6000803e3d6000fd5b505050506040513d602081101562000b8657600080fd5b5051600e546000908152600b6020526040908190206001015490516001600160a01b039091169062000bb89062002ef5565b6001600160a01b0380851660208301528381166040830152821660608201526080808252855460026000196101006001841615020190911604908201819052819060a08201908790801562000c515780601f1062000c255761010080835404028352916020019162000c51565b820191906000526020600020905b81548152906001019060200180831162000c3357829003601f168201915b505095505050505050604051809103906000f08015801562000c77573d6000803e3d6000fd5b50905062000cbc8185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620023c592505050565b90505b92915050565b60035481565b6001600160a01b038181166000908152600d602052604090205416331462000d3d5760408051600160e51b62461bcd02815260206004820152601060248201527f496e636f72726563742063616c6c657200000000000000000000000000000000604482015290519081900360640190fd5b336000908152600c602090815260408083206001600160a01b0385168452909152902054600e5460019091019081111562000dc25760408051600160e51b62461bcd02815260206004820152601160248201527f496e636f72726563742076657273696f6e000000000000000000000000000000604482015290519081900360640190fd5b6000818152600b6020526040908190206001808201549251600160e01b63958a41dd0281526001600160a01b03938416602482018190526060600483019081528454600260001995821615610100029590950116849004606484018190529588169563958a41dd959492939285019282916044820191608401908790801562000e8f5780601f1062000e635761010080835404028352916020019162000e8f565b820191906000526020600020905b81548152906001019060200180831162000e7157829003601f168201915b505083810382528454600260001961010060018416150201909116048082526020909101908590801562000f075780601f1062000edb5761010080835404028352916020019162000f07565b820191906000526020600020905b81548152906001019060200180831162000ee957829003601f168201915b505095505050505050600060405180830381600087803b15801562000f2b57600080fd5b505af115801562000f40573d6000803e3d6000fd5b5050336000818152600c602090815260408083206001600160a01b038916808552925280832087905551869550929350917f6b272426dd4b3366b853f4e32bb7fce7392e461688b7a8bf942bd61f756f1d0f9190a45050565b62000fa362001914565b62000fad57600080fd5b600954604080519182526020820183905280517f599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be9281900390910190a1600955565b62000ff962001914565b6200100357600080fd5b60008151116200104f5760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b125b9d985b1a59081d195e1d02604482015290519081900360640190fd5b80516200106490600790602084019062002f03565b5050565b60085460009060ff16156200108157506009546200121d565b600154604080518082018252601381527f537461626c65506f6c795573644f7261636c650000000000000000000000000060208083019182529251600160e01b63bf40fac1028152600481019384528251602482015282516000956001600160a01b03169463bf40fac1949390928392604490910191908083838b5b8381101562001117578181015183820152602001620010fd565b50505050905090810190601f168015620011455780820380516001836020036101000a031916815260200191505b509250505060206040518083038186803b1580156200116357600080fd5b505afa15801562001178573d6000803e3d6000fd5b505050506040513d60208110156200118f57600080fd5b505160408051600160e11b634c6afee502815290516001600160a01b03909216916398d5fdca916004808201926020929091908290030181600087803b158015620011d957600080fd5b505af1158015620011ee573d6000803e3d6000fd5b505050506040513d60208110156200120557600080fd5b505160095490915062001219908262002418565b9150505b90565b6200122a62001914565b6200123457600080fd5b6000815111620012805760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b125b9d985b1a59081d195e1d02604482015290519081900360640190fd5b80516200106490600490602084019062002f53565b6200129f62001914565b620012a957600080fd5b600b6000600e5481526020019081526020016000206000016040516020018082805460018160011615610100020316600290048015620013235780601f106200130057610100808354040283529182019162001323565b820191906000526020600020905b8154815290600101906020018083116200130e575b5050915050604051602081830303815290604052805190602001208585604051602001808383808284378083019250505092505050604051602081830303815290604052805190602001201415620013b75760408051600160e51b62461bcd02815260206004820152600c6024820152600160a11b6b29b0b6b2903b32b939b4b7b702604482015290519081900360640190fd5b600e546000908152600b60205260409020600101546001600160a01b0384811691161415620014225760408051600160e51b62461bcd02815260206004820152600c6024820152600160a11b6b29b0b6b2903b32b939b4b7b702604482015290519081900360640190fd5b6001600160a01b038316620014765760408051600160e51b62461bcd02815260206004820152600f6024820152600160881b6e496e76616c6964206164647265737302604482015290519081900360640190fd5b600e805460010190819055604080516020601f8801819004810282018101909252868152620014f79291889088908190840183828082843760009201919091525050604080516020601f8901819004810282018101909252878152899350915087908790819084018382808284376000920191909152506200244d92505050565b5050505050565b60085460ff1681565b6004805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620015915780601f10620015655761010080835404028352916020019162001591565b820191906000526020600020905b8154815290600101906020018083116200157357829003601f168201915b505050505081565b600e546000908152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015620016355780601f10620016095761010080835404028352916020019162001635565b820191906000526020600020905b8154815290600101906020018083116200161757829003601f168201915b5050505050905090565b600e5481565b600b6020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015620016e05780601f10620016b457610100808354040283529160200191620016e0565b820191906000526020600020905b815481529060010190602001808311620016c257829003601f168201915b505050506001838101546002808601805460408051602061010097841615979097026000190190921693909304601f810186900486028201860190935282815295966001600160a01b03909316959294509192830182828015620017885780601f106200175c5761010080835404028352916020019162001788565b820191906000526020600020905b8154815290600101906020018083116200176a57829003601f168201915b5050505050905083565b60408051600160b21b691b1bddd95c909bdd5b99028152600a81810152905190819003602a01902054606090620017ce9062ffffff16620026f4565b905090565b620017dd62001914565b620017e757600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015620015915780601f10620015655761010080835404028352916020019162001591565b6001546001600160a01b031681565b60095481565b620018ae62001914565b620018b857600080fd5b80620019005760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b125b9d985b1a59081d195e1d02604482015290519081900360640190fd5b600355565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b600c60209081526000928352604080842090915290825290205481565b600d602052600090815260409020546001600160a01b031681565b60408051600160b21b691d5c1c195c909bdd5b99028152600a81810152905190819003602a01902054606090620017ce9062ffffff16620026f4565b620019a362001914565b620019ad57600080fd5b600954604080519182526020820184905280517f599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be9281900390910190a16008546040805160ff90921615158252821515602083015280517f243562d4d8acd21cf96c899dfa0c26774212a5181e5e40f852c7e6b66b7b96db9281900390910190a16009919091556008805460ff1916911515919091179055565b606060068054806020026020016040519081016040528092919081815260200182805480156200163557602002820191906000526020600020906000905b825461010083900a900460ff1681526020600192830181810494850194909303909202910180841162001a855790505050505050905090565b62001ac862001914565b62001ad257600080fd5b600e5486111562001b2d5760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420757067726164650000000000000000000000000000000000604482015290519081900360640190fd5b851562001cb057600b6000600188038152602001908152602001600020600001604051602001808280546001816001161561010002031660029004801562001baf5780601f1062001b8c57610100808354040283529182019162001baf565b820191906000526020600020905b81548152906001019060200180831162001b9a575b505091505060405160208183030381529060405280519060200120858560405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120141562001c435760408051600160e51b62461bcd02815260206004820152600c6024820152600160a11b6b29b0b6b2903b32b939b4b7b702604482015290519081900360640190fd5b60001986016000908152600b60205260409020600101546001600160a01b038481169116141562001cb05760408051600160e51b62461bcd02815260206004820152600c6024820152600160a11b6b29b0b6b2903b32b939b4b7b702604482015290519081900360640190fd5b6001600160a01b03831662001d045760408051600160e51b62461bcd02815260206004820152600f6024820152600160881b6e496e76616c6964206164647265737302604482015290519081900360640190fd5b6004811162001d5d5760408051600160e51b62461bcd02815260206004820152600f60248201527f496e76616c696420557067726164650000000000000000000000000000000000604482015290519081900360640190fd5b62001dd58686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8901819004810282018101909252878152899350915087908790819084018382808284376000920191909152506200244d92505050565b505050505050565b606060078054806020026020016040519081016040528092919081815260200182805480156200163557602002820191906000526020600020905b81548152602001906001019080831162001e18575050505050905090565b62001e4062001914565b62001e4a57600080fd5b600081511162001e965760408051600160e51b62461bcd02815260206004820152600c6024820152600160a21b6b125b9d985b1a59081d195e1d02604482015290519081900360640190fd5b80516200106490600590602084019062002f53565b62001eb562001914565b62001ebf57600080fd5b62001eca8162002799565b50565b62001ed762001914565b62001ee157600080fd5b6040516020018080600160b21b691b1bddd95c909bdd5b9902815250600a01905060405160208183030381529060405280519060200120848460405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120148062001fb957506040516020018080600160b21b691d5c1c195c909bdd5b9902815250600a01905060405160208183030381529060405280519060200120848460405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120145b6200200e5760408051600160e51b62461bcd02815260206004820152601260248201527f496e76616c696420626f756e6420747970650000000000000000000000000000604482015290519081900360640190fd5b600381146200205c5760408051600160e51b62461bcd02815260206004820152600f6024820152600160891b6e24b73b30b634b2103b32b939b4b7b702604482015290519081900360640190fd5b600062ffffff16600a858560405180838380828437919091019485525050604051928390036020019092205462ffffff16929092149150620022609050576060620020d4600a868660405180838380828437919091019485525050604051928390036020019092205462ffffff169150620026f49050565b90506040516020018080600160b21b691b1bddd95c909bdd5b9902815250600a019050604051602081830303815290604052805190602001208585604051602001808383808284378083019250505092505050604051602081830303815290604052805190602001201415620021d4576200218483838080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525085925062002808915050565b620021ce5760408051600160e51b62461bcd02815260206004820152600f6024820152600160891b6e24b73b30b634b2103b32b939b4b7b702604482015290519081900360640190fd5b6200225e565b620022148383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508592506200291e915050565b6200225e5760408051600160e51b62461bcd02815260206004820152600f6024820152600160891b6e24b73b30b634b2103b32b939b4b7b702604482015290519081900360640190fd5b505b620022b2828260008181106200227257fe5b9050602002013560ff16838360018181106200228a57fe5b9050602002013560ff1684846002818110620022a257fe5b9050602002013560ff1662002a2a565b600a85856040518083838082843791909101948552505060405192839003602001909220805462ffffff9490941662ffffff1990941693909317909255507f5b67e16edaf7fc70c8d065ea6e70b97ed944d98fe593b04d682216615a3b04db9050848484846000816200232157fe5b9050602002013560ff16858560018181106200233957fe5b9050602002013560ff16868660028181106200235157fe5b9050602002013560ff1660405180806020018560ff1660ff1681526020018460ff1660ff1681526020018360ff1660ff1681526020018281038252878782818152602001925080828437600083820152604051601f909101601f19169092018290039850909650505050505050a150505050565b620023d1828262002a42565b506001600160a01b03166000818152600d6020908152604080832080546001600160a01b03191633908117909155600e54908452600c835281842094845293909152902055565b6000816200243d6200243385670de0b6b3a764000062002ca5565b6002850462002cd0565b816200244557fe5b049392505050565b6000848152600b6020908152604090912084516200246e9286019062002f53565b506000848152600b602090815260409091206001810180546001600160a01b0319166001600160a01b0386161790558251620024b39260029092019184019062002f53565b5060015460408051600160e01b63bf40fac1028152602060048201819052600e60248301527f4d6f64756c655265676973747279000000000000000000000000000000000000604483015291516000936001600160a01b03169263bf40fac19260648082019391829003018186803b1580156200252f57600080fd5b505afa15801562002544573d6000803e3d6000fd5b505050506040513d60208110156200255b57600080fd5b505160408051600160e01b63cf5f591d02815230600482015290519192506001600160a01b0383169163cf5f591d9160248082019260009290919082900301818387803b158015620025ac57600080fd5b505af1158015620025c1573d6000803e3d6000fd5b505050507fbcda874f53511fb6338990baf12d53b3bcef8cb0247ba5f7673450267395515a848685856040518080602001858152602001846001600160a01b03166001600160a01b0316815260200180602001838103835287818151815260200191508051906020019080838360005b838110156200264b57818101518382015260200162002631565b50505050905090810190601f168015620026795780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015620026ae57818101518382015260200162002694565b50505050905090810190601f168015620026dc5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a15050505050565b6040805160038082526080820190925260609182919060208201838038833901905050905060108362ffffff16901c816000815181106200273157fe5b602002602001019060ff16908160ff168152505060088362ffffff16901c816001815181106200275d57fe5b602002602001019060ff16908160ff168152505082816002815181106200278057fe5b60ff909216602092830291909101909101529050919050565b6001600160a01b038116620027ad57600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600082516003146200281957600080fd5b81516003146200282857600080fd5b60005b83518160ff1610156200291457828160ff16815181106200284857fe5b602002602001015160ff16848260ff16815181106200286357fe5b602002602001015160ff1614156200287b576200290b565b828160ff16815181106200288b57fe5b602002602001015160ff16848260ff1681518110620028a657fe5b602002602001015160ff161015620028c357600191505062000cbf565b828160ff1681518110620028d357fe5b602002602001015160ff16848260ff1681518110620028ee57fe5b602002602001015160ff1611156200290b57600091505062000cbf565b6001016200282b565b5060019392505050565b600082516003146200292f57600080fd5b81516003146200293e57600080fd5b60005b83518160ff1610156200291457828160ff16815181106200295e57fe5b602002602001015160ff16848260ff16815181106200297957fe5b602002602001015160ff161415620029915762002a21565b828160ff1681518110620029a157fe5b602002602001015160ff16848260ff1681518110620029bc57fe5b602002602001015160ff161115620029d957600191505062000cbf565b828160ff1681518110620029e957fe5b602002602001015160ff16848260ff168151811062002a0457fe5b602002602001015160ff16101562002a2157600091505062000cbf565b60010162002941565b60ff90811691811660081b921660101b919091171790565b600062002a4e62002ce3565b90506000836001600160a01b0316631613ec9d6040518163ffffffff1660e01b815260040160206040518083038186803b15801562002a8c57600080fd5b505afa15801562002aa1573d6000803e3d6000fd5b505050506040513d602081101562002ab857600080fd5b505190506001600160e01b031981161562002c46576001600160e01b0319811662002ae38462002e90565b6001600160e01b0319161462002b435760408051600160e51b62461bcd02815260206004820152601a60248201527f50726f76696465642064617461206973206e6f742076616c6964000000000000604482015290519081900360640190fd5b6000846001600160a01b0316846040518082805190602001908083835b6020831062002b815780518252601f19909201916020918201910162002b60565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811462002be5576040519150601f19603f3d011682016040523d82523d6000602084013e62002bea565b606091505b505090508062002c445760408051600160e51b62461bcd02815260206004820152601b60248201527f556e7375636365737366756c20696e697469616c697a6174696f6e0000000000604482015290519081900360640190fd5b505b600354600954604080516001600160a01b03881681523360208201528082019290925260608201859052513092917fb68b4973fbce93f056103272c1f3f53b607527138d7e323b7b94f7ac169ebf77919081900360800190a350505050565b60008262002cb65750600062000cbf565b8282028284828162002cc457fe5b041462000cbc57600080fd5b60008282018381101562000cbc57600080fd5b60008062002cf062001068565b60015460408051600160e01b63bf40fac102815260206004820181905260096024830152600160b91b682837b63caa37b5b2b702604483015291519394506000936001600160a01b039093169263bf40fac192606480840193919291829003018186803b15801562002d6157600080fd5b505afa15801562002d76573d6000803e3d6000fd5b505050506040513d602081101562002d8d57600080fd5b50519050811562002e8a57806001600160a01b03166323b872dd3362002db262001905565b856040518463ffffffff1660e01b815260040180846001600160a01b03166001600160a01b03168152602001836001600160a01b03166001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801562002e1c57600080fd5b505af115801562002e31573d6000803e3d6000fd5b505050506040513d602081101562002e4857600080fd5b505162002e8a57604051600160e51b62461bcd028152600401808060200182810382526025815260200180620046f86025913960400191505060405180910390fd5b50905090565b600080600483511062002ea557600462002ea8565b82515b905060005b8181101562002eee578060080284828151811062002ec757fe5b01602001516001600160f81b031960f891821c90911b16901c929092179160010162002ead565b5050919050565b6117158062002fe383390190565b82805482825590600052602060002090810192821562002f41579160200282015b8281111562002f4157825182559160200191906001019062002f24565b5062002f4f92915062002fc5565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062002f9657805160ff191683800117855562002f41565b8280016001018555821562002f41579182018281111562002f4157825182559160200191906001019062002f24565b6200121d91905b8082111562002f4f576000815560010162002fcc56fe60806040526000805460ff19169055600e8054600160a01b60ff02191690553480156200002b57600080fd5b506040516200171538038062001715833981018060405260808110156200005157600080fd5b8101908080516401000000008111156200006a57600080fd5b820160208101848111156200007e57600080fd5b81516401000000008111828201871017156200009957600080fd5b50506020808301516040840151606090940151600d80546001600160a01b038085166001600160a01b031992831617909255600c8054821633908117909155600e8054938916939092169290921790556001600f5593965090945091620001049162000181811b901c565b6001600160a01b03811662000165576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806200166d6027913960400191505060405180910390fd5b6200017784826200021960201b60201c565b505050506200063b565b6001600160a01b038116620001f757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f416464726573732073686f756c64206e6f742062652030780000000000000000604482015290519081900360640190fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b6011546001600160a01b038281169116148015906200024057506001600160a01b03811615155b62000297576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526046815260200180620016946046913960600191505060405180910390fd5b620002ad816200059060201b62000e5a1760201c565b62000304576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180620016da603b913960400191505060405180910390fd5b600082511162000360576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806200164b6022913960400191505060405180910390fd5b816040516020018082805190602001908083835b60208310620003955780518252601f19909201916020918201910162000374565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060106040516020018082805460018160011615610100020316600290048015620004345780601f106200041157610100808354040283529182019162000434565b820191906000526020600020905b8154815290600101906020018083116200041f575b5050915050604051602081830303815290604052805190602001201415620004bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4e65772076657273696f6e20657175616c7320746f2063757272656e74000000604482015290519081900360640190fd5b8151620004d290601090602085019062000596565b50601180546001600160a01b0319166001600160a01b03831690811790915560408051602080825285518183015285517f8e05e0e35ff592971ca8b477d4285a33a61ded208d644042667b78693a472f5e938793928392918301919085019080838360005b838110156200055157818101518382015260200162000537565b50505050905090810190601f1680156200057f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b3b151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005d957805160ff191683800117855562000609565b8280016001018555821562000609579182015b8281111562000609578251825591602001919060010190620005ec565b50620006179291506200061b565b5090565b6200063891905b8082111562000617576000815560010162000622565b90565b611000806200064b6000396000f3fe60806040526004361061014b5760003560e01c80636f7bc9be116100b6578063b84dfbd21161006f578063b84dfbd2146104cf578063c45a0155146104e4578063c4d2c6bd146104f9578063d143a37914610526578063d7e64c0014610553578063f1739cae146105685761014b565b80636f7bc9be146103795780636faa22a5146103ac57806378e97925146103c1578063958a41dd146103d6578063983d2737146104a5578063b2cca39d146104ba5761014b565b8063521eb27311610108578063521eb2731461021557806354fd4d501461022a5780635a8b1a9f146102b45780635c60da1b1461033a5780635c975abb1461034f57806363b20117146103645761014b565b8063025313a2146101555780632a0acc6a146101865780632c4e722e146101ad5780632df413e2146101c25780633197cbb6146101eb578063355274ea14610200575b61015361059b565b005b34801561016157600080fd5b5061016a6105ad565b604080516001600160a01b039092168252519081900360200190f35b34801561019257600080fd5b5061019b6105ea565b60408051918252519081900360200190f35b3480156101b957600080fd5b5061019b6105f9565b3480156101ce57600080fd5b506101d76105ff565b604080519115158252519081900360200190f35b3480156101f757600080fd5b5061019b610608565b34801561020c57600080fd5b5061019b61060e565b34801561022157600080fd5b5061016a610614565b34801561023657600080fd5b5061023f610623565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102c057600080fd5b50610153600480360360408110156102d757600080fd5b8101906020810181356401000000008111156102f257600080fd5b82018360208201111561030457600080fd5b8035906020019184600183028401116401000000008311171561032657600080fd5b9193509150356001600160a01b03166106d8565b34801561034657600080fd5b5061016a61074c565b34801561035b57600080fd5b506101d7610777565b34801561037057600080fd5b5061019b610787565b34801561038557600080fd5b5061019b6004803603602081101561039c57600080fd5b50356001600160a01b031661078d565b3480156103b857600080fd5b5061016a61079f565b3480156103cd57600080fd5b5061019b6107ae565b610153600480360360608110156103ec57600080fd5b81019060208101813564010000000081111561040757600080fd5b82018360208201111561041957600080fd5b8035906020019184600183028401116401000000008311171561043b57600080fd5b919390926001600160a01b038335169260408101906020013564010000000081111561046657600080fd5b82018360208201111561047857600080fd5b8035906020019184600183028401116401000000008311171561049a57600080fd5b5090925090506107b4565b3480156104b157600080fd5b5061019b61085e565b3480156104c657600080fd5b5061019b610870565b3480156104db57600080fd5b5061016a610876565b3480156104f057600080fd5b5061016a610885565b34801561050557600080fd5b5061019b6004803603602081101561051c57600080fd5b503560ff16610894565b34801561053257600080fd5b506101d76004803603602081101561054957600080fd5b503560ff166108a6565b34801561055f57600080fd5b5061019b6108bb565b34801561057457600080fd5b506101536004803603602081101561058b57600080fd5b50356001600160a01b03166108c1565b6105ab6105a66109a4565b6109b3565b565b60006105b76109d7565b6001600160a01b0316336001600160a01b031614156105df576105d86109d7565b90506105e7565b6105e761059b565b90565b600160d91b6420a226a4a70281565b60015481565b60005460ff1681565b60075481565b60025481565b600a546001600160a01b031681565b606061062d6109d7565b6001600160a01b0316336001600160a01b031614156105df576010805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b505050505090506105e7565b6106e06109d7565b6001600160a01b0316336001600160a01b0316141561073f5761073a83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508592506109e6915050565b610747565b61074761059b565b505050565b60006107566109d7565b6001600160a01b0316336001600160a01b031614156105df576105d86109a4565b600e54600160a01b900460ff1681565b600b5481565b60036020526000908152604090205481565b600e546001600160a01b031681565b60065481565b6107bc6109d7565b6001600160a01b0316336001600160a01b0316141561084f5761084a85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f880181900481028201810190925286815288935091508690869081908401838280828437600092019190915250610ce192505050565b610857565b61085761059b565b5050505050565b600160c11b6727a822a920aa27a90281565b60085481565b600d546001600160a01b031681565b600c546001600160a01b031681565b60056020526000908152604090205481565b60046020526000908152604090205460ff1681565b60095481565b6108c96109d7565b6001600160a01b0316336001600160a01b03161415610999576001600160a01b0381166109405760408051600160e51b62461bcd02815260206004820152601860248201527f416464726573732073686f756c64206e6f742062652030780000000000000000604482015290519081900360640190fd5b7f5a3e66efaa1e445ebd894728a69d6959842ea1e97bd79b892797106e270efcd96109696109d7565b604080516001600160a01b03928316815291841660208301528051918290030190a161099481610dda565b6109a1565b6109a161059b565b50565b6011546001600160a01b031690565b3660008037600080366000845af43d6000803e8080156109d2573d6000f35b3d6000fd5b6012546001600160a01b031690565b6011546001600160a01b03828116911614801590610a0c57506001600160a01b03811615155b610a4a57604051600160e51b62461bcd028152600401808060200182810382526046815260200180610f546046913960600191505060405180910390fd5b610a5381610e5a565b610a9157604051600160e51b62461bcd02815260040180806020018281038252603b815260200180610f9a603b913960400191505060405180910390fd5b6000825111610ad457604051600160e51b62461bcd028152600401808060200182810382526022815260200180610ef96022913960400191505060405180910390fd5b816040516020018082805190602001908083835b60208310610b075780518252601f199092019160209182019101610ae8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060106040516020018082805460018160011615610100020316600290048015610ba25780601f10610b80576101008083540402835291820191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8e575b5050915050604051602081830303815290604052805190602001201415610c135760408051600160e51b62461bcd02815260206004820152601d60248201527f4e65772076657273696f6e20657175616c7320746f2063757272656e74000000604482015290519081900360640190fd5b8151610c26906010906020850190610e60565b50601180546001600160a01b0319166001600160a01b03831690811790915560408051602080825285518183015285517f8e05e0e35ff592971ca8b477d4285a33a61ded208d644042667b78693a472f5e938793928392918301919085019080838360005b83811015610ca3578181015183820152602001610c8b565b50505050905090810190601f168015610cd05780820380516001836020036101000a031916815260200191505b509250505060405180910390a25050565b610ceb83836109e6565b6000306001600160a01b031634836040518082805190602001908083835b60208310610d285780518252601f199092019160209182019101610d09565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610d8a576040519150601f19603f3d011682016040523d82523d6000602084013e610d8f565b606091505b50508091505080610dd457604051600160e51b62461bcd028152600401808060200182810382526039815260200180610f1b6039913960400191505060405180910390fd5b50505050565b6001600160a01b038116610e385760408051600160e51b62461bcd02815260206004820152601860248201527f416464726573732073686f756c64206e6f742062652030780000000000000000604482015290519081900360640190fd5b601280546001600160a01b0319166001600160a01b0392909216919091179055565b3b151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ea157805160ff1916838001178555610ece565b82800160010185558215610ece579182015b82811115610ece578251825591602001919060010190610eb3565b50610eda929150610ede565b5090565b6105e791905b80821115610eda5760008155600101610ee456fe56657273696f6e2073686f756c64206e6f7420626520656d70747920737472696e674661696c20696e20657865637574696e67207468652066756e6374696f6e206f6620696d706c656d656e746174696f6e20636f6e74726163744f6c642061646472657373206973206e6f7420616c6c6f77656420616e6420696d706c656d656e746174696f6e20616464726573732073686f756c64206e6f7420626520307843616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a165627a7a72305820967dc5d25c6e54edd43db00d7bbd3d40134e71493067e86d804267b9a8a7faf9002956657273696f6e2073686f756c64206e6f7420626520656d70747920737472696e67496d706c656d656e746174696f6e20616464726573732073686f756c64206e6f742062652030784f6c642061646472657373206973206e6f7420616c6c6f77656420616e6420696d706c656d656e746174696f6e20616464726573732073686f756c64206e6f7420626520307843616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373496e73756666696369656e7420616c6c6f77616e636520666f72206d6f64756c6520666565a165627a7a72305820345685dff81f78b661e54718009dc3d4d755c4966cc188127c5ffa6d444388260029",
  "sourceMap": "157:1956:99:-;;;532:1015;8:9:-1;5:2;;;30:1;27;20:12;5:2;532:1015:99;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;532:1015:99;;;;;;;;;;;;;;;;;1400:453:140;;;;;;;;;;;;;;;;;;-1:-1:-1;515:19:169;;-1:-1:-1;;;;;;515:19:169;524:10;515:19;;;;549:40;;532:1015:99;;;;;;;;1400:453:140;;532:1015:99;;;;;;;;;;;;;;-1:-1:-1;;;;;582:6:169;;;;;-1:-1:-1;549:40:169;;-1:-1:-1;;549:40:169;1338:9:92;:22;;;;1370:16;:55;;-1:-1:-1;;;;;;1370:55:92;-1:-1:-1;;;;;1370:55:92;;;;;;-1:-1:-1;1435:28:92;;-1:-1:-1;;1435:28:92;;;;;;;;;;;1670::140;;1662:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:13;;;1728:29;;;;:14;:29;;;;;;;;:43;;:60;;-1:-1:-1;;;;;;1728:60:140;-1:-1:-1;;;;;1728:60:140;;;;;1813:13;;1798:29;;;;;:48;;;;;;;;:::i;:::-;-1:-1:-1;;806:18:99;:4;:18;-1:-1:-1;;834:20:99;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;834:5:99;;-1:-1:-1;834:20:99;:::i;:::-;;864:329;;;;;;;;;;;;;;;;;;;;;:11;;:329;;;;;;:::i;:::-;-1:-1:-1;1203:9:99;27:10:-1;;39:1;23:18;;;45:23;;;1203:17:99;;;;;;;;;;;;;;1218:1;1203:17;;;;;;;;;;;;;;1230:8;27:10:-1;;23:18;;;45:23;;-1:-1;1230:23:99;;;;;;;;;27:10:-1;;23:18;;;45:23;;1263:20:99;;;;;27:10:-1;;23:18;;;45:23;;1293:21:99;;;;;27:10:-1;;23:18;;;45:23;;;1324:20:99;;;;;;;1395:47;;-1:-1:-1;;;1395:17:99;;;;;:47;;:::i;:::-;1354:38;;;;;;:24;:38;;;;;;;;;;;;;;;;;:88;;-1:-1:-1;;1354:88:99;;;;;;;;;;;;1493:47;1517:1;-1:-1:-1;;1493:17:99;1354:38;1493:17;;;;;:47;;:::i;:::-;1452:38;;;;;;:24;:38;;;;;;;;;;;;;;:88;;;;;;;-1:-1:-1;;1452:88:99;;;;;;;;;-1:-1:-1;157:1956:99;;-1:-1:-1;;;157:1956:99;1210:173:41;1362:14;;;;1339;;;1357:1;1339:19;1314:14;;1332:2;1314:20;1313:46;;;;:63;;1210:173::o;157:1956:99:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;157:1956:99;;;-1:-1:-1;157:1956:99;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "157:1956:99:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;157:1956:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:337;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1773:337:99;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1773:337:99;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1773:337:99;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1773:337:99;;-1:-1:-1;1773:337:99;-1:-1:-1;1773:337:99;:::i;:::-;;;;-1:-1:-1;;;;;1773:337:99;;;;;;;;;;;;;;668:19:92;;;:::i;:::-;;;;;;;;;;;;;;;;4616:780:140;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4616:780:140;-1:-1:-1;;;;;4616:780:140;;:::i;:::-;;2085:154:92;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2085:154:92;;:::i;3716:157::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3716:157:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3716:157:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3716:157:92;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3716:157:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3716:157:92;;-1:-1:-1;3716:157:92;;-1:-1:-1;;;;;3716:157:92:i;5822:257::-;;;:::i;2844:150::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2844:150:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2844:150:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2844:150:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2844:150:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2844:150:92;;-1:-1:-1;2844:150:92;;-1:-1:-1;;;;;2844:150:92:i;2174:545:140:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2174:545:140;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2174:545:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2174:545:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2174:545:140;;;;-1:-1:-1;;;;;2174:545:140;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2174:545:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2174:545:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2174:545:140;;-1:-1:-1;2174:545:140;-1:-1:-1;2174:545:140;:::i;798:24:92:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;693:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;693:19:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5906:117:140;;;:::i;1050:28::-;;;:::i;674:56::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;674:56:140;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;674:56:140;-1:-1:-1;;;;;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;674:56:140;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5354:153:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5354:153:92;;;;;;;;;;;;;;;;;1423:137:169;;;:::i;718:25:92:-;;;:::i;593:41::-;;;:::i;828:24::-;;;:::i;3465:135::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3465:135:92;;:::i;659:77:169:-;;;:::i;979:90::-;;;:::i;833:64:140:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;833:64:140;;;;;;;;;;:::i;963:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;963:57:140;-1:-1:-1;;;;;963:57:140;;:::i;5599:153:92:-;;;:::i;2434:272::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2434:272:92;;;;;;;;;:::i;1534:88::-;;;:::i;3102:799:140:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3102:799:140;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:799:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:799:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:799:140;;;;-1:-1:-1;;;;;3102:799:140;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:799:140;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:799:140;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3102:799:140;;-1:-1:-1;3102:799:140;-1:-1:-1;3102:799:140;:::i;1702:88:92:-;;;:::i;3150:180::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3150:180:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3150:180:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3150:180:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3150:180:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3150:180:92;;-1:-1:-1;3150:180:92;;-1:-1:-1;;;;;3150:180:92:i;1731:107:169:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:169;-1:-1:-1;;;;;1731:107:169;;:::i;4071:1191:92:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4071:1191:92;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4071:1191:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4071:1191:92;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4071:1191:92;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4071:1191:92;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4071:1191:92;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;4071:1191:92;;-1:-1:-1;4071:1191:92;-1:-1:-1;4071:1191:92;:::i;1773:337:99:-;1909:13;;1828:7;1894:29;;;:14;:29;;;;;;;;1945:16;;:40;;-1:-1:-1;;;;;1945:40:99;;;;;;;;;;;;;-1:-1:-1;;;;;1945:40:99;;;;;;1828:7;;1894:29;;1933:10;;-1:-1:-1;;;;;1945:16:99;;;;:27;;:40;;;;;;;;;;:16;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;1945:40:99;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1945:40:99;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1945:40:99;2002:13;;1987:29;;;;:14;1945:40;1987:29;;;;;;:43;;;1875:156;;-1:-1:-1;;;;;1987:43:99;;;;1875:156;;;:::i;:::-;-1:-1:-1;;;;;1875:156:99;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1875:156:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1875:156:99;1847:185;;2042:35;2060:9;2071:5;;2042:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2042:17:99;;-1:-1:-1;;;2042:35:99:i;:::-;2094:9;-1:-1:-1;1773:337:99;;;;;:::o;668:19:92:-;;;;:::o;4616:780:140:-;-1:-1:-1;;;;;4735:30:140;;;;;;;:21;:30;;;;;;;4769:10;4735:44;4727:73;;;;;-1:-1:-1;;;;;4727:73:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;4943:10;4914:18;4935:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4935:28:140;;;;;;;;;;4999:13;;4966:1;4935:32;;;;4985:27;;;4977:57;;;;;-1:-1:-1;;;;;4977:57:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;5113:26;;;;:14;:26;;;;;;;5149:40;;;;;5044:186;;-1:-1:-1;;;;;5044:186:140;;-1:-1:-1;;;;;5149:40:140;;;5044:186;;;;;;;;;;;;;;;5191:38;-1:-1:-1;;5044:186:140;;;;5149:40;5044:186;;;;;;;;;;;;;;;:68;;;;;;5113:26;5149:40;;5191:38;;;;5044:186;;;;;;;;;5113:26;;5044:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5044:186:140;;;;;;;;-1:-1:-1;;5044:186:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5044:186:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;5248:10:140;5240:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5240:28:140;;;;;;;;;;:41;;;5296:93;5271:10;;-1:-1:-1;5248:10:140;;-1:-1:-1;5240:28:140;5296:93;;5240:19;5296:93;4616:780;;:::o;2085:154:92:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2178:9:92;;2162:38;;;;;;;;;;;;;;;;;;;;;;;;2210:9;:22;2085:154::o;3716:157::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3818:1:92;3799:9;:16;:20;3791:45;;;;;-1:-1:-1;;;;;3791:45:92;;;;;;;;;;;;-1:-1:-1;;;;;3791:45:92;;;;;;;;;;;;;;;3846:20;;;;:8;;:20;;;;;:::i;:::-;;3716:157;:::o;5822:257::-;5888:12;;5865:7;;5888:12;;5884:46;;;-1:-1:-1;5921:9:92;;5914:16;;5884:46;5967:16;;5995:11;;;;;;;;;;;;;;;;;;;5967:40;;-1:-1:-1;;;;;5967:40:92;;;;;;;;;;;;;;;;5940:16;;-1:-1:-1;;;;;5967:16:92;;:27;;5995:11;5967:40;;;;;;;;;5995:11;5967:40;;5995:11;5940:16;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5967:40:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5967:40:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5967:40:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5967:40:92;5959:60;;;-1:-1:-1;;;;;5959:60:92;;;;-1:-1:-1;;;;;5959:58:92;;;;;;:60;;;;;5967:40;;5959:60;;;;;;;;;:58;:60;;;5:2:-1;;;;30:1;27;20:12;5:2;5959:60:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5959:60:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5959:60:92;6052:9;;5959:60;;-1:-1:-1;6036:36:92;;5959:60;6036:15;:36::i;:::-;6029:43;;;5822:257;;:::o;2844:150::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2945:1:92;2928:6;2922:20;:24;2914:49;;;;;-1:-1:-1;;;;;2914:49:92;;;;;;;;;;;;-1:-1:-1;;;;;2914:49:92;;;;;;;;;;;;;;;2973:14;;;;:5;;:14;;;;;:::i;2174:545:140:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2384:14:140;:29;2399:13;;2384:29;;;;;;;;;;;:37;;2367:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2367:55:140;;;2357:66;;;;;;2343:8;;2326:26;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;2326::140;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2326:26:140;;;2316:37;;;;;;:107;;2308:132;;;;;-1:-1:-1;;;;;2308:132:140;;;;;;;;;;;;-1:-1:-1;;;;;2308:132:140;;;;;;;;;;;;;;;2491:13;;2476:29;;;;:14;:29;;;;;:43;;;-1:-1:-1;;;;;2458:61:140;;;2476:43;;2458:61;;2450:86;;;;;-1:-1:-1;;;;;2450:86:140;;;;;;;;;;;;-1:-1:-1;;;;;2450:86:140;;;;;;;;;;;;;;;-1:-1:-1;;;;;2554:28:140;;2546:56;;;;;-1:-1:-1;;;;;2546:56:140;;;;;;;;;;;;-1:-1:-1;;;;;2546:56:140;;;;;;;;;;;;;;;2612:13;:15;;;;;;;;2637:75;;;;;;;;;;;;;;;;;;;;;;;;2612:15;2673:8;;;;;;2637:75;;2673:8;;;;2637:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;2637:75:140;;;;137:4:-1;2637:75:140;;;;;;;;;;;;;;;;;2683:14;;-1:-1:-1;2637:75:140;-1:-1:-1;2699:12:140;;;;;;2637:75;;2699:12;;;;2637:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2637:20:140;;-1:-1:-1;;;2637:75:140:i;:::-;2174:545;;;;;:::o;798:24:92:-;;;;;;:::o;693:19::-;;;;;;;;;;;;;;;-1:-1:-1;;693:19:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5906:117:140:-;5994:13;;5979:29;;;;:14;:29;;;;;;;;;5972:44;;;;;;-1:-1:-1;;5972:44:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5947:13;;5972:44;;;5979:29;5972:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5906:117;:::o;1050:28::-;;;;:::o;674:56::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;674:56:140;;;;;;-1:-1:-1;674:56:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5354:153:92:-;5461:38;;;-1:-1:-1;;;;;5461:38:92;;:24;:38;;;;;;;;;;;;;;;5408:14;;5441:59;;5461:38;;5441:19;:59::i;:::-;5434:66;;5354:153;:::o;1423:137:169:-;863:9;:7;:9::i;:::-;855:18;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:169;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;;;;;1534:19:169;;;1423:137::o;718:25:92:-;;;;;;;;;;;;;;;-1:-1:-1;;718:25:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:41;;;-1:-1:-1;;;;;593:41:92;;:::o;828:24::-;;;;:::o;3465:135::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3535:19:92;3527:44;;;;;-1:-1:-1;;;;;3527:44:92;;;;;;;;;;;;-1:-1:-1;;;;;3527:44:92;;;;;;;;;;;;;;;3581:4;:12;3465:135::o;659:77:169:-;697:7;723:6;-1:-1:-1;;;;;723:6:169;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:169;1042:10;:20;;979:90::o;833:64:140:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;963:57::-;;;;;;;;;;;;-1:-1:-1;;;;;963:57:140;;:::o;5599:153:92:-;5706:38;;;-1:-1:-1;;;;;5706:38:92;;:24;:38;;;;;;;;;;;;;;;5653:14;;5686:59;;5706:38;;5686:19;:59::i;2434:272::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;2549:9:92;;2533:38;;;;;;;;;;;;;;;;;;;;;;;;2601:12;;2586:43;;;2601:12;;;;2586:43;;;;;;;;;;;;;;;;;;;;;;;2639:9;:22;;;;2671:12;:28;;-1:-1:-1;;2671:28:92;;;;;;;;;;2434:272::o;1534:88::-;1573:14;1606:9;1599:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1534:88;:::o;3102:799:140:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3277:13:140;;3265:8;:25;;3257:53;;;;;-1:-1:-1;;;;;3257:53:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;3423:12;;3419:269;;3525:14;:28;3551:1;3540:8;:12;3525:28;;;;;;;;;;;:36;;3508:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3508:54:140;;;3498:65;;;;;;3484:8;;3467:26;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;3467::140;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3467:26:140;;;3457:37;;;;;;:106;;3449:131;;;;;-1:-1:-1;;;;;3449:131:140;;;;;;;;;;;;-1:-1:-1;;;;;3449:131:140;;;;;;;;;;;;;;;-1:-1:-1;;3633:12:140;;3618:28;;;;:14;:28;;;;;3644:1;3618:42;;-1:-1:-1;;;;;3600:60:140;;;3618:42;;3600:60;;3592:85;;;;;-1:-1:-1;;;;;3592:85:140;;;;;;;;;;;;-1:-1:-1;;;;;3592:85:140;;;;;;;;;;;;;;;-1:-1:-1;;;;;3705:28:140;;3697:56;;;;;-1:-1:-1;;;;;3697:56:140;;;;;;;;;;;;-1:-1:-1;;;;;3697:56:140;;;;;;;;;;;;;;;3793:1;3771:23;;3763:51;;;;;-1:-1:-1;;;;;3763:51:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;3824:70;3845:8;3855;;3824:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3824:70:140;;;;137:4:-1;3824:70:140;;;;;;;;;;;;;;;;;3865:14;;-1:-1:-1;3824:70:140;-1:-1:-1;3881:12:140;;;;;;3824:70;;3881:12;;;;3824:70;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3824:20:140;;-1:-1:-1;;;3824:70:140:i;:::-;3102:799;;;;;;:::o;1702:88:92:-;1740:16;1775:8;1768:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1702:88;:::o;3150:180::-;863:9:169;:7;:9::i;:::-;855:18;;;;;;3269:1:92;3246:12;3240:26;:30;3232:55;;;;;-1:-1:-1;;;;;3232:55:92;;;;;;;;;;;;-1:-1:-1;;;;;3232:55:92;;;;;;;;;;;;;;;3297:26;;;;:11;;:26;;;;;:::i;1731:107:169:-;863:9;:7;:9::i;:::-;855:18;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;4071:1191:92:-;863:9:169;:7;:9::i;:::-;855:18;;;;;;4263:30:92;;;;;;-1:-1:-1;;;;;4263:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4263:30:92;;;4253:41;;;;;;4237:10;;4220:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4220:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4220:28:92;;;4210:39;;;;;;:84;:202;;;;4381:30;;;;;;-1:-1:-1;;;;;4381:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4381:30:92;;;4371:41;;;;;;4342:10;;4325:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4325:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4325:28:92;;;4298:69;;;;;;:114;4210:202;4189:267;;;;;-1:-1:-1;;;;;4189:267:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:1;4474:23;;4466:51;;;;;-1:-1:-1;;;;;4466:51:92;;;;;;;;;;;;-1:-1:-1;;;;;4466:51:92;;;;;;;;;;;;;;;4578:1;4531:49;;:24;4556:10;;4531:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4531:36:92;;;-1:-1:-1;;4531:36:92;;;;;;;;;;;;;;:49;;;;;-1:-1:-1;4527:520:92;;-1:-1:-1;4527:520:92;4596:30;4629:57;4649:24;4674:10;;4649:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;4649:36:92;;;-1:-1:-1;;4649:36:92;;;;;;;;;;;;;;;-1:-1:-1;4629:19:92;;-1:-1:-1;4629:57:92:i;:::-;4596:90;;4757:30;;;;;;-1:-1:-1;;;;;4757:30:92;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4757:30:92;;;4747:41;;;;;;4731:10;;4714:28;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;4714:28:92;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4714:28:92;;;4704:39;;;;;;:84;4700:337;;;4816:58;4845:11;;4816:58;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4858:15:92;;-1:-1:-1;4816:28:92;;-1:-1:-1;;4816:58:92:i;:::-;4808:86;;;;;-1:-1:-1;;;;;4808:86:92;;;;;;;;;;;;-1:-1:-1;;;;;4808:86:92;;;;;;;;;;;;;;;4700:337;;;4941:61;4973:11;;4941:61;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4986:15:92;;-1:-1:-1;4941:31:92;;-1:-1:-1;;4941:61:92:i;:::-;4933:89;;;;;-1:-1:-1;;;;;4933:89:92;;;;;;;;;;;;-1:-1:-1;;;;;4933:89:92;;;;;;;;;;;;;;;4527:520;;5095:65;5113:11;;5125:1;5113:14;;;;;;;;;;;;;;;5129:11;;5141:1;5129:14;;;;;;;;;;;;;;;5145:11;;5157:1;5145:14;;;;;;;;;;;;;;;5095:17;:65::i;:::-;5056:24;5081:10;;5056:36;;;;;30:3:-1;22:6;14;1:33;45:16;;;;5056:36:92;;;-1:-1:-1;;5056:36:92;;;;;;;;;;;:104;;;;;;;-1:-1:-1;;5056:104:92;;;;;;;;;;-1:-1:-1;5175:80:92;;-1:-1:-1;5196:10:92;;5208:11;;5056:36;5208:14;;;;;;;;;;;;;5224:11;;5236:1;5224:14;;;;;;;;;;;;;;;5240:11;;5252:1;5240:14;;;;;;;;;;;;;;;5175:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;5175:80:92;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;5175:80:92;;;;-1:-1:-1;5175:80:92;;-1:-1:-1;;;;;;;5175:80:92;4071:1191;;;;:::o;5587:236:140:-;5670:39;5694:7;5703:5;5670:23;:39::i;:::-;-1:-1:-1;;;;;;5719:30:140;;;;;:21;:30;;;;;;;;:43;;-1:-1:-1;;;;;;5719:43:140;5752:10;5719:43;;;;;;5803:13;;5772:19;;;:7;:19;;;;;:28;;;;;;;;;:44;5587:236::o;740:136:36:-;797:9;868:1;822:43;835:22;848:1;176:26;835:12;:22::i;:::-;863:1;859;:5;822:12;:43::i;:::-;:47;;;;;;;740:136;-1:-1:-1;;;740:136:36:o;3907:558:140:-;4049:24;;;;:14;:24;;;;;;;;:43;;;;;;;;:::i;:::-;-1:-1:-1;4102:24:140;;;;:14;:24;;;;;;;;:38;;;:55;;-1:-1:-1;;;;;;4102:55:140;-1:-1:-1;;;;;4102:55:140;;;;;4167:51;;;;:36;;;;;:51;;;;:::i;:::-;-1:-1:-1;4277:16:140;;:45;;;-1:-1:-1;;;;;4277:45:140;;;;;;;;;;;;;;;;;;;;;4228:30;;-1:-1:-1;;;;;4277:16:140;;:27;;:45;;;;;;;;;;;:16;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;4277:45:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4277:45:140;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4277:45:140;4333:44;;;-1:-1:-1;;;;;4333:44:140;;4371:4;4333:44;;;;;;4277:45;;-1:-1:-1;;;;;;4333:29:140;;;;;:44;;;;;-1:-1:-1;;4333:44:140;;;;;;;;-1:-1:-1;4333:29:140;:44;;;5:2:-1;;;;30:1;27;20:12;5:2;4333:44:140;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4333:44:140;;;;4392:66;4409:8;4419;4429:14;4445:12;4392:66;;;;;;;;;;;;-1:-1:-1;;;;;4392:66:140;-1:-1:-1;;;;;4392:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4392:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4392:66:140;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4392:66:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3907:558;;;;;:::o;1506:335:41:-;1625:14;;;1637:1;1625:14;;;;;;;;;1567;;;;1625;;;;1567;;105:10:-1;1625:14:41;88:34:-1;136:17;;-1:-1;1625:14:41;1593:46;;1693:2;1675:14;:20;;;;1649:14;1664:1;1649:17;;;;;;;;;;;;;:47;;;;;;;;;;;1750:1;1732:14;:19;;;;1706:14;1721:1;1706:17;;;;;;;;;;;;;:46;;;;;;;;;;;1788:14;1762;1777:1;1762:17;;;;;;;;:41;;;;:17;;;;;;;;;;;:41;1820:14;-1:-1:-1;1506:335:41;;;:::o;1982:183:169:-;-1:-1:-1;;;;;2055:22:169;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:169;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;;;;;2141:17:169;-1:-1:-1;;;;;2141:17:169;;;;;;;;;;1982:183::o;135:435:41:-;228:4;252:8;:15;271:1;252:20;244:29;;;;;;291:4;:11;306:1;291:16;283:25;;;;;;318:7;339:204;355:8;:15;351:1;:19;;;339:204;;;410:4;415:1;410:7;;;;;;;;;;;;;;;;395:22;;:8;404:1;395:11;;;;;;;;;;;;;;;;:22;;;391:36;;;419:8;;391:36;459:4;464:1;459:7;;;;;;;;;;;;;;;;445:21;;:8;454:1;445:11;;;;;;;;;;;;;;;;:21;;;441:38;;;475:4;468:11;;;;;441:38;511:4;516:1;511:7;;;;;;;;;;;;;;;;497:21;;:8;506:1;497:11;;;;;;;;;;;;;;;;:21;;;493:39;;;527:5;520:12;;;;;493:39;372:3;;339:204;;;-1:-1:-1;559:4:41;;135:435;-1:-1:-1;;;135:435:41:o;576:438::-;672:4;696:8;:15;715:1;696:20;688:29;;;;;;735:4;:11;750:1;735:16;727:25;;;;;;762:7;783:204;799:8;:15;795:1;:19;;;783:204;;;854:4;859:1;854:7;;;;;;;;;;;;;;;;839:22;;:8;848:1;839:11;;;;;;;;;;;;;;;;:22;;;835:36;;;863:8;;835:36;903:4;908:1;903:7;;;;;;;;;;;;;;;;889:21;;:8;898:1;889:11;;;;;;;;;;;;;;;;:21;;;885:38;;;919:4;912:11;;;;;885:38;955:4;960:1;955:7;;;;;;;;;;;;;;;;941:21;;:8;950:1;941:11;;;;;;;;;;;;;;;;:21;;;937:39;;;971:5;964:12;;;;;937:39;816:3;;783:204;;1210:173;1362:14;;;;1339;;;1357:1;1339:19;1314:14;;1332:2;1314:20;1313:46;;;;:63;;1210:173::o;6707:681:92:-;6790:21;6814:10;:8;:10::i;:::-;6790:34;;6834:19;6864:7;-1:-1:-1;;;;;6856:32:92;;:34;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6856:34:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6856:34:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6856:34:92;;-1:-1:-1;;;;;;;6904:25:92;;;6900:311;;-1:-1:-1;;;;;;6953:34:92;;:18;6965:5;6953:11;:18::i;:::-;-1:-1:-1;;;;;;6953:34:92;;6945:73;;;;;-1:-1:-1;;;;;6945:73:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;7102:12;7120:7;-1:-1:-1;;;;;7120:12:92;7133:5;7120:19;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7120:19:92;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7101:38:92;;;7161:7;7153:47;;;;;-1:-1:-1;;;;;7153:47:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;6900:311;;7323:4;;7356:9;;7288:93;;;-1:-1:-1;;;;;7288:93:92;;;;7344:10;7288:93;;;;;;;;;;;;;;;;;;7337:4;;7323;7288:93;;;;;;;;;;6707:681;;;;:::o;231:421:168:-;289:7;529:6;525:45;;-1:-1:-1;558:1:168;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;1439:145;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;6139:377:92;6176:7;6195:21;6219:17;:15;:17::i;:::-;6266:16;;:40;;;-1:-1:-1;;;;;6266:40:92;;;;;;;;;;;;;;-1:-1:-1;;;;;6266:40:92;;;;;;6195:41;;-1:-1:-1;6246:17:92;;-1:-1:-1;;;;;6266:16:92;;;;:27;;:40;;;;;;;;;;;;;:16;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;6266:40:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6266:40:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6266:40:92;;-1:-1:-1;6320:17:92;;6316:164;;6368:9;-1:-1:-1;;;;;6361:30:92;;6392:10;6404:7;:5;:7::i;:::-;6413:13;6361:66;;;;;;;;;;;;;-1:-1:-1;;;;;6361:66:92;-1:-1:-1;;;;;6361:66:92;;;;;;-1:-1:-1;;;;;6361:66:92;-1:-1:-1;;;;;6361:66:92;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6361:66:92;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6361:66:92;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6361:66:92;6353:116;;;;-1:-1:-1;;;;;6353:116:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6496:13:92;-1:-1:-1;6139:377:92;:::o;2423:260:40:-;2481:10;2503:8;2529:1;2514:5;:12;:16;:35;;2548:1;2514:35;;;2533:5;:12;2514:35;2503:46;-1:-1:-1;2564:9:40;2559:98;2583:3;2579:1;:7;2559:98;;;2640:1;2644;2640:5;2619;2625:1;2619:8;;;;;;;;;;;;-1:-1:-1;;;;;;2619:8:40;;;;;;;:15;2612:34;;2605:41;;;;;2588:3;;2559:98;;;-1:-1:-1;;2423:260:40;;;:::o;157:1956:99:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;157:1956:99;;;-1:-1:-1;157:1956:99;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.8;\n\nimport \"../../UpgradableModuleFactory.sol\";\nimport \"./CappedSTOProxy.sol\";\n\n/**\n * @title Factory for deploying CappedSTO module\n */\ncontract CappedSTOFactory is UpgradableModuleFactory {\n\n    /**\n     * @notice Constructor\n     * @param _setupCost Setup cost of the module\n      * @param _logicContract Contract address that contains the logic related to `description`\n     * @param _polymathRegistry Address of the Polymath registry\n     * @param _isCostInPoly true = cost in Poly, false = USD\n     */\n    constructor (\n        uint256 _setupCost,\n        address _logicContract,\n        address _polymathRegistry,\n        bool _isCostInPoly\n    )\n        public\n        UpgradableModuleFactory(\"3.0.0\", _setupCost, _logicContract, _polymathRegistry, _isCostInPoly)\n    {\n        name = \"CappedSTO\";\n        title = \"Capped STO\";\n        description = \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\";\n        typesData.push(3);\n        tagsData.push(\"Capped\");\n        tagsData.push(\"ETH\");\n        tagsData.push(\"POLY\");\n        tagsData.push(\"STO\");\n        compatibleSTVersionRange[\"lowerBound\"] = VersionUtils.pack(uint8(3), uint8(0), uint8(0));\n        compatibleSTVersionRange[\"upperBound\"] = VersionUtils.pack(uint8(3), uint8(0), uint8(0));\n    }\n\n    /**\n     * @notice Used to launch the Module with the help of factory\n     * @param _data Data used for the intialization of the module factory variables\n     * @return address Contract address of the Module\n     */\n    function deploy(bytes calldata _data) external returns(address) {\n        address cappedSTO = address(new CappedSTOProxy(logicContracts[latestUpgrade].version, msg.sender, polymathRegistry.getAddress(\"PolyToken\"), logicContracts[latestUpgrade].logicContract));\n        _initializeModule(cappedSTO, _data);\n        return cappedSTO;\n    }\n\n}\n",
  "sourcePath": "C:/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
    "exportedSymbols": {
      "CappedSTOFactory": [
        33336
      ]
    },
    "id": 33337,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33199,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:99"
      },
      {
        "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/UpgradableModuleFactory.sol",
        "file": "../../UpgradableModuleFactory.sol",
        "id": 33200,
        "nodeType": "ImportDirective",
        "scope": 33337,
        "sourceUnit": 48968,
        "src": "24:43:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol",
        "file": "./CappedSTOProxy.sol",
        "id": 33201,
        "nodeType": "ImportDirective",
        "scope": 33337,
        "sourceUnit": 33388,
        "src": "68:30:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33202,
              "name": "UpgradableModuleFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 48967,
              "src": "186:23:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradableModuleFactory_$48967",
                "typeString": "contract UpgradableModuleFactory"
              }
            },
            "id": 33203,
            "nodeType": "InheritanceSpecifier",
            "src": "186:23:99"
          }
        ],
        "contractDependencies": [
          14046,
          31507,
          33387,
          48967,
          58093
        ],
        "contractKind": "contract",
        "documentation": "@title Factory for deploying CappedSTO module",
        "fullyImplemented": true,
        "id": 33336,
        "linearizedBaseContracts": [
          33336,
          48967,
          31507,
          58093,
          14046
        ],
        "name": "CappedSTOFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33297,
              "nodeType": "Block",
              "src": "796:751:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33221,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31014,
                      "src": "806:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "43617070656453544f",
                      "id": 33222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:11:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d3dba09dff35150cdb7d1c6862d285600c72a3858c9e94fd82de42e61b9824ab",
                        "typeString": "literal_string \"CappedSTO\""
                      },
                      "value": "CappedSTO"
                    },
                    "src": "806:18:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33224,
                  "nodeType": "ExpressionStatement",
                  "src": "806:18:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33225,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31016,
                      "src": "834:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4361707065642053544f",
                      "id": 33226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "842:12:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1555df6d0021d8c67ee7169df47ccaf6f86c37dfa3743034b95ea61e6ed7b9f6",
                        "typeString": "literal_string \"Capped STO\""
                      },
                      "value": "Capped STO"
                    },
                    "src": "834:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33228,
                  "nodeType": "ExpressionStatement",
                  "src": "834:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33229,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31018,
                      "src": "864:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5468697320736d61727420636f6e747261637420637265617465732061206d6178696d756d206e756d626572206f6620746f6b656e732028692e652e206861726420636170292077686963682074686520746f74616c20616767726567617465206f6620746f6b656e7320616371756972656420627920616c6c20696e766573746f72732063616e6e6f74206578636565642e20536563757269747920746f6b656e73206172652073656e7420746f2074686520696e766573746f722075706f6e20726563657074696f6e206f66207468652066756e64732028455448206f7220504f4c59292c20616e6420616e7920736563757269747920746f6b656e73206c6566742075706f6e207465726d696e6174696f6e206f6620746865206f66666572696e672077696c6c206e6f74206265206d696e7465642e",
                      "id": 33230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "878:315:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_24e255bc910673e37c79c5c62b7f94749e7474e6c4fd727c35c1b94bb08844fc",
                        "typeString": "literal_string \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\""
                      },
                      "value": "This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted."
                    },
                    "src": "864:329:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33232,
                  "nodeType": "ExpressionStatement",
                  "src": "864:329:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 33236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:1:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33233,
                        "name": "typesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31021,
                        "src": "1203:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 33235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1203:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) returns (uint256)"
                      }
                    },
                    "id": 33237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33238,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:17:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436170706564",
                        "id": 33242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1244:8:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        },
                        "value": "Capped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33239,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1230:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1230:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:23:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33244,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:23:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455448",
                        "id": 33248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1277:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        },
                        "value": "ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33245,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1263:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33250,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "504f4c59",
                        "id": 33254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1307:6:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        },
                        "value": "POLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33251,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1293:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1293:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:21:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33256,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:21:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "53544f",
                        "id": 33260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1338:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        },
                        "value": "STO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33257,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1324:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1324:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33262,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33263,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31035,
                        "src": "1354:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33265,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "6c6f776572426f756e64",
                        "id": 33264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ed9a2cdf8359d00aca8e7b53163f5ce2b2fa898d757f02f3a11e2367b3ccb2",
                          "typeString": "literal_string \"lowerBound\""
                        },
                        "value": "lowerBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1354:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1419:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1413:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1413:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1429:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1423:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1423:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1439:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1433:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33266,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20321,
                          "src": "1395:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20321_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20188,
                        "src": "1395:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1395:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1354:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33279,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:88:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33280,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31035,
                        "src": "1452:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33282,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "7570706572426f756e64",
                        "id": 33281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7a3156b8c73047ca2b3d4e510fcb4d4c900378a3b9e7a046fc5f75c0501ecc",
                          "typeString": "literal_string \"upperBound\""
                        },
                        "value": "upperBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1452:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1517:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1511:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1511:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1527:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1521:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1521:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1537:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1531:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33283,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20321,
                          "src": "1493:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20321_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20188,
                        "src": "1493:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1452:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33296,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:88:99"
                }
              ]
            },
            "documentation": "@notice Constructor\n@param _setupCost Setup cost of the module\n@param _logicContract Contract address that contains the logic related to `description`\n@param _polymathRegistry Address of the Polymath registry\n@param _isCostInPoly true = cost in Poly, false = USD",
            "id": 33298,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "332e302e30",
                    "id": 33214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "721:7:99",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a",
                      "typeString": "literal_string \"3.0.0\""
                    },
                    "value": "3.0.0"
                  },
                  {
                    "argumentTypes": null,
                    "id": 33215,
                    "name": "_setupCost",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33205,
                    "src": "730:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33216,
                    "name": "_logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33207,
                    "src": "742:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33217,
                    "name": "_polymathRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33209,
                    "src": "758:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33218,
                    "name": "_isCostInPoly",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33211,
                    "src": "777:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 33219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 33213,
                  "name": "UpgradableModuleFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48967,
                  "src": "697:23:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradableModuleFactory_$48967_$",
                    "typeString": "type(contract UpgradableModuleFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "697:94:99"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33205,
                  "name": "_setupCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "554:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33207,
                  "name": "_logicContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "582:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33209,
                  "name": "_polymathRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "614:25:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33211,
                  "name": "_isCostInPoly",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "649:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:129:99"
            },
            "returnParameters": {
              "id": 33220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:99"
            },
            "scope": 33336,
            "src": "532:1015:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33334,
              "nodeType": "Block",
              "src": "1837:273:99",
              "statements": [
                {
                  "assignments": [
                    33306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33306,
                      "name": "cappedSTO",
                      "nodeType": "VariableDeclaration",
                      "scope": 33334,
                      "src": "1847:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1847:7:99",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33326,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33310,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48596,
                                "src": "1894:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48592_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33312,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33311,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48608,
                                "src": "1909:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1894:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48592_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48587,
                            "src": "1894:37:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33314,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58610,
                              "src": "1933:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1933:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "506f6c79546f6b656e",
                                "id": 33318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1973:11:99",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                },
                                "value": "PolyToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33316,
                                "name": "polymathRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31010,
                                "src": "1945:16:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolymathRegistry_$14372",
                                  "typeString": "contract IPolymathRegistry"
                                }
                              },
                              "id": 33317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14364,
                              "src": "1945:27:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (string memory) view external returns (address)"
                              }
                            },
                            "id": 33319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1945:40:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33320,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48596,
                                "src": "1987:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48592_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33322,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33321,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48608,
                                "src": "2002:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1987:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48592_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logicContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48589,
                            "src": "1987:43:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1875:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CappedSTOProxy_$33387_$",
                            "typeString": "function (string memory,address,address,address) returns (contract CappedSTOProxy)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 33308,
                            "name": "CappedSTOProxy",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 33387,
                            "src": "1879:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                              "typeString": "contract CappedSTOProxy"
                            }
                          }
                        },
                        "id": 33324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1875:156:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                          "typeString": "contract CappedSTOProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                          "typeString": "contract CappedSTOProxy"
                        }
                      ],
                      "id": 33307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1867:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 33325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:165:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1847:185:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33328,
                        "name": "cappedSTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33306,
                        "src": "2060:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33329,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33300,
                        "src": "2071:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 33327,
                      "name": "_initializeModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48955
                      ],
                      "referencedDeclaration": 48955,
                      "src": "2042:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 33330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:35:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33331,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:35:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33332,
                    "name": "cappedSTO",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33306,
                    "src": "2094:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33304,
                  "id": 33333,
                  "nodeType": "Return",
                  "src": "2087:16:99"
                }
              ]
            },
            "documentation": "@notice Used to launch the Module with the help of factory\n@param _data Data used for the intialization of the module factory variables\n@return address Contract address of the Module",
            "id": 33335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33300,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 33335,
                  "src": "1789:20:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33299,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1788:22:99"
            },
            "returnParameters": {
              "id": 33304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33303,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33335,
                  "src": "1828:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1827:9:99"
            },
            "scope": 33336,
            "src": "1773:337:99",
            "stateMutability": "nonpayable",
            "superFunction": 13950,
            "visibility": "external"
          }
        ],
        "scope": 33337,
        "src": "157:1956:99"
      }
    ],
    "src": "0:2114:99"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOFactory.sol",
    "exportedSymbols": {
      "CappedSTOFactory": [
        33336
      ]
    },
    "id": 33337,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33199,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:99"
      },
      {
        "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/UpgradableModuleFactory.sol",
        "file": "../../UpgradableModuleFactory.sol",
        "id": 33200,
        "nodeType": "ImportDirective",
        "scope": 33337,
        "sourceUnit": 48968,
        "src": "24:43:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/victor/Repos/polymath-core/contracts/modules/STO/Capped/CappedSTOProxy.sol",
        "file": "./CappedSTOProxy.sol",
        "id": 33201,
        "nodeType": "ImportDirective",
        "scope": 33337,
        "sourceUnit": 33388,
        "src": "68:30:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 33202,
              "name": "UpgradableModuleFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 48967,
              "src": "186:23:99",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UpgradableModuleFactory_$48967",
                "typeString": "contract UpgradableModuleFactory"
              }
            },
            "id": 33203,
            "nodeType": "InheritanceSpecifier",
            "src": "186:23:99"
          }
        ],
        "contractDependencies": [
          14046,
          31507,
          33387,
          48967,
          58093
        ],
        "contractKind": "contract",
        "documentation": "@title Factory for deploying CappedSTO module",
        "fullyImplemented": true,
        "id": 33336,
        "linearizedBaseContracts": [
          33336,
          48967,
          31507,
          58093,
          14046
        ],
        "name": "CappedSTOFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33297,
              "nodeType": "Block",
              "src": "796:751:99",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33221,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31014,
                      "src": "806:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "43617070656453544f",
                      "id": 33222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "813:11:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_d3dba09dff35150cdb7d1c6862d285600c72a3858c9e94fd82de42e61b9824ab",
                        "typeString": "literal_string \"CappedSTO\""
                      },
                      "value": "CappedSTO"
                    },
                    "src": "806:18:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 33224,
                  "nodeType": "ExpressionStatement",
                  "src": "806:18:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33225,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31016,
                      "src": "834:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4361707065642053544f",
                      "id": 33226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "842:12:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1555df6d0021d8c67ee7169df47ccaf6f86c37dfa3743034b95ea61e6ed7b9f6",
                        "typeString": "literal_string \"Capped STO\""
                      },
                      "value": "Capped STO"
                    },
                    "src": "834:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33228,
                  "nodeType": "ExpressionStatement",
                  "src": "834:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 33229,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31018,
                      "src": "864:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "5468697320736d61727420636f6e747261637420637265617465732061206d6178696d756d206e756d626572206f6620746f6b656e732028692e652e206861726420636170292077686963682074686520746f74616c20616767726567617465206f6620746f6b656e7320616371756972656420627920616c6c20696e766573746f72732063616e6e6f74206578636565642e20536563757269747920746f6b656e73206172652073656e7420746f2074686520696e766573746f722075706f6e20726563657074696f6e206f66207468652066756e64732028455448206f7220504f4c59292c20616e6420616e7920736563757269747920746f6b656e73206c6566742075706f6e207465726d696e6174696f6e206f6620746865206f66666572696e672077696c6c206e6f74206265206d696e7465642e",
                      "id": 33230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "878:315:99",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_24e255bc910673e37c79c5c62b7f94749e7474e6c4fd727c35c1b94bb08844fc",
                        "typeString": "literal_string \"This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted.\""
                      },
                      "value": "This smart contract creates a maximum number of tokens (i.e. hard cap) which the total aggregate of tokens acquired by all investors cannot exceed. Security tokens are sent to the investor upon reception of the funds (ETH or POLY), and any security tokens left upon termination of the offering will not be minted."
                    },
                    "src": "864:329:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 33232,
                  "nodeType": "ExpressionStatement",
                  "src": "864:329:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "33",
                        "id": 33236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:1:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33233,
                        "name": "typesData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31021,
                        "src": "1203:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                          "typeString": "uint8[] storage ref"
                        }
                      },
                      "id": 33235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1203:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint8_$returns$_t_uint256_$",
                        "typeString": "function (uint8) returns (uint256)"
                      }
                    },
                    "id": 33237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33238,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:17:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436170706564",
                        "id": 33242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1244:8:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        },
                        "value": "Capped"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea0ae8c04715067d85a72d739eb0eb29a1675ab457afd1b44648d1d56801ff8d",
                          "typeString": "literal_string \"Capped\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33239,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1230:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1230:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:23:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33244,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:23:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "455448",
                        "id": 33248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1277:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        },
                        "value": "ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                          "typeString": "literal_string \"ETH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33245,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1263:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1263:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1263:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33250,
                  "nodeType": "ExpressionStatement",
                  "src": "1263:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "504f4c59",
                        "id": 33254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1307:6:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        },
                        "value": "POLY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42e9b9ff2964f66d264e07a2cd4c5234a8c8c5adbfc54101bd50b0744fcd261f",
                          "typeString": "literal_string \"POLY\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33251,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1293:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1293:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1293:21:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33256,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:21:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "53544f",
                        "id": 33260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1338:5:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        },
                        "value": "STO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_79030946dd457157e4aa08fcb4907c422402e75f0f0ecb4f2089cb35021ff964",
                          "typeString": "literal_string \"STO\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33257,
                        "name": "tagsData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31024,
                        "src": "1324:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 33259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1324:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32) returns (uint256)"
                      }
                    },
                    "id": 33261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:20:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33262,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:20:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33263,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31035,
                        "src": "1354:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33265,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "6c6f776572426f756e64",
                        "id": 33264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8ed9a2cdf8359d00aca8e7b53163f5ce2b2fa898d757f02f3a11e2367b3ccb2",
                          "typeString": "literal_string \"lowerBound\""
                        },
                        "value": "lowerBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1354:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1419:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1413:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1413:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1429:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1423:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1423:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1439:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1433:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1433:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33266,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20321,
                          "src": "1395:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20321_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20188,
                        "src": "1395:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1395:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1354:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33279,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:88:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 33280,
                        "name": "compatibleSTVersionRange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31035,
                        "src": "1452:24:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_uint24_$",
                          "typeString": "mapping(string memory => uint24)"
                        }
                      },
                      "id": 33282,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "7570706572426f756e64",
                        "id": 33281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1477:12:99",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7a3156b8c73047ca2b3d4e510fcb4d4c900378a3b9e7a046fc5f75c0501ecc",
                          "typeString": "literal_string \"upperBound\""
                        },
                        "value": "upperBound"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1452:38:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "33",
                              "id": 33286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1517:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              }
                            ],
                            "id": 33285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1511:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1511:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1527:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1521:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1521:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 33292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1537:1:99",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1531:5:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 33293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 33283,
                          "name": "VersionUtils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20321,
                          "src": "1493:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_VersionUtils_$20321_$",
                            "typeString": "type(library VersionUtils)"
                          }
                        },
                        "id": 33284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "pack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20188,
                        "src": "1493:17:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_uint8_$returns$_t_uint24_$",
                          "typeString": "function (uint8,uint8,uint8) pure returns (uint24)"
                        }
                      },
                      "id": 33294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:47:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "1452:88:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 33296,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:88:99"
                }
              ]
            },
            "documentation": "@notice Constructor\n@param _setupCost Setup cost of the module\n@param _logicContract Contract address that contains the logic related to `description`\n@param _polymathRegistry Address of the Polymath registry\n@param _isCostInPoly true = cost in Poly, false = USD",
            "id": 33298,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "332e302e30",
                    "id": 33214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "721:7:99",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a",
                      "typeString": "literal_string \"3.0.0\""
                    },
                    "value": "3.0.0"
                  },
                  {
                    "argumentTypes": null,
                    "id": 33215,
                    "name": "_setupCost",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33205,
                    "src": "730:10:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33216,
                    "name": "_logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33207,
                    "src": "742:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33217,
                    "name": "_polymathRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33209,
                    "src": "758:17:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 33218,
                    "name": "_isCostInPoly",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33211,
                    "src": "777:13:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 33219,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 33213,
                  "name": "UpgradableModuleFactory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 48967,
                  "src": "697:23:99",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UpgradableModuleFactory_$48967_$",
                    "typeString": "type(contract UpgradableModuleFactory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "697:94:99"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33205,
                  "name": "_setupCost",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "554:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33207,
                  "name": "_logicContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "582:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33209,
                  "name": "_polymathRegistry",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "614:25:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33211,
                  "name": "_isCostInPoly",
                  "nodeType": "VariableDeclaration",
                  "scope": 33298,
                  "src": "649:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 33210,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "544:129:99"
            },
            "returnParameters": {
              "id": 33220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:0:99"
            },
            "scope": 33336,
            "src": "532:1015:99",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33334,
              "nodeType": "Block",
              "src": "1837:273:99",
              "statements": [
                {
                  "assignments": [
                    33306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33306,
                      "name": "cappedSTO",
                      "nodeType": "VariableDeclaration",
                      "scope": 33334,
                      "src": "1847:17:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1847:7:99",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 33326,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33310,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48596,
                                "src": "1894:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48592_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33312,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33311,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48608,
                                "src": "1909:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1894:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48592_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33313,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "version",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48587,
                            "src": "1894:37:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 33314,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58610,
                              "src": "1933:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1933:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "506f6c79546f6b656e",
                                "id": 33318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1973:11:99",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                },
                                "value": "PolyToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1cb285bb920a457e70c0f9ab42103e124a9b44100ffd57ff8d1e26b76a17088d",
                                  "typeString": "literal_string \"PolyToken\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 33316,
                                "name": "polymathRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31010,
                                "src": "1945:16:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPolymathRegistry_$14372",
                                  "typeString": "contract IPolymathRegistry"
                                }
                              },
                              "id": 33317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14364,
                              "src": "1945:27:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (string memory) view external returns (address)"
                              }
                            },
                            "id": 33319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1945:40:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 33320,
                                "name": "logicContracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48596,
                                "src": "1987:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_LogicContract_$48592_storage_$",
                                  "typeString": "mapping(uint256 => struct UpgradableModuleFactory.LogicContract storage ref)"
                                }
                              },
                              "id": 33322,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 33321,
                                "name": "latestUpgrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48608,
                                "src": "2002:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1987:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LogicContract_$48592_storage",
                                "typeString": "struct UpgradableModuleFactory.LogicContract storage ref"
                              }
                            },
                            "id": 33323,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "logicContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48589,
                            "src": "1987:43:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1875:18:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_CappedSTOProxy_$33387_$",
                            "typeString": "function (string memory,address,address,address) returns (contract CappedSTOProxy)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 33308,
                            "name": "CappedSTOProxy",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 33387,
                            "src": "1879:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                              "typeString": "contract CappedSTOProxy"
                            }
                          }
                        },
                        "id": 33324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1875:156:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                          "typeString": "contract CappedSTOProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CappedSTOProxy_$33387",
                          "typeString": "contract CappedSTOProxy"
                        }
                      ],
                      "id": 33307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1867:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 33325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:165:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1847:185:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 33328,
                        "name": "cappedSTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33306,
                        "src": "2060:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 33329,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33300,
                        "src": "2071:5:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 33327,
                      "name": "_initializeModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        48955
                      ],
                      "referencedDeclaration": 48955,
                      "src": "2042:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 33330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:35:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33331,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:35:99"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33332,
                    "name": "cappedSTO",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33306,
                    "src": "2094:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 33304,
                  "id": 33333,
                  "nodeType": "Return",
                  "src": "2087:16:99"
                }
              ]
            },
            "documentation": "@notice Used to launch the Module with the help of factory\n@param _data Data used for the intialization of the module factory variables\n@return address Contract address of the Module",
            "id": 33335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33300,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 33335,
                  "src": "1789:20:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 33299,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1788:22:99"
            },
            "returnParameters": {
              "id": 33304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33303,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 33335,
                  "src": "1828:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1828:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1827:9:99"
            },
            "scope": 33336,
            "src": "1773:337:99",
            "stateMutability": "nonpayable",
            "superFunction": 13950,
            "visibility": "external"
          }
        ],
        "scope": 33337,
        "src": "157:1956:99"
      }
    ],
    "src": "0:2114:99"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "15": {
      "events": {
        "0xbcda874f53511fb6338990baf12d53b3bcef8cb0247ba5f7673450267395515a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_version",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_upgrade",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_logicContract",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_upgradeData",
              "type": "bytes"
            }
          ],
          "name": "LogicContractSet",
          "type": "event",
          "signature": "0xbcda874f53511fb6338990baf12d53b3bcef8cb0247ba5f7673450267395515a"
        },
        "0x6b272426dd4b3366b853f4e32bb7fce7392e461688b7a8bf942bd61f756f1d0f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_securityToken",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_version",
              "type": "uint256"
            }
          ],
          "name": "ModuleUpgraded",
          "type": "event",
          "signature": "0x6b272426dd4b3366b853f4e32bb7fce7392e461688b7a8bf942bd61f756f1d0f"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_oldSetupCost",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_newSetupCost",
              "type": "uint256"
            }
          ],
          "name": "ChangeSetupCost",
          "type": "event",
          "signature": "0x599b244d21db9af3e5c0ec6cd4af8b4c6085c9ac647c72f008f8c40d0d7cd1be"
        },
        "0x243562d4d8acd21cf96c899dfa0c26774212a5181e5e40f852c7e6b66b7b96db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_isOldCostInPoly",
              "type": "bool"
            },
            {
              "indexed": false,
              "name": "_isNewCostInPoly",
              "type": "bool"
            }
          ],
          "name": "ChangeCostType",
          "type": "event",
          "signature": "0x243562d4d8acd21cf96c899dfa0c26774212a5181e5e40f852c7e6b66b7b96db"
        },
        "0xb68b4973fbce93f056103272c1f3f53b607527138d7e323b7b94f7ac169ebf77": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_module",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "_moduleName",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "_moduleFactory",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_creator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_setupCost",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "_setupCostInPoly",
              "type": "uint256"
            }
          ],
          "name": "GenerateModuleFromFactory",
          "type": "event",
          "signature": "0xb68b4973fbce93f056103272c1f3f53b607527138d7e323b7b94f7ac169ebf77"
        },
        "0x5b67e16edaf7fc70c8d065ea6e70b97ed944d98fe593b04d682216615a3b04db": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_boundType",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_major",
              "type": "uint8"
            },
            {
              "indexed": false,
              "name": "_minor",
              "type": "uint8"
            },
            {
              "indexed": false,
              "name": "_patch",
              "type": "uint8"
            }
          ],
          "name": "ChangeSTVersionBound",
          "type": "event",
          "signature": "0x5b67e16edaf7fc70c8d065ea6e70b97ed944d98fe593b04d682216615a3b04db"
        }
      },
      "links": {},
      "address": "0x3E6635a4799E7B0e63711e2ba4a3b30beFcF9079",
      "transactionHash": "0xad920eca4ad7fcced5c3b229970c2a7b87f234a987e56e72cd4e4260dbb6a67b"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-19T20:39:29.627Z",
  "devdoc": {
    "methods": {
      "changeCostAndType(uint256,bool)": {
        "params": {
          "_isCostInPoly": "new setup cost currency. USD or POLY",
          "_setupCost": "new setup cost"
        }
      },
      "changeDescription(string)": {
        "params": {
          "_description": "New description that will replace the old one."
        }
      },
      "changeName(bytes32)": {
        "params": {
          "_name": "New name that will replace the old one."
        }
      },
      "changeSTVersionBounds(string,uint8[])": {
        "params": {
          "_boundType": "Type of bound",
          "_newVersion": "new version array"
        }
      },
      "changeSetupCost(uint256)": {
        "params": {
          "_setupCost": "new setup cost"
        }
      },
      "changeTags(bytes32[])": {
        "params": {
          "_tagsData": "New list of tags"
        }
      },
      "changeTitle(string)": {
        "params": {
          "_title": "New Title that will replace the old one."
        }
      },
      "constructor": {
        "params": {
          "_isCostInPoly": "true = cost in Poly, false = USD",
          "_logicContract": "Contract address that contains the logic related to `description`",
          "_polymathRegistry": "Address of the Polymath registry",
          "_setupCost": "Setup cost of the module"
        }
      },
      "deploy(bytes)": {
        "params": {
          "_data": "Data used for the intialization of the module factory variables"
        },
        "return": "address Contract address of the Module"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "lowerSTVersionBounds()": {
        "return": "lower bound"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setLogicContract(string,address,bytes)": {
        "params": {
          "_logicContract": "Address of deployed module logic contract referenced from proxy",
          "_upgradeData": "Data to be passed in call to upgradeToAndCall when a token upgrades its module",
          "_version": "Version of upgraded module"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateLogicContract(uint256,string,address,bytes)": {
        "params": {
          "_logicContract": "Address of deployed module logic contract referenced from proxy",
          "_upgrade": "logic contract to upgrade",
          "_upgradeData": "Data to be passed in call to upgradeToAndCall when a token upgrades its module",
          "_version": "Version of upgraded module"
        }
      },
      "upgrade(address)": {
        "params": {
          "_module": "Address of (proxy) module to be upgraded"
        }
      },
      "upperSTVersionBounds()": {
        "return": "upper bound"
      }
    },
    "title": "Factory for deploying CappedSTO module"
  },
  "userdoc": {
    "methods": {
      "changeCostAndType(uint256,bool)": {
        "notice": "Used to change the currency and amount of setup cost"
      },
      "changeDescription(string)": {
        "notice": "Updates the description of the ModuleFactory"
      },
      "changeName(bytes32)": {
        "notice": "Updates the name of the ModuleFactory"
      },
      "changeSTVersionBounds(string,uint8[])": {
        "notice": "Function use to change the lower and upper bound of the compatible version st"
      },
      "changeSetupCost(uint256)": {
        "notice": "Used to change the fee of the setup cost"
      },
      "changeTags(bytes32[])": {
        "notice": "Updates the tags of the ModuleFactory"
      },
      "changeTitle(string)": {
        "notice": "Updates the title of the ModuleFactory"
      },
      "constructor": "Constructor",
      "deploy(bytes)": {
        "notice": "Used to launch the Module with the help of factory"
      },
      "lowerSTVersionBounds()": {
        "notice": "Used to get the lower bound"
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setLogicContract(string,address,bytes)": {
        "notice": "Used to upgrade the module factory"
      },
      "setupCostInPoly()": {
        "notice": "Get the setup cost of the module"
      },
      "tags()": {
        "notice": "Get the tags related to the module factory"
      },
      "types()": {
        "notice": "Type of the Module factory"
      },
      "updateLogicContract(uint256,string,address,bytes)": {
        "notice": "Used to update an existing token logic contract"
      },
      "upgrade(address)": {
        "notice": "Used by a security token to upgrade a given module"
      },
      "upperSTVersionBounds()": {
        "notice": "Used to get the upper bound"
      },
      "version()": {
        "notice": "Get the version related to the module factory"
      }
    }
  }
}