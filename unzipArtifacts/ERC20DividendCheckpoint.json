{
  "contractName": "ERC20DividendCheckpoint",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_investors",
          "type": "address[]"
        },
        {
          "name": "_withholding",
          "type": "uint256"
        }
      ],
      "name": "setWithholdingFixed",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EXCLUDED_ADDRESS_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitFunction",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "getDividendData",
      "outputs": [
        {
          "name": "created",
          "type": "uint256"
        },
        {
          "name": "maturity",
          "type": "uint256"
        },
        {
          "name": "expiry",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTreasuryWallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "pullDividendPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "investorWithheld",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_payees",
          "type": "address[]"
        }
      ],
      "name": "pushDividendPaymentToAddresses",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investor",
          "type": "address"
        },
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "calculateDividend",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getDividendIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "polyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "updateDividendDates",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "configure",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "withholdingTax",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_checkpointId",
          "type": "uint256"
        }
      ],
      "name": "getCheckpointData",
      "outputs": [
        {
          "name": "investors",
          "type": "address[]"
        },
        {
          "name": "balances",
          "type": "uint256[]"
        },
        {
          "name": "withholdings",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividends",
      "outputs": [
        {
          "name": "checkpointId",
          "type": "uint256"
        },
        {
          "name": "created",
          "type": "uint256"
        },
        {
          "name": "maturity",
          "type": "uint256"
        },
        {
          "name": "expiry",
          "type": "uint256"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "claimedAmount",
          "type": "uint256"
        },
        {
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "name": "reclaimed",
          "type": "bool"
        },
        {
          "name": "totalWithheld",
          "type": "uint256"
        },
        {
          "name": "totalWithheldWithdrawn",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_investor",
          "type": "address"
        },
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "isExcluded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_investors",
          "type": "address[]"
        },
        {
          "name": "_withholding",
          "type": "uint256[]"
        }
      ],
      "name": "setWithholding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenContract",
          "type": "address"
        }
      ],
      "name": "reclaimERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividendTokens",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "changeWallet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDividendsData",
      "outputs": [
        {
          "name": "createds",
          "type": "uint256[]"
        },
        {
          "name": "maturitys",
          "type": "uint256[]"
        },
        {
          "name": "expirys",
          "type": "uint256[]"
        },
        {
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "name": "claimedAmounts",
          "type": "uint256[]"
        },
        {
          "name": "names",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "securityToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "excluded",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPermissions",
      "outputs": [
        {
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_excluded",
          "type": "address[]"
        }
      ],
      "name": "setDefaultExcluded",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "name": "_start",
          "type": "uint256"
        },
        {
          "name": "_end",
          "type": "uint256"
        }
      ],
      "name": "pushDividendPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDefaultExcluded",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "getDividendProgress",
      "outputs": [
        {
          "name": "investors",
          "type": "address[]"
        },
        {
          "name": "resultClaimed",
          "type": "bool[]"
        },
        {
          "name": "resultExcluded",
          "type": "bool[]"
        },
        {
          "name": "resultWithheld",
          "type": "uint256[]"
        },
        {
          "name": "resultAmount",
          "type": "uint256[]"
        },
        {
          "name": "resultBalance",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDataStore",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createCheckpoint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_securityToken",
          "type": "address"
        },
        {
          "name": "_polyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "ERC20DividendDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_payee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_withheld",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_claimedAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_withheldAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20DividendWithholdingWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_excluded",
          "type": "address[]"
        }
      ],
      "name": "SetDefaultExcludedAddresses",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_investors",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "_withholding",
          "type": "uint256[]"
        }
      ],
      "name": "SetWithholding",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_investors",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "_withholding",
          "type": "uint256"
        }
      ],
      "name": "SetWithholdingFixed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_oldWallet",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_newWallet",
          "type": "address"
        }
      ],
      "name": "SetWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_dividendIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_expiry",
          "type": "uint256"
        }
      ],
      "name": "UpdateDividendDates",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpause",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithCheckpoint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_excluded",
          "type": "address[]"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithExclusions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maturity",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_checkpointId",
          "type": "uint256"
        },
        {
          "name": "_excluded",
          "type": "address[]"
        },
        {
          "name": "_name",
          "type": "bytes32"
        }
      ],
      "name": "createDividendWithCheckpointAndExclusions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "reclaimDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_dividendIndex",
          "type": "uint256"
        }
      ],
      "name": "withdrawWithholding",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_investors\",\"type\":\"address[]\"},{\"name\":\"_withholding\",\"type\":\"uint256\"}],\"name\":\"setWithholdingFixed\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EXCLUDED_ADDRESS_LIMIT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitFunction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_excluded\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithExclusions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"getDividendData\",\"outputs\":[{\"name\":\"created\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTreasuryWallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"pullDividendPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"withdrawWithholding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"investorWithheld\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"name\":\"_excluded\",\"type\":\"address[]\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithCheckpointAndExclusions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_payees\",\"type\":\"address[]\"}],\"name\":\"pushDividendPaymentToAddresses\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"calculateDividend\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getDividendIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividendWithCheckpoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"polyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"updateDividendDates\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"configure\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"withholdingTax\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_checkpointId\",\"type\":\"uint256\"}],\"name\":\"getCheckpointData\",\"outputs\":[{\"name\":\"investors\",\"type\":\"address[]\"},{\"name\":\"balances\",\"type\":\"uint256[]\"},{\"name\":\"withholdings\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dividends\",\"outputs\":[{\"name\":\"checkpointId\",\"type\":\"uint256\"},{\"name\":\"created\",\"type\":\"uint256\"},{\"name\":\"maturity\",\"type\":\"uint256\"},{\"name\":\"expiry\",\"type\":\"uint256\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"claimedAmount\",\"type\":\"uint256\"},{\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"name\":\"reclaimed\",\"type\":\"bool\"},{\"name\":\"totalWithheld\",\"type\":\"uint256\"},{\"name\":\"totalWithheldWithdrawn\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_investor\",\"type\":\"address\"},{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"isExcluded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_investors\",\"type\":\"address[]\"},{\"name\":\"_withholding\",\"type\":\"uint256[]\"}],\"name\":\"setWithholding\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"reclaimERC20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dividendTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"changeWallet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"reclaimDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDividendsData\",\"outputs\":[{\"name\":\"createds\",\"type\":\"uint256[]\"},{\"name\":\"maturitys\",\"type\":\"uint256[]\"},{\"name\":\"expirys\",\"type\":\"uint256[]\"},{\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"},{\"name\":\"names\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maturity\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"createDividend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"securityToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"excluded\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPermissions\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_excluded\",\"type\":\"address[]\"}],\"name\":\"setDefaultExcluded\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"name\":\"_start\",\"type\":\"uint256\"},{\"name\":\"_end\",\"type\":\"uint256\"}],\"name\":\"pushDividendPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDefaultExcluded\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_dividendIndex\",\"type\":\"uint256\"}],\"name\":\"getDividendProgress\",\"outputs\":[{\"name\":\"investors\",\"type\":\"address[]\"},{\"name\":\"resultClaimed\",\"type\":\"bool[]\"},{\"name\":\"resultExcluded\",\"type\":\"bool[]\"},{\"name\":\"resultWithheld\",\"type\":\"uint256[]\"},{\"name\":\"resultAmount\",\"type\":\"uint256[]\"},{\"name\":\"resultBalance\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDataStore\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createCheckpoint\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_securityToken\",\"type\":\"address\"},{\"name\":\"_polyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_depositor\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_checkpointId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_expiry\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_name\",\"type\":\"bytes32\"}],\"name\":\"ERC20DividendDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_payee\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_withheld\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_claimedAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_withheldAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20DividendWithholdingWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_excluded\",\"type\":\"address[]\"}],\"name\":\"SetDefaultExcludedAddresses\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_investors\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"_withholding\",\"type\":\"uint256[]\"}],\"name\":\"SetWithholding\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_investors\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"_withholding\",\"type\":\"uint256\"}],\"name\":\"SetWithholdingFixed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oldWallet\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"SetWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_dividendIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_maturity\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_expiry\",\"type\":\"uint256\"}],\"name\":\"UpdateDividendDates\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"calculateDividend(uint256,address)\":{\"params\":{\"_dividendIndex\":\"Dividend to calculate\",\"_payee\":\"Affected investor address\"},\"return\":\"claim, withheld amounts\"},\"changeWallet(address)\":{\"params\":{\"_wallet\":\"Ethereum account address to receive reclaimed dividends and tax\"}},\"configure(address)\":{\"params\":{\"_wallet\":\"Ethereum account address to receive reclaimed dividends and tax\"}},\"constructor\":{\"params\":{\"_securityToken\":\"Address of the security token\"}},\"createCheckpoint()\":{\"return\":\"Checkpoint ID\"},\"createDividend(uint256,uint256,address,uint256,bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\",\"_maturity\":\"Time from which dividend can be paid\",\"_name\":\"Name/Title for identification\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\"}},\"createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\",\"_checkpointId\":\"Checkpoint id from which to create dividends\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\",\"_maturity\":\"Time from which dividend can be paid\",\"_name\":\"Name/Title for identification\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\"}},\"createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\",\"_checkpointId\":\"Checkpoint id from which to create dividends\",\"_excluded\":\"List of addresses to exclude\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\",\"_maturity\":\"Time from which dividend can be paid\",\"_name\":\"Name/Title for identification\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\"}},\"createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)\":{\"params\":{\"_amount\":\"Amount of specified token for dividend\",\"_excluded\":\"List of addresses to exclude\",\"_expiry\":\"Time until dividend can no longer be paid, and can be reclaimed by issuer\",\"_maturity\":\"Time from which dividend can be paid\",\"_name\":\"Name/Title for identification\",\"_token\":\"Address of ERC20 token in which dividend is to be denominated\"}},\"getCheckpointData(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint Id to query for\"},\"return\":\"address[] list of investorsuint256[] investor balancesuint256[] investor withheld percentages\"},\"getDefaultExcluded()\":{\"return\":\"List of excluded addresses\"},\"getDividendData(uint256)\":{\"return\":\"uint256 timestamp of dividend creationuint256 timestamp of dividend maturityuint256 timestamp of dividend expiryuint256 amount of dividenduint256 claimed amount of dividendbytes32 name of dividend\"},\"getDividendIndex(uint256)\":{\"params\":{\"_checkpointId\":\"Checkpoint id to query\"},\"return\":\"uint256[]\"},\"getDividendProgress(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\"},\"return\":\"address[] list of investorsbool[] whether investor has claimedbool[] whether investor is excludeduint256[] amount of withheld tax (estimate if not claimed)uint256[] amount of claim (estimate if not claimeed)uint256[] investor balance\"},\"getDividendsData()\":{\"return\":\"uint256[] timestamp of dividends creationuint256[] timestamp of dividends maturityuint256[] timestamp of dividends expiryuint256[] amount of dividendsuint256[] claimed amount of dividendsbytes32[] name of dividends\"},\"getInitFunction()\":{\"return\":\"bytes4\"},\"getPermissions()\":{\"return\":\"bytes32 array\"},\"isClaimed(address,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\",\"_investor\":\"Investor address being checked\"},\"return\":\"bool whether the address has claimed\"},\"isExcluded(address,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\",\"_investor\":\"Investor address being checked\"},\"return\":\"bool whether the address is excluded\"},\"pullDividendPayment(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to pull\"}},\"pushDividendPayment(uint256,uint256,uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to push\",\"_end\":\"Index in investor list at which to stop pushing dividends\",\"_start\":\"Index in investor list at which to start pushing dividends\"}},\"pushDividendPaymentToAddresses(uint256,address[])\":{\"params\":{\"_dividendIndex\":\"Dividend to push\",\"_payees\":\"Addresses to which to push the dividend\"}},\"reclaimDividend(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to reclaim\"}},\"reclaimERC20(address)\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\",\"params\":{\"_tokenContract\":\"The address of the token contract\"}},\"reclaimETH()\":{\"details\":\"We duplicate here due to the overriden owner & onlyOwner\"},\"setDefaultExcluded(address[])\":{\"params\":{\"_excluded\":\"Addresses of investors\"}},\"setWithholding(address[],uint256[])\":{\"params\":{\"_investors\":\"Addresses of investors\",\"_withholding\":\"Withholding tax for individual investors (multiplied by 10**16)\"}},\"setWithholdingFixed(address[],uint256)\":{\"params\":{\"_investors\":\"Addresses of investor\",\"_withholding\":\"Withholding tax for all investors (multiplied by 10**16)\"}},\"updateDividendDates(uint256,uint256,uint256)\":{\"details\":\"NB - setting the maturity of a currently matured dividend to a future datewill effectively refreeze claims on that dividend until the new maturity date passes dev NB - setting the expiry date to a past date will mean no more payments can be pulledor pushed out of a dividend\",\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\",\"_expiry\":\"updated expiry date\",\"_maturity\":\"updated maturity date\"}},\"withdrawWithholding(uint256)\":{\"params\":{\"_dividendIndex\":\"Dividend to withdraw from\"}}},\"title\":\"Checkpoint module for issuing ERC20 dividends\"},\"userdoc\":{\"methods\":{\"calculateDividend(uint256,address)\":{\"notice\":\"Calculate amount of dividends claimable\"},\"changeWallet(address)\":{\"notice\":\"Function used to change wallet address\"},\"configure(address)\":{\"notice\":\"Function used to intialize the contract variables\"},\"constructor\":\"Constructor\",\"createCheckpoint()\":{\"notice\":\"Creates a checkpoint on the security token\"},\"createDividend(uint256,uint256,address,uint256,bytes32)\":{\"notice\":\"Creates a dividend and checkpoint for the dividend\"},\"createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)\":{\"notice\":\"Creates a dividend with a provided checkpoint\"},\"createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)\":{\"notice\":\"Creates a dividend with a provided checkpoint\"},\"createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)\":{\"notice\":\"Creates a dividend and checkpoint for the dividend\"},\"getCheckpointData(uint256)\":{\"notice\":\"Retrieves list of investors, their balances, and their current withholding tax percentage\"},\"getDataStore()\":{\"notice\":\"used to return the data store address of securityToken\"},\"getDefaultExcluded()\":{\"notice\":\"Return the default excluded addresses\"},\"getDividendData(uint256)\":{\"notice\":\"Get static dividend data\"},\"getDividendIndex(uint256)\":{\"notice\":\"Get the index according to the checkpoint id\"},\"getDividendProgress(uint256)\":{\"notice\":\"Retrieves list of investors, their claim status and whether they are excluded\"},\"getDividendsData()\":{\"notice\":\"Get static dividend data\"},\"getInitFunction()\":{\"notice\":\"Init function i.e generalise function to maintain the structure of the module contract\"},\"getPermissions()\":{\"notice\":\"Return the permissions flag that are associated with this module\"},\"getTreasuryWallet()\":{\"notice\":\"Returns the treasury wallet address\"},\"isClaimed(address,uint256)\":{\"notice\":\"Checks whether an address has claimed a dividend\"},\"isExcluded(address,uint256)\":{\"notice\":\"Checks whether an address is excluded from claiming a dividend\"},\"pause()\":{\"notice\":\"Pause (overridden function)\"},\"pullDividendPayment(uint256)\":{\"notice\":\"Investors can pull their own dividends\"},\"pushDividendPayment(uint256,uint256,uint256)\":{\"notice\":\"Issuer can push dividends using the investor list from the security token\"},\"pushDividendPaymentToAddresses(uint256,address[])\":{\"notice\":\"Issuer can push dividends to provided addresses\"},\"reclaimDividend(uint256)\":{\"notice\":\"Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\"},\"reclaimERC20(address)\":{\"notice\":\"Reclaims ERC20Basic compatible tokens\"},\"reclaimETH()\":{\"notice\":\"Reclaims ETH\"},\"setDefaultExcluded(address[])\":{\"notice\":\"Function to clear and set list of excluded addresses used for future dividends\"},\"setWithholding(address[],uint256[])\":{\"notice\":\"Function to set withholding tax rates for investors\"},\"setWithholdingFixed(address[],uint256)\":{\"notice\":\"Function to set withholding tax rates for investors\"},\"unpause()\":{\"notice\":\"Unpause (overridden function)\"},\"updateDividendDates(uint256,uint256,uint256)\":{\"notice\":\"Allows issuer to change maturity / expiry dates for dividends\"},\"withdrawWithholding(uint256)\":{\"notice\":\"Allows issuer to withdraw withheld tax\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol\":\"ERC20DividendCheckpoint\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/federicoelgarte/Polymath/polymath-core/contracts/Pausable.sol\":{\"keccak256\":\"0x135291a6bf5fb3fe3eb43632609f03353a06b647983e0951e60a6bd48fab3aad\",\"urls\":[\"bzzr://f8a5b7c699087985b56e58898f166ea3b0c9f9ed42ff2f59caa69e65e9f836ea\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/ICheckPermission.sol\":{\"keccak256\":\"0x0639208884bd73bbbf67d72f49b67b98195d026ac3df70f4c2f1cd6b28a6816e\",\"urls\":[\"bzzr://41d06bc714ee4c6b932c9cda0bb2c3c212d00b7e64e44c76fa1d1c04e26b21ae\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IDataStore.sol\":{\"keccak256\":\"0xe12ba7ca31d4440da805c1ba672f6fbf3b332feed46f228710b11a2830f55872\",\"urls\":[\"bzzr://851a96614dc3549b7a2b668adb1681facea7fdc6f2d2e8bda2a41a843ee5aff8\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IModule.sol\":{\"keccak256\":\"0xb30a1bc64af3d08ef58bb262fd30828a91644da8273a90be11143b46fb5a30cb\",\"urls\":[\"bzzr://da04ef1fce9eca7ae8164b922c08fbe4f446c7f0bbb1837b5a80bb34ed5983be\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IModuleFactory.sol\":{\"keccak256\":\"0x36586d9b8297a5601d3aea4fc08af2467cf4e3701521df340e635727e91bf018\",\"urls\":[\"bzzr://ac908dbb7fb6442e38802cee5659c45120c7fea795ef5212caa4f18772f88e26\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IOwnable.sol\":{\"keccak256\":\"0xaaad54d97044068a5c1356d006a8def879caa472ce24c97985446ce0ce185d45\",\"urls\":[\"bzzr://f687aa10a9aa791a802e761c26cec465c2d114eacfebbd80f040ac89bc36fb88\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/ISecurityToken.sol\":{\"keccak256\":\"0xa602f94a8948e58a60ab8122705fb1d6c09c40d276f0561ffe8e1d5f0b3e3495\",\"urls\":[\"bzzr://706f330312fa1665858a396ffd716a63f1509806ba0906b6aa4c36908bb2b75b\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol\":{\"keccak256\":\"0x5f71c4ec468e02e59bffa6f1ad29b967cc0c10e6fcfaeb12c5d0e4e5e247f667\",\"urls\":[\"bzzr://7840222e8a0f3c6f3ae3a275a2834292fe2212597bfd24092f481dab38f07937\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol\":{\"keccak256\":\"0x8d1cec97e017269ecd56930c35e0d898b742d1360fc14ce4fa29e01a8a6f37bd\",\"urls\":[\"bzzr://db4ee5c3dbb699ef8c302f4921553772f6688a296cffc8e5ddbd5a3ada5a5002\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol\":{\"keccak256\":\"0xfaa557a00a848952a653287f905dab595798e993faabe66d0d4291364cea386f\",\"urls\":[\"bzzr://93913fd5bfa11bf09ffa1f05f8325be745fbabdfb7b226da483fdd41b4cdffba\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/ICheckpoint.sol\":{\"keccak256\":\"0x605d4cb98ae4d958be5cf9cc7313a7716c79ce99e0ebd3d440e2ab7d8075a844\",\"urls\":[\"bzzr://d8ace36a2427fd11abb7bfba25e6e78b701d2345c6eba42b7d75b0611c9f3f48\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Module.sol\":{\"keccak256\":\"0xa25483b51d47d8b9edc14d9e5eed89004e200fb8f00e2ab22b8d11f7c98e6ac0\",\"urls\":[\"bzzr://18fb191ea40c732a695de780ca80d0c3614fb4eb090e17f0cdc11715194ae863\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/storage/modules/Checkpoint/Dividend/DividendCheckpointStorage.sol\":{\"keccak256\":\"0x683bbe53c2254ce9425f8223468396a43ea4880e2f8cb105e62c9a2dc9b6c0e2\",\"urls\":[\"bzzr://adabf13b7db8e17593be16a9cfc07df1ee7fd30f87d0ccc630e440edb52990a2\"]},\"/Users/federicoelgarte/Polymath/polymath-core/contracts/storage/modules/ModuleStorage.sol\":{\"keccak256\":\"0xd8e050c4238cc894c5b9803a2e3d93e8eda8a10be9334ab2f89359976494a653\",\"urls\":[\"bzzr://4999443e783062d597bacac7706bf71cec038f9a918fed231e9a49d0973ac0a4\"]},\"openzeppelin-solidity/contracts/math/Math.sol\":{\"keccak256\":\"0x775160984ceb0931bf67e718fb23afd6fc2a5d38a6e2378ebb438a039ed2269e\",\"urls\":[\"bzzr://209e27ad1c13e3e9b157915e0269ee4c3b6f0a494660dcc4acf1faf102e1a7ad\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "283:11042:67:-;;;338:3:164;298:43;;206:26:3;;;-1:-1:-1;;;;;;206:26:3;;;1299:106:67;5:2:-1;;;;30:1;27;20:12;5:2;1299:106:67;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1299:106:67;;;;;;;852:13:166;:46;;-1:-1:-1;;;;;852:46:166;;;-1:-1:-1;;;;;;852:46:166;;;;;;;908:7;:20;;;;918:10;908:20;;;938:9;:32;;;;;;;;;;;;;;283:11042:67;;;;;;",
  "deployedSourceMap": "283:11042:67:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:11042:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5470:426:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5470:426:66;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;5470:426:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5470:426:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5470:426:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5470:426:66;;-1:-1:-1;;5470:426:66;;;-1:-1:-1;5470:426:66;;-1:-1:-1;;5470:426:66:i;:::-;;298:43:164;;;:::i;:::-;;;;;;;;;;;;;;;;2793:125:96;;;:::i;2278:102:66:-;;;:::i;:::-;;;;-1:-1:-1;;;;;;2278:102:66;;;;;;;;;;;;;;3513:440:67;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3513:440:67;;;;;;;;-1:-1:-1;;;;;3513:440:67;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3513:440:67;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3513:440:67;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3513:440:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3513:440:67;;-1:-1:-1;;3513:440:67;;;-1:-1:-1;3513:440:67;;-1:-1:-1;;3513:440:67:i;13458:556:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13458:556:66;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336:39:166;;;:::i;3095:385:66:-;;;:::i;:::-;;;;-1:-1:-1;;;;;3095:385:66;;;;;;;;;;;;;;8094:419;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8094:419:66;;:::i;10688:634:67:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10688:634:67;;:::i;1819:51:164:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1819:51:164;-1:-1:-1;;;;;1819:51:164;;:::i;1833:94:96:-;;;:::i;4513:420:67:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;4513:420:67;;;;;;;;-1:-1:-1;;;;;4513:420:67;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4513:420:67;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4513:420:67;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4513:420:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4513:420:67;;-1:-1:-1;;4513:420:67;;;-1:-1:-1;4513:420:67;;-1:-1:-1;;4513:420:67:i;6089:523:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6089:523:66;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6089:523:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6089:523:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6089:523:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6089:523:66;;-1:-1:-1;6089:523:66;;-1:-1:-1;;;;;6089:523:66:i;263:29:164:-;;;:::i;17950:231:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17950:231:66;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9284:630;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9284:630:66;;;;;;-1:-1:-1;;;;;9284:630:66;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;206:26:3;;;:::i;10072:600:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10072:600:66;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10072:600:66;;;;;;;;;;;;;;;;;2649:372:67;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2649:372:67;;;;;;;;-1:-1:-1;;;;;2649:372:67;;;;;;;;;;;;;;;;;;;;:::i;593:23:166:-;;;:::i;11429:532:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11429:532:66;;;;;;;;;;;;:::i;2022:113::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2022:113:66;-1:-1:-1;;;;;2022:113:66;;:::i;1713:50:164:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1713:50:164;-1:-1:-1;;;;;1713:50:164;;:::i;16562:637:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16562:637:66;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16562:637:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16562:637:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;16562:637:66;;;;;;;;;;;;;;;;;;;;;1521:27:164;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1521:27:164;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17461:241:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17461:241:66;;;;;;;;:::i;1676:90:96:-;;;:::i;4728:522:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4728:522:66;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4728:522:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4728:522:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4728:522:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4728:522:66;;;;;;;;-1:-1:-1;4728:522:66;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;4728:522:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4728:522:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4728:522:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4728:522:66;;-1:-1:-1;4728:522:66;;-1:-1:-1;;;;;4728:522:66:i;2339:339:96:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2339:339:96;-1:-1:-1;;;;;2339:339:96;;:::i;211:49:70:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;211:49:70;;:::i;381:45:166:-;;;:::i;2542:127:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2542:127:66;-1:-1:-1;;;;;2542:127:66;;:::i;9750:807:67:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9750:807:67;;:::i;12333:771:66:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12333:771:66;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:298:67;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1844:298:67;;;;;;;;-1:-1:-1;;;;;1844:298:67;;;;;;;;;;;;;;;:::i;271:35:166:-;;;:::i;1609:25:164:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1609:25:164;;:::i;18312:235:66:-;;;:::i;242:22:166:-;;;:::i;3879:621:66:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3879:621:66;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3879:621:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3879:621:66;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;3879:621:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3879:621:66;;-1:-1:-1;3879:621:66;;-1:-1:-1;;;;;3879:621:66:i;6926:1046::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6926:1046:66;;;;;;;;;;;;:::i;2920:102::-;;;:::i;14513:1726::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14513:1726:66;;:::i;2019:117:96:-;;;:::i;3589:127:66:-;;;:::i;5470:426::-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;908:26:66;5591:19;;;5583:57;;;;;-1:-1:-1;;;;;5583:57:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;5718:45;5738:10;5750:12;5718:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5718:45:66;;;;;;;;;;;;;;;;;;5778:9;5773:117;5797:10;:17;5793:1;:21;5773:117;;;5867:12;5835:14;:29;5850:10;5861:1;5850:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5835:29:66;;;;;;;;;;;-1:-1:-1;5835:29:66;:44;5816:3;;5773:117;;;;5470:426;;;:::o;298:43:164:-;;;;:::o;2793:125:96:-;2834:25;:23;:25::i;:::-;2869:42;;:10;;2897:4;2889:21;2869:42;;;;;;;;;2889:21;2869:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2869:42:96;2793:125::o;2278:102:66:-;-1:-1:-1;;;;;2278:102:66;;:::o;3513:440:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;3793:13:67;;:32;;;;;;;;3770:20;;-1:-1:-1;;;;;3793:13:67;;:30;;:32;;;;;;;;;;;;;;3770:20;3793:13;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;3793:32:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3793:32:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3793:32:67;;-1:-1:-1;3835:111:67;3878:9;3889:7;3898:6;3906:7;3793:32;3929:9;3940:5;3835:42;:111::i;:::-;992:1:96;3513:440:67;;;;;;;:::o;13458:556:66:-;13537:15;13562:16;13588:14;13612;13636:21;13667:12;13705:9;13715:14;13705:25;;;;;;;;;;;;;;;;;;:33;;;13695:43;;13759:9;13769:14;13759:25;;;;;;;;;;;;;;;;;;:34;;;13748:45;;13812:9;13822:14;13812:25;;;;;;;;;;;;;;;;;;:32;;;13803:41;;13863:9;13873:14;13863:25;;;;;;;;;;;;;;;;;;:32;;;13854:41;;13921:9;13931:14;13921:25;;;;;;;;;;;;;;;;;;:39;;;13905:55;;13977:9;13987:14;13977:25;;;;;;;;;;;;;;;;;;:30;;;13970:37;;13458:556;;;;;;;:::o;336:39:166:-;-1:-1:-1;;;;;336:39:166;:::o;3095:385:66:-;3175:6;;3144:15;;-1:-1:-1;;;;;3175:6:66;3171:302;;3211:30;3271:14;:12;:14::i;:::-;-1:-1:-1;;;;;3260:37:66;;470:66:166;3298:8:66;;3260:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3260:47:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3260:47:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3260:47:66;;-1:-1:-1;;;;;;3331:37:66;;3323:65;;;;;-1:-1:-1;;;;;3323:65:66;;;;;;;;;;;;-1:-1:-1;;;;;3323:65:66;;;;;;;;;;;;;;;3409:14;-1:-1:-1;3402:21:66;;3171:302;-1:-1:-1;3467:6:66;;-1:-1:-1;;;;;3467:6:66;3460:13;;8094:419;387:6:3;;-1:-1:-1;;;387:6:3;;;;386:7;378:38;;;;;-1:-1:-1;;;;;378:38:3;;;;;;;;;;;;-1:-1:-1;;;;;378:38:3;;;;;;;;;;;;;;;8178:35:66;8198:14;8178:19;:35::i;:::-;8223:25;8251:9;8261:14;8251:25;;;;;;;;;;;;;;;;8312:10;8295:28;;:16;8251:25;;;;;8295:16;;;:28;;;;;;;8251:25;;-1:-1:-1;8295:28:66;;8294:29;8286:66;;;;;-1:-1:-1;;;;;8286:66:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;8397:10;8371:37;;;;:25;;;:37;;;;;;;;8370:38;8362:84;;;;-1:-1:-1;;;;;8362:84:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8456:50;8469:10;8481:8;8491:14;8456:12;:50::i;:::-;426:1:3;8094:419:66;:::o;10688:634:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;10804:9:67;:16;10787:33;;10779:62;;;;;-1:-1:-1;;;;;10779:62:67;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10779:62:67;;;;;;;;;;;;;;;10851:25;10879:9;10889:14;10879:25;;;;;;;;;;;;;;;;;;10851:53;;10914:25;10942:59;10969:8;:31;;;10942:8;:22;;;:26;;:59;;;;:::i;:::-;11045:22;;;;11011:31;;;:56;-1:-1:-1;11092:30:67;;;;;;;;;;;10914:87;;-1:-1:-1;;;;;;11092:30:67;11085:47;11133:19;:17;:19::i;:::-;11154:17;11085:87;;;;;;;;;;;;;-1:-1:-1;;;;;11085:87:67;-1:-1:-1;;;;;11085:87:67;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11085:87:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11085:87:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11085:87:67;11077:115;;;;;-1:-1:-1;;;;;11077:115:67;;;;;;;;;;;;-1:-1:-1;;;;;11077:115:67;;;;;;;;;;;;;;;11265:14;:30;;;;;;;;;;;;;;11241:6;11207:108;;;;;;;-1:-1:-1;;;;;11265:30:67;;;;;;11241:6;;;;;11207:108;;;;;;;;992:1:96;;10688:634:67;;:::o;1819:51:164:-;;;;;;;;;;;;;:::o;1833:94:96:-;1869:25;:23;:25::i;:::-;1904:16;:14;:16::i;:::-;1833:94::o;4513:420:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;4814:112:67;4857:9;4868:7;4877:6;4885:7;4894:13;4909:9;4920:5;4814:42;:112::i;6089:523:66:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;6265:35:66;6285:14;6265:19;:35::i;:::-;6310:25;6338:9;6348:14;6338:25;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6373:233:66;6397:7;:14;6393:1;:18;6373:233;;;6438:8;:16;;:28;6455:7;6463:1;6455:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6438:28:66;;;;;;;;;;;-1:-1:-1;6438:28:66;;;;6437:29;6436:75;;;;;6473:8;:25;;:37;6499:7;6507:1;6499:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6473:37:66;;;;;;;;;;;-1:-1:-1;6473:37:66;;;;6472:38;6436:75;6432:164;;;6531:50;6544:7;6552:1;6544:10;;;;;;;;;;;;;;6556:8;6566:14;6531:12;:50::i;:::-;6413:3;;6373:233;;;;992:1:96;6089:523:66;;;:::o;263:29:164:-;;;-1:-1:-1;;;;;263:29:164;;:::o;17950:231:66:-;18076:9;:16;18035:4;;18059:33;;18051:62;;;;;-1:-1:-1;;;;;18051:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;18051:62:66;;;;;;;;;;;;;;;18130:9;18140:14;18130:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18130:44:66;;;;:33;:25;;;;;:33;;;;:44;;;;;;;;;-1:-1:-1;17950:231:66;;;;;:::o;9284:630::-;9424:9;:16;9371:7;;;;9407:33;;9399:62;;;;;-1:-1:-1;;;;;9399:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9399:62:66;;;;;;;;;;;;;;;9471:25;9499:9;9509:14;9499:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9538:24:66;;;;:16;9499:25;;;;;9538:16;;;:24;;;;;;;9499:25;;-1:-1:-1;9538:24:66;;;:61;;-1:-1:-1;;;;;;9566:33:66;;;;;;:25;;;:33;;;;;;;;9538:61;9534:105;;;-1:-1:-1;9623:1:66;;-1:-1:-1;9623:1:66;;-1:-1:-1;9615:13:66;;9534:105;9666:13;;9700:21;;9666:56;;;-1:-1:-1;;;;;9666:56:66;;-1:-1:-1;;;;;9666:56:66;;;;;;;;;;;;;;;;9648:15;;9666:13;;;;;:25;;:56;;;;;;;;;;;;;;;:13;:56;;;5:2:-1;;;;30:1;27;20:12;5:2;9666:56:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9666:56:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9666:56:66;9781:20;;;;9760:15;;;;9666:56;;-1:-1:-1;9732:13:66;;9748:54;;9781:20;9748:28;;9666:56;;9748:28;:11;:28;:::i;:::-;:32;:54;:32;:54;:::i;:::-;-1:-1:-1;;;;;9841:22:66;;9812:16;9841:22;;;:14;:22;;;;;;9732:70;;-1:-1:-1;9812:16:66;9831:42;;908:26;;9831:33;;9732:70;;9831:33;:9;:33;:::i;:42::-;9891:5;;-1:-1:-1;9812:61:66;;-1:-1:-1;;;;9284:630:66;;;;;;:::o;206:26:3:-;;;-1:-1:-1;;;206:26:3;;;;;:::o;10072:600:66:-;10141:16;10169:15;;10198:161;10222:9;:16;10218:20;;10198:161;;;10292:13;10263:9;10273:1;10263:12;;;;;;;;;;;;;;;;;;:25;;;:42;10259:90;;;10325:9;;;;;10259:90;10240:3;;10198:161;;;;10369:22;10408:7;10394:22;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;10394:22:66;-1:-1:-1;10436:1:66;;-1:-1:-1;10369:47:66;-1:-1:-1;10436:1:66;10447:197;10471:9;:16;10467:20;;10447:197;;;10541:13;10512:9;10522:1;10512:12;;;;;;;;;;;;;;;;;;:25;;;:42;10508:126;;;10591:1;10574:5;10580:7;10574:14;;;;;;;;;;;;;;;;;:18;10610:9;;;;;10508:126;10489:3;;10447:197;;;-1:-1:-1;10660:5:66;10072:600;-1:-1:-1;;;10072:600:66:o;2649:372:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;2903:111:67;2946:9;2957:7;2966:6;2974:7;2983:13;2998:8;2903:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2903:111:67;;;;;;;;;;;;;;;;;;;;;3008:5;2903:42;:111::i;:::-;2649:372;;;;;;;:::o;593:23:166:-;;;-1:-1:-1;;;;;593:23:166;;:::o;11429:532:66:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;11578:9:66;:16;11561:33;;11553:62;;;;;-1:-1:-1;;;;;11553:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;11553:62:66;;;;;;;;;;;;;;;11643:9;11633:7;:19;11625:54;;;;;-1:-1:-1;;;;;11625:54:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;11689:25;11717:9;11727:14;11717:25;;;;;;;;;;;;;;;;;;11689:53;;11778:3;11760:8;:15;;;:21;11752:58;;;;;-1:-1:-1;;;;;11752:58:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;11820:15;;;:25;;;11855:17;;;:29;;;11899:55;;;;;;;;;;;;;;11919:14;;11899:55;;;;;;;;992:1:96;11429:532:66;;;;:::o;2022:113::-;1560:7:96;;-1:-1:-1;;;;;1560:7:96;1546:10;:21;1538:55;;;;;-1:-1:-1;;;;;1538:55:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:19:66;2120:7;2109:10;:19::i;1713:50:164:-;;;;;;;;;;;;;:::o;16562:637:66:-;16635:26;16663:25;16690:29;16756:13;;;;;;;;;-1:-1:-1;;;;;16756:13:66;-1:-1:-1;;;;;16756:33:66;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16756:35:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16756:35:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16756:35:66;16739:52;;;16731:83;;;;;-1:-1:-1;;;;;16731:83:66;;;;;;;;;;;;-1:-1:-1;;;;;16731:83:66;;;;;;;;;;;;;;;16836:13;;:43;;;-1:-1:-1;;;;;16836:43:66;;;;;;;;;;-1:-1:-1;;;;;16836:13:66;;;;:28;;:43;;;;;:13;;:43;;;;;;;;:13;:43;;;5:2:-1;;;;30:1;27;20:12;5:2;16836:43:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16836:43:66;;;;;;39:16:-1;36:1;17:17;2:54;101:4;16836:43:66;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;16836:43:66;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;16836:43:66;;;;;;16824:55;;16914:9;:16;16900:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;16900:31:66;;16889:42;;16970:9;:16;16956:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;16956:31:66;;16941:46;;17002:9;16997:196;17017:9;:16;17013:1;:20;16997:196;;;17068:13;;17094:12;;-1:-1:-1;;;;;17068:13:66;;;;:25;;17094:9;;17104:1;;17094:12;;;;;;;;;;;;17108:13;17068:54;;;;;;;;;;;;;-1:-1:-1;;;;;17068:54:66;-1:-1:-1;;;;;17068:54:66;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17068:54:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17068:54:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17068:54:66;17054:11;;:8;;17063:1;;17054:11;;;;;;;;;;;:68;;;;;17154:14;:28;17169:9;17179:1;17169:12;;;;;;;;;;;;;;-1:-1:-1;;;;;17154:28:66;-1:-1:-1;;;;;17154:28:66;;;;;;;;;;;;;17136:12;17149:1;17136:15;;;;;;;;;;;;;;;;;:46;17035:3;;16997:196;;;;16562:637;;;;;:::o;1521:27:164:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1521:27:164;;;;;;;;;;;;;;;;;;;;:::o;17461:241:66:-;17588:9;:16;17547:4;;17571:33;;17563:62;;;;;-1:-1:-1;;;;;17563:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;17563:62:66;;;;;;;;;;;;;;;17642:9;17652:14;17642:25;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17642:53:66;;;;:42;:25;;;;;:42;;;;:53;;;;;;;;;-1:-1:-1;17461:241:66;;;;:::o;1676:90:96:-;1710:25;:23;:25::i;:::-;1745:14;:12;:14::i;4728:522:66:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;4874:12:66;:19;4853:10;:17;:40;4845:77;;;;;-1:-1:-1;;;;;4845:77:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;5000:40;5015:10;5027:12;5000:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5000:40:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5000:40:66;;;;;;;;;;;;;;;;;;;5055:9;5050:194;5074:10;:17;5070:1;:21;5050:194;;;931:2;916;908:26;5120:12;5133:1;5120:15;;;;;;;;;;;;;;:22;;5112:60;;;;;-1:-1:-1;;;;;5112:60:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;5218:12;5231:1;5218:15;;;;;;;;;;;;;;5186:14;:29;5201:10;5212:1;5201:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5186:29:66;;;;;;;;;;;-1:-1:-1;5186:29:66;:47;5093:3;;5050:194;;2339:339:96;2402:25;:23;:25::i;:::-;-1:-1:-1;;;;;2445:28:96;;2437:56;;;;;-1:-1:-1;;;;;2437:56:96;;;;;;;;;;;;-1:-1:-1;;;;;2437:56:96;;;;;;;;;;;;;;;2568:30;;;-1:-1:-1;;;;;2568:30:96;;2592:4;2568:30;;;;;;2525:14;;2503:12;;-1:-1:-1;;;;;2568:15:96;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;2568:30:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2568:30:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2568:30:96;2616:35;;;-1:-1:-1;;;;;2616:35:96;;2631:10;2616:35;;;;;;;;;;;;2568:30;;-1:-1:-1;;;;;;2616:14:96;;;;;:35;;;;;2568:30;;2616:35;;;;;;;;-1:-1:-1;2616:14:96;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;2616:35:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2616:35:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2616:35:96;2608:63;;;;;-1:-1:-1;;;;;2608:63:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;2339:339;;;:::o;211:49:70:-;;;;;;;;;;;;;-1:-1:-1;;;;;211:49:70;;:::o;381:45:166:-;-1:-1:-1;;;;;381:45:166;:::o;2542:127:66:-;2608:25;:23;:25::i;9750:807:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;9862:9:67;:16;9845:33;;9837:62;;;;;-1:-1:-1;;;;;9837:62:67;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9837:62:67;;;;;;;;;;;;;;;9987:9;9997:14;9987:25;;;;;;;;;;;;;;;;;;:32;;;9980:3;:39;;9972:77;;;;;-1:-1:-1;;;;;9972:77:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;10068:9;10078:14;10068:25;;;;;;;;;;;;;;;;:35;:25;;;;;:35;;;;10067:36;10059:64;;;;;-1:-1:-1;;;;;10059:64:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;10171:4;10133:9;10143:14;10133:25;;;;;;;;;;;;;;;;;;;;;:35;;:42;;-1:-1:-1;;10133:42:67;;;;;;;;;;;10213:9;:25;;10223:14;;10213:25;;;;;;;;;;;;;;;;10185:53;;10248:23;10274:43;10294:8;:22;;;10274:8;:15;;;:19;;:43;;;;:::i;:::-;10342:14;:30;;;;;;;;;;;10248:69;;-1:-1:-1;;;;;;10342:30:67;10335:47;10383:19;:17;:19::i;:::-;10404:15;10335:85;;;;;;;;;;;;;-1:-1:-1;;;;;10335:85:67;-1:-1:-1;;;;;10335:85:67;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10335:85:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10335:85:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10335:85:67;10327:113;;;;;-1:-1:-1;;;;;10327:113:67;;;;;;;;;;;;-1:-1:-1;;;;;10327:113:67;;;;;;;;;;;;;;;10502:14;:30;;;;;;;;;;;;;;10478:6;10455:95;;;;;;;-1:-1:-1;;;;;10502:30:67;;;;;;10478:6;;;;;10455:95;;;;;;;;992:1:96;;9750:807:67;;:::o;12333:771:66:-;12393:25;12428:26;12464:24;12498;12532:31;12573:22;12636:9;:16;;;;12622:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12622:31:66;-1:-1:-1;12689:9:66;:16;12675:31;;;;;;;;;;;;;;;;12611:42;;-1:-1:-1;12675:31:66;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12675:31:66;-1:-1:-1;12740:9:66;:16;12726:31;;;;;;;;;;;;;;;;12663:43;;-1:-1:-1;12726:31:66;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12726:31:66;-1:-1:-1;12791:9:66;:16;12777:31;;;;;;;;;;;;;;;;12716:41;;-1:-1:-1;12777:31:66;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12777:31:66;-1:-1:-1;12849:9:66;:16;12835:31;;;;;;;;;;;;;;;;12767:41;;-1:-1:-1;12835:31:66;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12835:31:66;-1:-1:-1;12898:9:66;:16;12884:31;;;;;;;;;;;;;;;;12818:48;;-1:-1:-1;12884:31:66;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;12884:31:66;-1:-1:-1;12876:39:66;-1:-1:-1;12930:9:66;12925:173;12949:9;:16;12945:20;;12925:173;;;13069:18;13085:1;13069:15;:18::i;:::-;12987:8;12996:1;12987:11;;;;;;;;;;;;;13000:9;13010:1;13000:12;;;;;;;;;;;;;13014:7;13022:1;13014:10;;;;;;;;;;;;;13026:7;13034:1;13026:10;;;;;;;;;;;;;13038:14;13053:1;13038:17;;;;;;;;;;;;;13057:5;13063:1;13057:8;;;;;;;;;;;;;;;;;12986:101;;;;;;;;;;;;;;;;;;;;;12967:3;;12925:173;;;;12333:771;;;;;;:::o;1844:298:67:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;2053:82:67;2082:9;2093:7;2102:6;2110:7;2119:8;2053:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2053:82:67;;;;;;;;;;;;;;;;;;;;;2129:5;2053:28;:82::i;:::-;1844:298;;;;;;:::o;271:35:166:-;;;-1:-1:-1;;;;;271:35:166;;:::o;1609:25:164:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1609:25:164;;-1:-1:-1;1609:25:164;:::o;18312:235:66:-;18420:16;;;18434:1;18420:16;;;18358;18420;;;;;18358;;;18420;18434:1;18420:16;;;;;105:10:-1;18420:16:66;88:34:-1;136:17;;-1:-1;18420:16:66;18386:50;;-1:-1:-1;;;;;18446:14:66;18461:1;18446:17;;;;;;;;;;;;;:25;;;;;-1:-1:-1;;;;;18481:14:66;18496:1;18481:17;;;;;;;;;;;;;;;;;:28;18526:14;-1:-1:-1;18312:235:66;:::o;242:22:166:-;;;-1:-1:-1;;;;;242:22:166;;:::o;3879:621:66:-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;3996:22:66;;3976:9;:16;:42;;3968:82;;;;;-1:-1:-1;;;;;3968:82:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;4065:9;4060:289;4084:9;:16;4080:1;:20;4060:289;;;4153:1;-1:-1:-1;;;;;4129:26:66;:9;4139:1;4129:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4129:26:66;;;4121:54;;;;;-1:-1:-1;;;;;4121:54:66;;;;;;;;;;;;-1:-1:-1;;;;;4121:54:66;;;;;;;;;;;;;;;4210:1;4206:5;;4189:150;4217:9;:16;4213:1;:20;4189:150;;;4282:9;4292:1;4282:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4266:28:66;:9;4276:1;4266:12;;;;;;;;;;;;;;-1:-1:-1;;;;;4266:28:66;;;4258:66;;;;;-1:-1:-1;;;;;4258:66:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;4235:3;;4189:150;;;-1:-1:-1;4102:3:66;;4060:289;;;-1:-1:-1;4358:20:66;;;;:8;;:20;;;;;:::i;:::-;;4456:37;4484:8;4456:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4456:37:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3879:621;;:::o;6926:1046::-;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;7199:35:66;7219:14;7199:19;:35::i;:::-;7244:25;7272:9;7282:14;7272:25;;;;;;;;;;;;;;;;;;;;7330:21;;7390:13;;:62;;;-1:-1:-1;;;;;7390:62:66;;;;;;;;;;;;;;;;;;;;;;7272:25;;-1:-1:-1;7330:21:66;;7361:26;;-1:-1:-1;;;;;7390:13:66;;;;:34;;:62;;;;;7272:25;7390:62;;;;;:13;:62;;;5:2:-1;;;;30:1;27;20:12;5:2;7390:62:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7390:62:66;;;;;;39:16:-1;36:1;17:17;2:54;101:4;7390:62:66;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;7390:62:66;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;-1:-1;7390:62:66;;-1:-1:-1;7683:9:66;;-1:-1:-1;;;;7678:288:66;7702:9;:16;7698:1;:20;7678:288;;;7739:21;7779:9;7789:1;7779:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7813:23:66;;;;;;:16;;;:23;;;;;;;;7779:12;;-1:-1:-1;7813:23:66;;7812:24;7811:65;;;;-1:-1:-1;;;;;;7843:32:66;;;;;;:25;;;:32;;;;;;;;7842:33;7811:65;7807:149;;;7896:45;7909:5;7916:8;7926:14;7896:12;:45::i;:::-;-1:-1:-1;7720:3:66;;7678:288;;2920:102;2972:16;3007:8;3000:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3000:15:66;;;;;;;;;;;;;;;;;;;;;;;2920:102;:::o;14513:1726::-;14598:26;14634:27;14671:28;14709:31;14750:29;14789:30;14860:9;:16;;;;14843:14;:33;14835:62;;;;;-1:-1:-1;;;;;14835:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14835:62:66;;;;;;;;;;;;;;;14939:25;14967:9;14977:14;14967:25;;;;;;;;;;;;;;;;;;;;15025:21;;15068:13;;:42;;;-1:-1:-1;;;;;15068:42:66;;;;;;;;;;14967:25;;-1:-1:-1;15025:21:66;;-1:-1:-1;;;;;15068:13:66;;;;:28;;:42;;;;;14967:25;15068:42;;;;;;:13;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;15068:42:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15068:42:66;;;;;;39:16:-1;36:1;17:17;2:54;101:4;15068:42:66;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;15068:42:66;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;15068:42:66;;;;;;15056:54;;15147:9;:16;15136:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15136:28:66;;15120:44;;15202:9;:16;15191:28;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15191:28:66;;15174:45;;15260:9;:16;15246:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15246:31:66;;15229:48;;15316:9;:16;15302:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15302:31:66;;15287:46;;15373:9;:16;15359:31;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;15359:31:66;;15343:47;;15405:9;15400:833;15420:9;:16;15416:1;:20;15400:833;;;15476:8;:16;;:30;15493:9;15503:1;15493:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15476:30:66;-1:-1:-1;;;;;15476:30:66;;;;;;;;;;;;;;;;;;;;;;15457:13;15471:1;15457:16;;;;;;;;;;;;;:49;;;;;;;;;;;15540:8;:25;;:39;15566:9;15576:1;15566:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15540:39:66;-1:-1:-1;;;;;15540:39:66;;;;;;;;;;;;;;;;;;;;;;15520:14;15535:1;15520:17;;;;;;;;:59;;;:17;;;;;;;;;;;:59;15612:13;;15638:12;;-1:-1:-1;;;;;15612:13:66;;;;:25;;15638:9;;15648:1;;15638:12;;;;;;;;;;;;15652:8;:21;;;15612:62;;;;;;;;;;;;;-1:-1:-1;;;;;15612:62:66;-1:-1:-1;;;;;15612:62:66;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15612:62:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15612:62:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15612:62:66;15593:16;;:13;;15607:1;;15593:16;;;;;;;;;;;:81;;;;;15693:14;15708:1;15693:17;;;;;;;;;;;;;;15688:535;;15734:13;15748:1;15734:16;;;;;;;;;;;;;;15730:479;;;15794:8;:17;;:31;15812:9;15822:1;15812:12;;;;;;;;;;;;;;-1:-1:-1;;;;;15794:31:66;-1:-1:-1;;;;;15794:31:66;;;;;;;;;;;;;15774:14;15789:1;15774:17;;;;;;;;;;;;;:51;;;;;15865:86;15933:14;15948:1;15933:17;;;;;;;;;;;;;;15865:63;15907:8;:20;;;15865:37;15886:8;:15;;;15865:13;15879:1;15865:16;;;;;;;;;;;;;;:20;;:37;;;;:::i;:63::-;:67;:86;:67;:86;:::i;:::-;15847:12;15860:1;15847:15;;;;;;;;;;;;;:104;;;;;15730:479;;;15999:13;16014:16;16034:47;16052:14;16068:9;16078:1;16068:12;;;;;;;;;;;;;;16034:17;:47::i;:::-;15998:83;;;;16123:8;16103:14;16118:1;16103:17;;;;;;;;;;;;;;;;;:28;16171:19;:5;16181:8;16171:19;:9;:19;:::i;:::-;16153:12;16166:1;16153:15;;;;;;;;;;;;;:37;;;;;15730:479;;;15438:3;;15400:833;;;;14513:1726;;;;;;;;;:::o;2019:117:96:-;2103:13;;:25;;;-1:-1:-1;;;;;2103:25:96;;;;2063:10;;-1:-1:-1;;;;;2103:13:96;;:23;;:25;;;;;;;;;;;;;;:13;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;2103:25:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2103:25:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2103:25:96;;-1:-1:-1;2019:117:96;:::o;3589:127:66:-;3651:7;-1:-1:-1;;;;;930:29:96;941:5;948:10;930;:29::i;:::-;922:60;;;;;-1:-1:-1;;;;;922:60:96;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;922:60:96;;;;;;;;;;;;;;;3677:13:66;;;;;;;;;-1:-1:-1;;;;;3677:13:66;-1:-1:-1;;;;;3677:30:66;;:32;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3677:32:66;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3677:32:66;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3677:32:66;;-1:-1:-1;992:1:96;3589:127:66;;:::o;1006:336:96:-;1081:4;1097:12;1139:13;;;;;;;;;-1:-1:-1;;;;;1139:13:96;-1:-1:-1;;;;;1123:37:96;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1123:39:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1123:39:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1123:39:96;1200:7;;-1:-1:-1;;;;;1112:50:96;;;;;;;;;-1:-1:-1;1200:7:96;1189:18;1112:50;;1224:20;;;1235:9;1224:20;:111;;;-1:-1:-1;1273:13:96;;1248:87;;;-1:-1:-1;;;;;1248:87:96;;-1:-1:-1;;;;;1248:87:96;;;;;;;1322:4;1248:87;;;;;;;;;;;;1273:13;;;;;1248:56;;:87;;;;;;;;;;;;;;1273:13;1248:87;;;5:2:-1;;;;30:1;27;20:12;5:2;1248:87:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1248:87:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1248:87:96;1224:111;1217:118;1006:336;-1:-1:-1;;;;;1006:336:96:o;1348:151::-;1445:13;;;;;;;;;-1:-1:-1;;;;;1445:13:96;-1:-1:-1;;;;;1429:37:96;;:39;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1429:39:96;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1429:39:96;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1429:39:96;-1:-1:-1;;;;;1415:53:96;:10;:53;1407:85;;;;;-1:-1:-1;;;;;1407:85:96;;;;;;;;;;;;;;;;;;;;;;;;;;;5493:2282:67;5801:22;;5781:9;:16;:42;;5773:82;;;;;-1:-1:-1;;;;;5773:82:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;5883:9;5873:7;:19;5865:54;;;;;-1:-1:-1;;;;;5865:54:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;6010:3;6000:7;:13;5992:40;;;;;-1:-1:-1;;;;;5992:40:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;6060:1;6050:7;:11;6042:40;;;;;-1:-1:-1;;;;;6042:40:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6100:20:67;;6092:46;;;;;-1:-1:-1;;;;;6092:46:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;6173:13;;;;;;;;;-1:-1:-1;;;;;6173:13:67;-1:-1:-1;;;;;6173:33:67;;:35;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6173:35:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6173:35:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6173:35:67;6156:52;;;6148:83;;;;;-1:-1:-1;;;;;6148:83:67;;;;;;;;;;;;-1:-1:-1;;;;;6148:83:67;;;;;;;;;;;;;;;6249:63;;;-1:-1:-1;;;;;6249:63:67;;6277:10;6249:63;;;;6297:4;6249:63;;;;;;;;;;;;-1:-1:-1;;;;;6249:27:67;;;;;:63;;;;;;;;;;;;;;-1:-1:-1;6249:27:67;:63;;;5:2:-1;;;;30:1;27;20:12;5:2;6249:63:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6249:63:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6249:63:67;6241:97;;;;;-1:-1:-1;;;;;6241:97:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;6356:19;6348:28;;;;;;6410:9;:16;6460:13;;:42;;;-1:-1:-1;;;;;6460:42:67;;;;;;;;;;6386:21;;-1:-1:-1;;;;;6460:13:67;;:27;;:42;;;;;;;;;;;;;;:13;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;6460:42:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6460:42:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6460:42:67;;-1:-1:-1;6520:17:67;6512:44;;;;;-1:-1:-1;;;;;6512:44:67;;;;;;;;;;;;-1:-1:-1;;;;;6512:44:67;;;;;;;;;;;;;;;6630:323;;;;;;;;;;;6687:3;6630:323;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6630:323:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6602:9;27:10:-1;;6630:323:67;23:18:-1;;45:23;;6602:361:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6602:361:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6974:411:67;6998:9;:16;6994:1;:20;6974:411;;;7067:1;-1:-1:-1;;;;;7043:26:67;:9;7053:1;7043:12;;;;;;;;;;;;;;-1:-1:-1;;;;;7043:26:67;;;7035:54;;;;;-1:-1:-1;;;;;7035:54:67;;;;;;;;;;;;-1:-1:-1;;;;;7035:54:67;;;;;;;;;;;;;;;7112:9;7122:13;7112:24;;;;;;;;;;;;;;;;;;:41;;:55;7154:9;7164:1;7154:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7112:55:67;;;;;;;;;;;-1:-1:-1;7112:55:67;;;;7111:56;7103:90;;;;;-1:-1:-1;;;;;7103:90:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;7243:13;;7269:12;;7224:74;;-1:-1:-1;;;;;7243:13:67;;:25;;7269:9;;7279:1;;7269:12;;;;;;;;;;;;7283:13;7243:54;;;;;;;;;;;;;-1:-1:-1;;;;;7243:54:67;-1:-1:-1;;;;;7243:54:67;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7243:54:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7243:54:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7243:54:67;7224:14;;:74;:18;:74;:::i;:::-;7207:91;;7370:4;7312:9;7322:13;7312:24;;;;;;;;;;;;;;;;;;:41;;:55;7354:9;7364:1;7354:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7312:55:67;;;;;;;;;;;-1:-1:-1;7312:55:67;:62;;-1:-1:-1;;7312:62:67;;;;;;;;;;-1:-1:-1;7016:3:67;6974:411;;;;7418:14;7402:13;:30;7394:57;;;;;-1:-1:-1;;;;;7394:57:67;;;;;;;;;;;;-1:-1:-1;;;;;7394:57:67;;;;;;;;;;;;;;;7461:25;7505:14;7489:13;:30;7461:58;;7568:17;7529:9;7539:13;7529:24;;;;;;;;;;;;;;;;;;;;;;;;:36;;:56;;;;7595:29;;;;;;;;;;:38;;-1:-1:-1;;;;;;7595:38:67;-1:-1:-1;;;;;7595:38:67;;;;;7643:125;7676:13;7691:9;7702:7;7595:38;7719:7;7728:17;7595:29;7762:5;7643:32;:125::i;:::-;5493:2282;;;;;;;;;;;:::o;1325:524:66:-;1427:9;:16;1410:33;;1402:62;;;;;-1:-1:-1;;;;;1402:62:66;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1402:62:66;;;;;;;;;;;;;;;1483:9;1493:14;1483:25;;;;;;;;;;;;;;;;:35;:25;;;;;:35;;;;1482:36;1474:67;;;;;-1:-1:-1;;;;;1474:67:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:9;1639:14;1629:25;;;;;;;;;;;;;;;;;;:34;;;1622:3;:41;;1614:81;;;;;-1:-1:-1;;;;;1614:81:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:9;1792:14;1782:25;;;;;;;;;;;;;;;;;;:32;;;1776:3;:38;1768:74;;;;;-1:-1:-1;;;;;1768:74:66;;;;;;;;;;;;;;;;;;;;;;;;;;;8775:810:67;8893:13;8908:16;8928:41;8946:14;8962:6;8928:17;:41::i;:::-;-1:-1:-1;;;;;8979:25:67;;;;;;:17;;;:25;;;;;:32;;-1:-1:-1;;8979:32:67;9007:4;8979:32;;;9057:23;;;;8892:77;;-1:-1:-1;8892:77:67;-1:-1:-1;9047:34:67;;8892:77;;9047:34;:9;:34;:::i;:::-;9021:23;;;:60;9091:26;9120:19;:5;9130:8;9120:19;:9;:19;:::i;:::-;9091:48;-1:-1:-1;9153:22:67;;9149:156;;9206:14;:30;;;;;;;;;;;;9199:75;;-1:-1:-1;;;;;9199:75:67;;-1:-1:-1;;;;;9199:75:67;;;;;;;;;;;;;;;9206:30;;;;;9199:47;;:75;;;;;9206:30;;9199:75;;;;;;;;;;9206:30;9199:75;;;5:2:-1;;;;30:1;27;20:12;5:2;9199:75:67;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9199:75:67;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9199:75:67;9191:103;;;;;-1:-1:-1;;;;;9191:103:67;;;;;;;;;;;;-1:-1:-1;;;;;9191:103:67;;;;;;;;;;;;;;;9318:12;;9314:157;;9372:23;;;;:37;;9400:8;9372:37;:27;:37;:::i;:::-;9346:23;;;:63;-1:-1:-1;;;;;9423:26:67;;;;;;:18;;;:26;;;;;:37;;;9314:157;9530:14;:30;;;;;;;;;;;;;9485:93;;;;;;;;;;;;;-1:-1:-1;;;;;9530:30:67;;;;9545:14;;9485:93;;;;;;;;;;;;;;;8775:810;;;;;;:::o;1211:145:177:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;-1:-1:-1;1325:5:177;;;1211:145::o;976:168:3:-;580:6;;-1:-1:-1;;;580:6:3;;;;572:41;;;;;-1:-1:-1;;;;;572:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:6;:14;;-1:-1:-1;;;;;;1026:14:3;;;1118:19;;;1126:10;1118:19;;;;;;;;;;;;;976:168::o;231:421:177:-;289:7;529:6;525:45;;-1:-1:-1;558:1:177;551:8;;525:45;592:5;;;596:1;592;:5;:1;615:5;;;;;:10;607:19;;;;;;644:1;231:421;-1:-1:-1;;;231:421:177:o;782:296::-;840:7;937:1;933;:5;925:14;;;;;;949:9;965:1;961;:5;;;;;;;782:296;-1:-1:-1;;;;782:296:177:o;2675:128:66:-;2754:6;;2744:26;;-1:-1:-1;;;;;2744:26:66;;;;2754:6;;2744:26;;2754:6;;2744:26;2780:6;:16;;-1:-1:-1;;;;;;2780:16:66;-1:-1:-1;;;;;2780:16:66;;;;;;;;;;2675:128::o;719:166:3:-;387:6;;-1:-1:-1;;;387:6:3;;;;386:7;378:38;;;;;-1:-1:-1;;;;;378:38:3;;;;;;;;;;;;-1:-1:-1;;;;;378:38:3;;;;;;;;;;;;;;;770:6;:13;;-1:-1:-1;;;;;;770:13:3;-1:-1:-1;;;770:13:3;;;861:17;;;867:10;861:17;;;;;;;;;;;;;719:166::o;1439:145:177:-;1497:7;1528:5;;;1551:6;;;;1543:15;;;;;7936:612:67;8300:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8526:5;;-1:-1:-1;;;;;8300:241:67;;;8336:10;;8300:241;;;;;;;;;;7936:612;;;;;;;;:::o;283:11042::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;283:11042:67;-1:-1:-1;;;;;283:11042:67;;;;;;;;;;;-1:-1:-1;283:11042:67;;;;;;;-1:-1:-1;283:11042:67;;;;-1:-1:-1;283:11042:67;;;;;;;;;;-1:-1:-1;;;;;;283:11042:67;;;;;;",
  "source": "pragma solidity 0.5.8;\n\nimport \"../DividendCheckpoint.sol\";\nimport \"./ERC20DividendCheckpointStorage.sol\";\nimport \"../../../../interfaces/IOwnable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Checkpoint module for issuing ERC20 dividends\n */\ncontract ERC20DividendCheckpoint is ERC20DividendCheckpointStorage, DividendCheckpoint {\n    using SafeMath for uint256;\n\n    event ERC20DividendDeposited(\n        address indexed _depositor,\n        uint256 _checkpointId,\n        uint256 _maturity,\n        uint256 _expiry,\n        address indexed _token,\n        uint256 _amount,\n        uint256 _totalSupply,\n        uint256 _dividendIndex,\n        bytes32 indexed _name\n    );\n    event ERC20DividendClaimed(address indexed _payee, uint256 indexed _dividendIndex, address indexed _token, uint256 _amount, uint256 _withheld);\n    event ERC20DividendReclaimed(address indexed _claimer, uint256 indexed _dividendIndex, address indexed _token, uint256 _claimedAmount);\n    event ERC20DividendWithholdingWithdrawn(\n        address indexed _claimer,\n        uint256 indexed _dividendIndex,\n        address indexed _token,\n        uint256 _withheldAmount\n    );\n\n    /**\n     * @notice Constructor\n     * @param _securityToken Address of the security token\n     */\n    constructor(address _securityToken, address _polyToken) public Module(_securityToken, _polyToken) {\n\n    }\n\n    /**\n     * @notice Creates a dividend and checkpoint for the dividend\n     * @param _maturity Time from which dividend can be paid\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n     * @param _token Address of ERC20 token in which dividend is to be denominated\n     * @param _amount Amount of specified token for dividend\n     * @param _name Name/Title for identification\n     */\n    function createDividend(\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        bytes32 _name\n    )\n        external\n        withPerm(ADMIN)\n    {\n        createDividendWithExclusions(_maturity, _expiry, _token, _amount, excluded, _name);\n    }\n\n    /**\n     * @notice Creates a dividend with a provided checkpoint\n     * @param _maturity Time from which dividend can be paid\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n     * @param _token Address of ERC20 token in which dividend is to be denominated\n     * @param _amount Amount of specified token for dividend\n     * @param _checkpointId Checkpoint id from which to create dividends\n     * @param _name Name/Title for identification\n     */\n    function createDividendWithCheckpoint(\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        uint256 _checkpointId,\n        bytes32 _name\n    )\n        external\n        withPerm(ADMIN)\n    {\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, _checkpointId, excluded, _name);\n    }\n\n    /**\n     * @notice Creates a dividend and checkpoint for the dividend\n     * @param _maturity Time from which dividend can be paid\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n     * @param _token Address of ERC20 token in which dividend is to be denominated\n     * @param _amount Amount of specified token for dividend\n     * @param _excluded List of addresses to exclude\n     * @param _name Name/Title for identification\n     */\n    function createDividendWithExclusions(\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        address[] memory _excluded,\n        bytes32 _name\n    )\n        public\n        withPerm(ADMIN)\n    {\n        uint256 checkpointId = securityToken.createCheckpoint();\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, checkpointId, _excluded, _name);\n    }\n\n    /**\n     * @notice Creates a dividend with a provided checkpoint\n     * @param _maturity Time from which dividend can be paid\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n     * @param _token Address of ERC20 token in which dividend is to be denominated\n     * @param _amount Amount of specified token for dividend\n     * @param _checkpointId Checkpoint id from which to create dividends\n     * @param _excluded List of addresses to exclude\n     * @param _name Name/Title for identification\n     */\n    function createDividendWithCheckpointAndExclusions(\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        uint256 _checkpointId,\n        address[] memory _excluded,\n        bytes32 _name\n    )\n        public\n        withPerm(ADMIN)\n    {\n        _createDividendWithCheckpointAndExclusions(_maturity, _expiry, _token, _amount, _checkpointId, _excluded, _name);\n    }\n\n    /**\n     * @notice Creates a dividend with a provided checkpoint\n     * @param _maturity Time from which dividend can be paid\n     * @param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n     * @param _token Address of ERC20 token in which dividend is to be denominated\n     * @param _amount Amount of specified token for dividend\n     * @param _checkpointId Checkpoint id from which to create dividends\n     * @param _excluded List of addresses to exclude\n     * @param _name Name/Title for identification\n     */\n    function _createDividendWithCheckpointAndExclusions(\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        uint256 _checkpointId,\n        address[] memory _excluded,\n        bytes32 _name\n    )\n        internal\n    {\n        require(_excluded.length <= EXCLUDED_ADDRESS_LIMIT, \"Too many addresses excluded\");\n        require(_expiry > _maturity, \"Expiry before maturity\");\n        /*solium-disable-next-line security/no-block-members*/\n        require(_expiry > now, \"Expiry in past\");\n        require(_amount > 0, \"No dividend sent\");\n        require(_token != address(0), \"Invalid token\");\n        require(_checkpointId <= securityToken.currentCheckpointId(), \"Invalid checkpoint\");\n        require(IERC20(_token).transferFrom(msg.sender, address(this), _amount), \"insufficent allowance\");\n        require(_name != bytes32(0));\n        uint256 dividendIndex = dividends.length;\n        uint256 currentSupply = securityToken.totalSupplyAt(_checkpointId);\n        require(currentSupply > 0, \"Invalid supply\");\n        uint256 excludedSupply = 0;\n        dividends.push(\n            Dividend(\n                _checkpointId,\n                now, /*solium-disable-line security/no-block-members*/\n                _maturity,\n                _expiry,\n                _amount,\n                0,\n                0,\n                false,\n                0,\n                0,\n                _name\n            )\n        );\n\n        for (uint256 j = 0; j < _excluded.length; j++) {\n            require(_excluded[j] != address(0), \"Invalid address\");\n            require(!dividends[dividendIndex].dividendExcluded[_excluded[j]], \"duped exclude address\");\n            excludedSupply = excludedSupply.add(securityToken.balanceOfAt(_excluded[j], _checkpointId));\n            dividends[dividendIndex].dividendExcluded[_excluded[j]] = true;\n        }\n        require(currentSupply > excludedSupply, \"Invalid supply\");\n        uint256 supplyForDividend = currentSupply - excludedSupply;\n        dividends[dividendIndex].totalSupply = supplyForDividend;\n        dividendTokens[dividendIndex] = _token;\n        _emitERC20DividendDepositedEvent(_checkpointId, _maturity, _expiry, _token, _amount, supplyForDividend, dividendIndex, _name);\n    }\n\n    /**\n     * @notice Emits the ERC20DividendDeposited event.\n     * Seperated into a different function as a workaround for stack too deep error\n     */\n    function _emitERC20DividendDepositedEvent(\n        uint256 _checkpointId,\n        uint256 _maturity,\n        uint256 _expiry,\n        address _token,\n        uint256 _amount,\n        uint256 currentSupply,\n        uint256 dividendIndex,\n        bytes32 _name\n    )\n        internal\n    {\n        /*solium-disable-next-line security/no-block-members*/\n        emit ERC20DividendDeposited(\n            msg.sender,\n            _checkpointId,\n            _maturity,\n            _expiry,\n            _token,\n            _amount,\n            currentSupply,\n            dividendIndex,\n            _name\n        );\n    }\n\n    /**\n     * @notice Internal function for paying dividends\n     * @param _payee Address of investor\n     * @param _dividend Storage with previously issued dividends\n     * @param _dividendIndex Dividend to pay\n     */\n    function _payDividend(address payable _payee, Dividend storage _dividend, uint256 _dividendIndex) internal {\n        (uint256 claim, uint256 withheld) = calculateDividend(_dividendIndex, _payee);\n        _dividend.claimed[_payee] = true;\n        _dividend.claimedAmount = claim.add(_dividend.claimedAmount);\n        uint256 claimAfterWithheld = claim.sub(withheld);\n        if (claimAfterWithheld > 0) {\n            require(IERC20(dividendTokens[_dividendIndex]).transfer(_payee, claimAfterWithheld), \"transfer failed\");\n        }\n        if (withheld > 0) {\n            _dividend.totalWithheld = _dividend.totalWithheld.add(withheld);\n            _dividend.withheld[_payee] = withheld;\n        }\n        emit ERC20DividendClaimed(_payee, _dividendIndex, dividendTokens[_dividendIndex], claim, withheld);\n    }\n\n    /**\n     * @notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\n     * @param _dividendIndex Dividend to reclaim\n     */\n    function reclaimDividend(uint256 _dividendIndex) external withPerm(OPERATOR) {\n        require(_dividendIndex < dividends.length, \"Invalid dividend\");\n        /*solium-disable-next-line security/no-block-members*/\n        require(now >= dividends[_dividendIndex].expiry, \"Dividend expiry in future\");\n        require(!dividends[_dividendIndex].reclaimed, \"already claimed\");\n        dividends[_dividendIndex].reclaimed = true;\n        Dividend storage dividend = dividends[_dividendIndex];\n        uint256 remainingAmount = dividend.amount.sub(dividend.claimedAmount);\n        require(IERC20(dividendTokens[_dividendIndex]).transfer(getTreasuryWallet(), remainingAmount), \"transfer failed\");\n        emit ERC20DividendReclaimed(wallet, _dividendIndex, dividendTokens[_dividendIndex], remainingAmount);\n    }\n\n    /**\n     * @notice Allows issuer to withdraw withheld tax\n     * @param _dividendIndex Dividend to withdraw from\n     */\n    function withdrawWithholding(uint256 _dividendIndex) external withPerm(OPERATOR) {\n        require(_dividendIndex < dividends.length, \"Invalid dividend\");\n        Dividend storage dividend = dividends[_dividendIndex];\n        uint256 remainingWithheld = dividend.totalWithheld.sub(dividend.totalWithheldWithdrawn);\n        dividend.totalWithheldWithdrawn = dividend.totalWithheld;\n        require(IERC20(dividendTokens[_dividendIndex]).transfer(getTreasuryWallet(), remainingWithheld), \"transfer failed\");\n        emit ERC20DividendWithholdingWithdrawn(wallet, _dividendIndex, dividendTokens[_dividendIndex], remainingWithheld);\n    }\n\n}\n",
  "sourcePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
  "ast": {
    "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
    "exportedSymbols": {
      "ERC20DividendCheckpoint": [
        24922
      ]
    },
    "id": 24923,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24224,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:67"
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol",
        "file": "../DividendCheckpoint.sol",
        "id": 24225,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 24223,
        "src": "24:35:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol",
        "file": "./ERC20DividendCheckpointStorage.sol",
        "id": 24226,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 25117,
        "src": "60:46:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IOwnable.sol",
        "file": "../../../../interfaces/IOwnable.sol",
        "id": 24227,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 14346,
        "src": "107:45:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 24228,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 63977,
        "src": "153:64:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24229,
              "name": "ERC20DividendCheckpointStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25116,
              "src": "319:30:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20DividendCheckpointStorage_$25116",
                "typeString": "contract ERC20DividendCheckpointStorage"
              }
            },
            "id": 24230,
            "nodeType": "InheritanceSpecifier",
            "src": "319:30:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24231,
              "name": "DividendCheckpoint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24222,
              "src": "351:18:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendCheckpoint_$24222",
                "typeString": "contract DividendCheckpoint"
              }
            },
            "id": 24232,
            "nodeType": "InheritanceSpecifier",
            "src": "351:18:67"
          }
        ],
        "contractDependencies": [
          1769,
          13990,
          24222,
          25116,
          25903,
          34385,
          58741,
          58796
        ],
        "contractKind": "contract",
        "documentation": "@title Checkpoint module for issuing ERC20 dividends",
        "fullyImplemented": true,
        "id": 24922,
        "linearizedBaseContracts": [
          24922,
          24222,
          34385,
          1769,
          58796,
          13990,
          25903,
          58741,
          25116
        ],
        "name": "ERC20DividendCheckpoint",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24235,
            "libraryName": {
              "contractScope": null,
              "id": 24233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 63415,
              "src": "382:8:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$63415",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "376:27:67",
            "typeName": {
              "id": 24234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "395:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24255,
            "name": "ERC20DividendDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24237,
                  "indexed": true,
                  "name": "_depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "447:26:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24239,
                  "indexed": false,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "483:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24241,
                  "indexed": false,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "514:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24243,
                  "indexed": false,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "541:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24245,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "566:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24247,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "598:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24249,
                  "indexed": false,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "623:20:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24251,
                  "indexed": false,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "653:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24253,
                  "indexed": true,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "685:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24252,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:275:67"
            },
            "src": "409:304:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24267,
            "name": "ERC20DividendClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24257,
                  "indexed": true,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "745:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24259,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "769:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24261,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "801:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24263,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "825:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24265,
                  "indexed": false,
                  "name": "_withheld",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "842:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:116:67"
            },
            "src": "718:143:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24277,
            "name": "ERC20DividendReclaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24269,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "895:24:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24271,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "921:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24273,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "953:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24275,
                  "indexed": false,
                  "name": "_claimedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "977:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:106:67"
            },
            "src": "866:135:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24287,
            "name": "ERC20DividendWithholdingWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24279,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1055:24:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1089:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1129:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "indexed": false,
                  "name": "_withheldAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1161:23:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1045:145:67"
            },
            "src": "1006:185:67"
          },
          {
            "body": {
              "id": 24298,
              "nodeType": "Block",
              "src": "1397:8:67",
              "statements": []
            },
            "documentation": "@notice Constructor\n@param _securityToken Address of the security token",
            "id": 24299,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24294,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24289,
                    "src": "1369:14:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24295,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24291,
                    "src": "1385:10:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24296,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24293,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34385,
                  "src": "1362:6:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$34385_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1362:34:67"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24289,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24299,
                  "src": "1311:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24291,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24299,
                  "src": "1335:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:44:67"
            },
            "returnParameters": {
              "id": 24297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:67"
            },
            "scope": 24922,
            "src": "1299:106:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24324,
              "nodeType": "Block",
              "src": "2043:99:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24316,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "2082:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24317,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24303,
                        "src": "2093:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24318,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24305,
                        "src": "2102:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24319,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24307,
                        "src": "2110:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24320,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58732,
                        "src": "2119:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24321,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24309,
                        "src": "2129:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24315,
                      "name": "createDividendWithExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24390,
                      "src": "2053:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:82:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24323,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:82:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _name Name/Title for identification",
            "id": 24325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24312,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "2032:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24311,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "2023:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2023:15:67"
              }
            ],
            "name": "createDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24301,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1877:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24303,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1904:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24305,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1929:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24307,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1953:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24309,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1978:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24308,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1867:130:67"
            },
            "returnParameters": {
              "id": 24314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:67"
            },
            "scope": 24922,
            "src": "1844:298:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24353,
              "nodeType": "Block",
              "src": "2893:128:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24344,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24327,
                        "src": "2946:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24345,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24329,
                        "src": "2957:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24346,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24331,
                        "src": "2966:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24347,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24333,
                        "src": "2974:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24348,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24335,
                        "src": "2983:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24349,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58732,
                        "src": "2998:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24350,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24337,
                        "src": "3008:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24343,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "2903:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:111:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24352,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:111:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _name Name/Title for identification",
            "id": 24354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24340,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "2882:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24339,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "2873:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2873:15:67"
              }
            ],
            "name": "createDividendWithCheckpoint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24327,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2696:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24329,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2723:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24331,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2748:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24333,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2772:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24335,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2797:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24337,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2828:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24336,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2686:161:67"
            },
            "returnParameters": {
              "id": 24342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2893:0:67"
            },
            "scope": 24922,
            "src": "2649:372:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24389,
              "nodeType": "Block",
              "src": "3760:193:67",
              "statements": [
                {
                  "assignments": [
                    24374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24374,
                      "name": "checkpointId",
                      "nodeType": "VariableDeclaration",
                      "scope": 24389,
                      "src": "3770:20:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3770:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24378,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24375,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58759,
                        "src": "3793:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCheckpoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15161,
                      "src": "3793:30:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 24377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3770:55:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24380,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24356,
                        "src": "3878:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24381,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24358,
                        "src": "3889:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24382,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24360,
                        "src": "3898:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24383,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24362,
                        "src": "3906:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24384,
                        "name": "checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24374,
                        "src": "3915:12:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24385,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24365,
                        "src": "3929:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24386,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "3940:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24379,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "3835:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:111:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24388,
                  "nodeType": "ExpressionStatement",
                  "src": "3835:111:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24370,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "3749:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24371,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24369,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "3740:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:15:67"
              }
            ],
            "name": "createDividendWithExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24356,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3560:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3560:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24358,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3587:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24360,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3612:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24362,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3636:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24365,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3661:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24363,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3661:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24364,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3661:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24367,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3697:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3550:166:67"
            },
            "returnParameters": {
              "id": 24372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3760:0:67"
            },
            "scope": 24922,
            "src": "3513:440:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24421,
              "nodeType": "Block",
              "src": "4804:129:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24412,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24392,
                        "src": "4857:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24413,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24394,
                        "src": "4868:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24414,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24396,
                        "src": "4877:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24415,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24398,
                        "src": "4885:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24416,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24400,
                        "src": "4894:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24417,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24403,
                        "src": "4909:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24418,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24405,
                        "src": "4920:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24411,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "4814:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4814:112:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24420,
                  "nodeType": "ExpressionStatement",
                  "src": "4814:112:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24408,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "4793:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24407,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "4784:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4784:15:67"
              }
            ],
            "name": "createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24392,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4573:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24394,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4600:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24396,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4625:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24398,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4649:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24400,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4674:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4674:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24403,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4705:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24401,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4705:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24402,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4705:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24405,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4741:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24404,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4563:197:67"
            },
            "returnParameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4804:0:67"
            },
            "scope": 24922,
            "src": "4513:420:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24649,
              "nodeType": "Block",
              "src": "5763:2012:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24441,
                            "name": "_excluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24435,
                            "src": "5781:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 24442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5781:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24443,
                          "name": "EXCLUDED_ADDRESS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58691,
                          "src": "5801:22:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5781:42:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e7920616464726573736573206578636c75646564",
                        "id": 24445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5825:29:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        },
                        "value": "Too many addresses excluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        }
                      ],
                      "id": 24440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5773:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:82:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24447,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:82:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24449,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24426,
                          "src": "5873:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24450,
                          "name": "_maturity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24424,
                          "src": "5883:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5873:19:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "457870697279206265666f7265206d61747572697479",
                        "id": 24452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5894:24:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        },
                        "value": "Expiry before maturity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        }
                      ],
                      "id": 24448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5865:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:54:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24454,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:54:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24456,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24426,
                          "src": "6000:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24457,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64043,
                          "src": "6010:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6000:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45787069727920696e2070617374",
                        "id": 24459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6015:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        },
                        "value": "Expiry in past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        }
                      ],
                      "id": 24455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5992:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5992:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24461,
                  "nodeType": "ExpressionStatement",
                  "src": "5992:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24463,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24430,
                          "src": "6050:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6060:1:67",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6050:11:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206469766964656e642073656e74",
                        "id": 24466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6063:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        },
                        "value": "No dividend sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        }
                      ],
                      "id": 24462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6042:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24468,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24470,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24428,
                          "src": "6100:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6118:1:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6110:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 24473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6110:10:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6100:20:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e",
                        "id": 24475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6122:15:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        },
                        "value": "Invalid token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        }
                      ],
                      "id": 24469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6092:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6092:46:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24477,
                  "nodeType": "ExpressionStatement",
                  "src": "6092:46:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24479,
                          "name": "_checkpointId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24432,
                          "src": "6156:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 24480,
                              "name": "securityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58759,
                              "src": "6173:13:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                                "typeString": "contract ISecurityToken"
                              }
                            },
                            "id": 24481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCheckpointId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15208,
                            "src": "6173:33:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 24482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6156:52:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420636865636b706f696e74",
                        "id": 24484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6210:20:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        },
                        "value": "Invalid checkpoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        }
                      ],
                      "id": 24478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6148:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6148:83:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24486,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:83:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24492,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64041,
                              "src": "6277:3:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6277:10:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24495,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64263,
                                "src": "6297:4:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24922",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24922",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              ],
                              "id": 24494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6289:7:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 24496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6289:13:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24497,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24430,
                            "src": "6304:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24489,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24428,
                                "src": "6256:6:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24488,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "6249:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6249:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63938,
                          "src": "6249:27:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6249:63:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e737566666963656e7420616c6c6f77616e6365",
                        "id": 24499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6314:23:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        },
                        "value": "insufficent allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        }
                      ],
                      "id": 24487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6241:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6241:97:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24501,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:97:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 24507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24503,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24437,
                          "src": "6356:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6373:1:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6365:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 24506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6365:10:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6356:19:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64044,
                      "src": "6348:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6348:28:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24509,
                  "nodeType": "ExpressionStatement",
                  "src": "6348:28:67"
                },
                {
                  "assignments": [
                    24511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24511,
                      "name": "dividendIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6386:21:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6386:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24514,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24512,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "6410:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24513,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6410:16:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6386:40:67"
                },
                {
                  "assignments": [
                    24516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24516,
                      "name": "currentSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6436:21:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6436:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24521,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24519,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "6488:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24517,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58759,
                        "src": "6460:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupplyAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15147,
                      "src": "6460:27:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 24520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:42:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6436:66:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24523,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24516,
                          "src": "6520:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6536:1:67",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6520:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6539:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6512:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6512:44:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24528,
                  "nodeType": "ExpressionStatement",
                  "src": "6512:44:67"
                },
                {
                  "assignments": [
                    24530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24530,
                      "name": "excludedSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6566:22:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6566:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24532,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 24531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6591:1:67",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6566:26:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24537,
                            "name": "_checkpointId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24432,
                            "src": "6656:13:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24538,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64043,
                            "src": "6687:3:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24539,
                            "name": "_maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24424,
                            "src": "6758:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24540,
                            "name": "_expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24426,
                            "src": "6785:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24541,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24430,
                            "src": "6810:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6835:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6854:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 24544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6873:5:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6896:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6915:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 24547,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24437,
                            "src": "6934:5:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 24536,
                          "name": "Dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58726,
                          "src": "6630:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dividend_$58726_storage_ptr_$",
                            "typeString": "type(struct DividendCheckpointStorage.Dividend storage pointer)"
                          }
                        },
                        "id": 24548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6630:323:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dividend_$58726_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24533,
                        "name": "dividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58729,
                        "src": "6602:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                        }
                      },
                      "id": 24535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6602:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dividend_$58726_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DividendCheckpointStorage.Dividend storage ref) returns (uint256)"
                      }
                    },
                    "id": 24549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6602:361:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24550,
                  "nodeType": "ExpressionStatement",
                  "src": "6602:361:67"
                },
                {
                  "body": {
                    "id": 24610,
                    "nodeType": "Block",
                    "src": "7021:364:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24563,
                                  "name": "_excluded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "7043:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 24565,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24564,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24552,
                                  "src": "7053:1:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7043:12:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 24567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7067:1:67",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7059:7:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 24568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7059:10:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7043:26:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 24570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7071:17:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 24562,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "7035:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7035:54:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24572,
                        "nodeType": "ExpressionStatement",
                        "src": "7035:54:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 24582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7111:56:67",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24574,
                                      "name": "dividends",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58729,
                                      "src": "7112:9:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                      }
                                    },
                                    "id": 24576,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24575,
                                      "name": "dividendIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24511,
                                      "src": "7122:13:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7112:24:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                    }
                                  },
                                  "id": 24577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dividendExcluded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58719,
                                  "src": "7112:41:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24581,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 24578,
                                    "name": "_excluded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24435,
                                    "src": "7154:9:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 24580,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 24579,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24552,
                                    "src": "7164:1:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7154:12:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7112:55:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6475706564206578636c7564652061646472657373",
                              "id": 24583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7169:23:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              },
                              "value": "duped exclude address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              }
                            ],
                            "id": 24573,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "7103:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7103:90:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24585,
                        "nodeType": "ExpressionStatement",
                        "src": "7103:90:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 24586,
                            "name": "excludedSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24530,
                            "src": "7207:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24591,
                                      "name": "_excluded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24435,
                                      "src": "7269:9:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 24593,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24592,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24552,
                                      "src": "7279:1:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7269:12:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 24594,
                                    "name": "_checkpointId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24432,
                                    "src": "7283:13:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24589,
                                    "name": "securityToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58759,
                                    "src": "7243:13:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                                      "typeString": "contract ISecurityToken"
                                    }
                                  },
                                  "id": 24590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOfAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15156,
                                  "src": "7243:25:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 24595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7243:54:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 24587,
                                "name": "excludedSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24530,
                                "src": "7224:14:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63394,
                              "src": "7224:18:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7224:74:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7207:91:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24598,
                        "nodeType": "ExpressionStatement",
                        "src": "7207:91:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24599,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58729,
                                  "src": "7312:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                  }
                                },
                                "id": 24601,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24600,
                                  "name": "dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24511,
                                  "src": "7322:13:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7312:24:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                }
                              },
                              "id": 24602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dividendExcluded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58719,
                              "src": "7312:41:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24606,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 24603,
                                "name": "_excluded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24435,
                                "src": "7354:9:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24605,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 24604,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24552,
                                "src": "7364:1:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7354:12:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7312:55:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 24607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7370:4:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7312:62:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24609,
                        "nodeType": "ExpressionStatement",
                        "src": "7312:62:67"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24555,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24552,
                      "src": "6994:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24556,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24435,
                        "src": "6998:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6998:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6994:20:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24611,
                  "initializationExpression": {
                    "assignments": [
                      24552
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24552,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 24611,
                        "src": "6979:9:67",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6979:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 24554,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6991:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6979:13:67"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 24560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7016:3:67",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 24559,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24552,
                        "src": "7016:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24561,
                    "nodeType": "ExpressionStatement",
                    "src": "7016:3:67"
                  },
                  "nodeType": "ForStatement",
                  "src": "6974:411:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24613,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24516,
                          "src": "7402:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24614,
                          "name": "excludedSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24530,
                          "src": "7418:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7402:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7434:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "7394:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7394:57:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24618,
                  "nodeType": "ExpressionStatement",
                  "src": "7394:57:67"
                },
                {
                  "assignments": [
                    24620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24620,
                      "name": "supplyForDividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "7461:25:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7461:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24624,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24621,
                      "name": "currentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24516,
                      "src": "7489:13:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 24622,
                      "name": "excludedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24530,
                      "src": "7505:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7489:30:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7461:58:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24625,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58729,
                          "src": "7529:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24627,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24626,
                          "name": "dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24511,
                          "src": "7539:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7529:24:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58705,
                      "src": "7529:36:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24629,
                      "name": "supplyForDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24620,
                      "src": "7568:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7529:56:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24631,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24632,
                        "name": "dividendTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25115,
                        "src": "7595:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 24634,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24633,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24511,
                        "src": "7610:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7595:29:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24635,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24428,
                      "src": "7627:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7595:38:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24637,
                  "nodeType": "ExpressionStatement",
                  "src": "7595:38:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24639,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "7676:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24640,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24424,
                        "src": "7691:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24641,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24426,
                        "src": "7702:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24642,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24428,
                        "src": "7711:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24643,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24430,
                        "src": "7719:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24644,
                        "name": "supplyForDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "7728:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24645,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24511,
                        "src": "7747:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24646,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24437,
                        "src": "7762:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24638,
                      "name": "_emitERC20DividendDepositedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24683,
                      "src": "7643:32:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7643:125:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24648,
                  "nodeType": "ExpressionStatement",
                  "src": "7643:125:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24424,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5554:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5554:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24426,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5581:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24428,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5606:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5606:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24430,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5630:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24432,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5655:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24435,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5686:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24433,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5686:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5686:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24437,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5722:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5722:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5544:197:67"
            },
            "returnParameters": {
              "id": 24439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5763:0:67"
            },
            "scope": 24922,
            "src": "5493:2282:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24682,
              "nodeType": "Block",
              "src": "8222:326:67",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64041,
                          "src": "8336:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8336:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24672,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24652,
                        "src": "8360:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24673,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24654,
                        "src": "8387:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24674,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24656,
                        "src": "8410:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24675,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24658,
                        "src": "8431:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24676,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24660,
                        "src": "8451:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24677,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24662,
                        "src": "8472:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24678,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24664,
                        "src": "8499:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24679,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24666,
                        "src": "8526:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24669,
                      "name": "ERC20DividendDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24255,
                      "src": "8300:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8300:241:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24681,
                  "nodeType": "EmitStatement",
                  "src": "8295:246:67"
                }
              ]
            },
            "documentation": "@notice Emits the ERC20DividendDeposited event.\nSeperated into a different function as a workaround for stack too deep error",
            "id": 24683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20DividendDepositedEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24652,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "7987:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7987:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24654,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8018:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8018:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24656,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8045:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24658,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8070:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8070:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24660,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8094:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8094:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24662,
                  "name": "currentSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8119:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8119:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24664,
                  "name": "dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8150:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24666,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8181:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7977:223:67"
            },
            "returnParameters": {
              "id": 24668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8222:0:67"
            },
            "scope": 24922,
            "src": "7936:612:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24777,
              "nodeType": "Block",
              "src": "8882:703:67",
              "statements": [
                {
                  "assignments": [
                    24693,
                    24695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24693,
                      "name": "claim",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "8893:13:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8893:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24695,
                      "name": "withheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "8908:16:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8908:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24697,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24689,
                        "src": "8946:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24698,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "8962:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24696,
                      "name": "calculateDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23524,
                      "src": "8928:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 24699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:41:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8892:77:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24701,
                          "name": "_dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24687,
                          "src": "8979:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24704,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58715,
                        "src": "8979:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24705,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24703,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "8997:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8979:25:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9007:4:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8979:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24708,
                  "nodeType": "ExpressionStatement",
                  "src": "8979:32:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24709,
                        "name": "_dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24687,
                        "src": "9021:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58703,
                      "src": "9021:23:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24714,
                            "name": "_dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24687,
                            "src": "9057:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                            }
                          },
                          "id": 24715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58703,
                          "src": "9057:23:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 24712,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24693,
                          "src": "9047:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63394,
                        "src": "9047:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 24716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9047:34:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9021:60:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24718,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:60:67"
                },
                {
                  "assignments": [
                    24720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24720,
                      "name": "claimAfterWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "9091:26:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9091:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24725,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24723,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24695,
                        "src": "9130:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24721,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "9120:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "9120:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9120:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9091:48:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24726,
                      "name": "claimAfterWithheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24720,
                      "src": "9153:18:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9174:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9153:22:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24743,
                  "nodeType": "IfStatement",
                  "src": "9149:156:67",
                  "trueBody": {
                    "id": 24742,
                    "nodeType": "Block",
                    "src": "9177:128:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 24736,
                                  "name": "_payee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24685,
                                  "src": "9247:6:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 24737,
                                  "name": "claimAfterWithheld",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24720,
                                  "src": "9255:18:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 24731,
                                        "name": "dividendTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25115,
                                        "src": "9206:14:67",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                          "typeString": "mapping(uint256 => address)"
                                        }
                                      },
                                      "id": 24733,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 24732,
                                        "name": "_dividendIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24689,
                                        "src": "9221:14:67",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9206:30:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24730,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63976,
                                    "src": "9199:6:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 24734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9199:38:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$63976",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 24735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63918,
                                "src": "9199:47:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 24738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9199:75:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7472616e73666572206661696c6564",
                              "id": 24739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9276:17:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              },
                              "value": "transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              }
                            ],
                            "id": 24729,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "9191:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9191:103:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24741,
                        "nodeType": "ExpressionStatement",
                        "src": "9191:103:67"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24744,
                      "name": "withheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24695,
                      "src": "9318:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9329:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9318:12:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24766,
                  "nodeType": "IfStatement",
                  "src": "9314:157:67",
                  "trueBody": {
                    "id": 24765,
                    "nodeType": "Block",
                    "src": "9332:139:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24747,
                              "name": "_dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24687,
                              "src": "9346:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                              }
                            },
                            "id": 24749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalWithheld",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58709,
                            "src": "9346:23:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24753,
                                "name": "withheld",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24695,
                                "src": "9400:8:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24750,
                                  "name": "_dividend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24687,
                                  "src": "9372:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                  }
                                },
                                "id": 24751,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalWithheld",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58709,
                                "src": "9372:23:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63394,
                              "src": "9372:27:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9372:37:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9346:63:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24756,
                        "nodeType": "ExpressionStatement",
                        "src": "9346:63:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 24757,
                                "name": "_dividend",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24687,
                                "src": "9423:9:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                }
                              },
                              "id": 24760,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withheld",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58723,
                              "src": "9423:18:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 24761,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24759,
                              "name": "_payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24685,
                              "src": "9442:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9423:26:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 24762,
                            "name": "withheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24695,
                            "src": "9452:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9423:37:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24764,
                        "nodeType": "ExpressionStatement",
                        "src": "9423:37:67"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24768,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "9506:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24769,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24689,
                        "src": "9514:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24770,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "9530:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24772,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24771,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24689,
                          "src": "9545:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9530:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24773,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "9562:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24774,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24695,
                        "src": "9569:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24767,
                      "name": "ERC20DividendClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24267,
                      "src": "9485:20:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 24775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9485:93:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24776,
                  "nodeType": "EmitStatement",
                  "src": "9480:98:67"
                }
              ]
            },
            "documentation": "@notice Internal function for paying dividends\n@param _payee Address of investor\n@param _dividend Storage with previously issued dividends\n@param _dividendIndex Dividend to pay",
            "id": 24778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24685,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8797:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8797:15:67",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24687,
                  "name": "_dividend",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8821:26:67",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                    "typeString": "struct DividendCheckpointStorage.Dividend"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24686,
                    "name": "Dividend",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 58726,
                    "src": "8821:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                      "typeString": "struct DividendCheckpointStorage.Dividend"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24689,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8849:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8849:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8796:76:67"
            },
            "returnParameters": {
              "id": 24691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8882:0:67"
            },
            "scope": 24922,
            "src": "8775:810:67",
            "stateMutability": "nonpayable",
            "superFunction": 23441,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24858,
              "nodeType": "Block",
              "src": "9827:730:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24787,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "9845:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24788,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58729,
                            "src": "9862:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24789,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9862:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9845:33:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9880:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "9837:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:62:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24793,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:62:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24795,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64043,
                          "src": "9980:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24796,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58729,
                              "src": "9987:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24798,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24797,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24780,
                              "src": "9997:14:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9987:25:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24799,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58699,
                          "src": "9987:32:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9980:39:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469766964656e642065787069727920696e20667574757265",
                        "id": 24801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10021:27:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        },
                        "value": "Dividend expiry in future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        }
                      ],
                      "id": 24794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "9972:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9972:77:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24803,
                  "nodeType": "ExpressionStatement",
                  "src": "9972:77:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10067:36:67",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24805,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58729,
                              "src": "10068:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24807,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24806,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24780,
                              "src": "10078:14:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10068:25:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reclaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58707,
                          "src": "10068:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 24810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10105:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 24804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10059:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10059:64:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24812,
                  "nodeType": "ExpressionStatement",
                  "src": "10059:64:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24813,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58729,
                          "src": "10133:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24815,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24814,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "10143:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10133:25:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reclaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58707,
                      "src": "10133:35:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10171:4:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10133:42:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24819,
                  "nodeType": "ExpressionStatement",
                  "src": "10133:42:67"
                },
                {
                  "assignments": [
                    24821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24821,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24858,
                      "src": "10185:25:67",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24820,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 58726,
                        "src": "10185:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24825,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24822,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "10213:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24824,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24823,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24780,
                      "src": "10223:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10213:25:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10185:53:67"
                },
                {
                  "assignments": [
                    24827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24827,
                      "name": "remainingAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 24858,
                      "src": "10248:23:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10248:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24834,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24831,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "10294:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24832,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58703,
                        "src": "10294:22:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24828,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "10274:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58701,
                        "src": "10274:15:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "10274:19:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10274:43:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10248:69:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24842,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "10383:17:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10383:19:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24844,
                            "name": "remainingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24827,
                            "src": "10404:15:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24837,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25115,
                                  "src": "10342:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24839,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24838,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24780,
                                  "src": "10357:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10342:30:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24836,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "10335:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10335:38:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63918,
                          "src": "10335:47:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10335:85:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10422:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10327:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10327:113:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24848,
                  "nodeType": "ExpressionStatement",
                  "src": "10327:113:67"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24850,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58688,
                        "src": "10478:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24851,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24780,
                        "src": "10486:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24852,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "10502:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24853,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "10517:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10502:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24855,
                        "name": "remainingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24827,
                        "src": "10534:15:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24849,
                      "name": "ERC20DividendReclaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24277,
                      "src": "10455:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10455:95:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24857,
                  "nodeType": "EmitStatement",
                  "src": "10450:100:67"
                }
              ]
            },
            "documentation": "@notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\n@param _dividendIndex Dividend to reclaim",
            "id": 24859,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24783,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58765,
                    "src": "9817:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24784,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24782,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "9808:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9808:18:67"
              }
            ],
            "name": "reclaimDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24780,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24859,
                  "src": "9775:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9775:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9774:24:67"
            },
            "returnParameters": {
              "id": 24785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9827:0:67"
            },
            "scope": 24922,
            "src": "9750:807:67",
            "stateMutability": "nonpayable",
            "superFunction": 23446,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24920,
              "nodeType": "Block",
              "src": "10769:553:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24868,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "10787:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24869,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58729,
                            "src": "10804:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24870,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10804:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10787:33:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10822:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10779:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10779:62:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24874,
                  "nodeType": "ExpressionStatement",
                  "src": "10779:62:67"
                },
                {
                  "assignments": [
                    24876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24876,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24920,
                      "src": "10851:25:67",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24875,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 58726,
                        "src": "10851:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24880,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24877,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "10879:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24879,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24878,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24861,
                      "src": "10889:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10879:25:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10851:53:67"
                },
                {
                  "assignments": [
                    24882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24882,
                      "name": "remainingWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24920,
                      "src": "10914:25:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10914:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24889,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24886,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24876,
                          "src": "10969:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24887,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheldWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58711,
                        "src": "10969:31:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24883,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24876,
                          "src": "10942:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24884,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheld",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58709,
                        "src": "10942:22:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "10942:26:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:59:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10914:87:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24890,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24876,
                        "src": "11011:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalWithheldWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58711,
                      "src": "11011:31:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24893,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24876,
                        "src": "11045:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalWithheld",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58709,
                      "src": "11045:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11011:56:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24896,
                  "nodeType": "ExpressionStatement",
                  "src": "11011:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24904,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "11133:17:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11133:19:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24906,
                            "name": "remainingWithheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24882,
                            "src": "11154:17:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24899,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25115,
                                  "src": "11092:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24900,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24861,
                                  "src": "11107:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11092:30:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24898,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "11085:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11085:38:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63918,
                          "src": "11085:47:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11085:87:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11174:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "11077:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11077:115:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24910,
                  "nodeType": "ExpressionStatement",
                  "src": "11077:115:67"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24912,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58688,
                        "src": "11241:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24913,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "11249:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24914,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "11265:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24916,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24915,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "11280:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11265:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24917,
                        "name": "remainingWithheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24882,
                        "src": "11297:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24911,
                      "name": "ERC20DividendWithholdingWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24287,
                      "src": "11207:33:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11207:108:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24919,
                  "nodeType": "EmitStatement",
                  "src": "11202:113:67"
                }
              ]
            },
            "documentation": "@notice Allows issuer to withdraw withheld tax\n@param _dividendIndex Dividend to withdraw from",
            "id": 24921,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24864,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58765,
                    "src": "10759:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24865,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24863,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "10750:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10750:18:67"
              }
            ],
            "name": "withdrawWithholding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24861,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24921,
                  "src": "10717:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10717:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10716:24:67"
            },
            "returnParameters": {
              "id": 24866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10769:0:67"
            },
            "scope": 24922,
            "src": "10688:634:67",
            "stateMutability": "nonpayable",
            "superFunction": 23612,
            "visibility": "external"
          }
        ],
        "scope": 24923,
        "src": "283:11042:67"
      }
    ],
    "src": "0:11326:67"
  },
  "legacyAST": {
    "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpoint.sol",
    "exportedSymbols": {
      "ERC20DividendCheckpoint": [
        24922
      ]
    },
    "id": 24923,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24224,
        "literals": [
          "solidity",
          "0.5",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:67"
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/DividendCheckpoint.sol",
        "file": "../DividendCheckpoint.sol",
        "id": 24225,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 24223,
        "src": "24:35:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/modules/Checkpoint/Dividend/ERC20/ERC20DividendCheckpointStorage.sol",
        "file": "./ERC20DividendCheckpointStorage.sol",
        "id": 24226,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 25117,
        "src": "60:46:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/federicoelgarte/Polymath/polymath-core/contracts/interfaces/IOwnable.sol",
        "file": "../../../../interfaces/IOwnable.sol",
        "id": 24227,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 14346,
        "src": "107:45:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 24228,
        "nodeType": "ImportDirective",
        "scope": 24923,
        "sourceUnit": 63977,
        "src": "153:64:67",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24229,
              "name": "ERC20DividendCheckpointStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 25116,
              "src": "319:30:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20DividendCheckpointStorage_$25116",
                "typeString": "contract ERC20DividendCheckpointStorage"
              }
            },
            "id": 24230,
            "nodeType": "InheritanceSpecifier",
            "src": "319:30:67"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 24231,
              "name": "DividendCheckpoint",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24222,
              "src": "351:18:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendCheckpoint_$24222",
                "typeString": "contract DividendCheckpoint"
              }
            },
            "id": 24232,
            "nodeType": "InheritanceSpecifier",
            "src": "351:18:67"
          }
        ],
        "contractDependencies": [
          1769,
          13990,
          24222,
          25116,
          25903,
          34385,
          58741,
          58796
        ],
        "contractKind": "contract",
        "documentation": "@title Checkpoint module for issuing ERC20 dividends",
        "fullyImplemented": true,
        "id": 24922,
        "linearizedBaseContracts": [
          24922,
          24222,
          34385,
          1769,
          58796,
          13990,
          25903,
          58741,
          25116
        ],
        "name": "ERC20DividendCheckpoint",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24235,
            "libraryName": {
              "contractScope": null,
              "id": 24233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 63415,
              "src": "382:8:67",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$63415",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "376:27:67",
            "typeName": {
              "id": 24234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "395:7:67",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24255,
            "name": "ERC20DividendDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24237,
                  "indexed": true,
                  "name": "_depositor",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "447:26:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24239,
                  "indexed": false,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "483:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24241,
                  "indexed": false,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "514:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24243,
                  "indexed": false,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "541:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24245,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "566:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24247,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "598:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24249,
                  "indexed": false,
                  "name": "_totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "623:20:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "623:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24251,
                  "indexed": false,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "653:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24253,
                  "indexed": true,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24255,
                  "src": "685:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24252,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "437:275:67"
            },
            "src": "409:304:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24267,
            "name": "ERC20DividendClaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24257,
                  "indexed": true,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "745:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24259,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "769:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24261,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "801:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24263,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "825:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24265,
                  "indexed": false,
                  "name": "_withheld",
                  "nodeType": "VariableDeclaration",
                  "scope": 24267,
                  "src": "842:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "744:116:67"
            },
            "src": "718:143:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24277,
            "name": "ERC20DividendReclaimed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24269,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "895:24:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "895:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24271,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "921:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24270,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24273,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "953:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "953:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24275,
                  "indexed": false,
                  "name": "_claimedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24277,
                  "src": "977:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "894:106:67"
            },
            "src": "866:135:67"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 24287,
            "name": "ERC20DividendWithholdingWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24279,
                  "indexed": true,
                  "name": "_claimer",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1055:24:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24281,
                  "indexed": true,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1089:30:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24283,
                  "indexed": true,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1129:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24285,
                  "indexed": false,
                  "name": "_withheldAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24287,
                  "src": "1161:23:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1045:145:67"
            },
            "src": "1006:185:67"
          },
          {
            "body": {
              "id": 24298,
              "nodeType": "Block",
              "src": "1397:8:67",
              "statements": []
            },
            "documentation": "@notice Constructor\n@param _securityToken Address of the security token",
            "id": 24299,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24294,
                    "name": "_securityToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24289,
                    "src": "1369:14:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 24295,
                    "name": "_polyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24291,
                    "src": "1385:10:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 24296,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24293,
                  "name": "Module",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34385,
                  "src": "1362:6:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Module_$34385_$",
                    "typeString": "type(contract Module)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1362:34:67"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24289,
                  "name": "_securityToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24299,
                  "src": "1311:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24291,
                  "name": "_polyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 24299,
                  "src": "1335:18:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:44:67"
            },
            "returnParameters": {
              "id": 24297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:67"
            },
            "scope": 24922,
            "src": "1299:106:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24324,
              "nodeType": "Block",
              "src": "2043:99:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24316,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24301,
                        "src": "2082:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24317,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24303,
                        "src": "2093:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24318,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24305,
                        "src": "2102:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24319,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24307,
                        "src": "2110:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24320,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58732,
                        "src": "2119:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24321,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24309,
                        "src": "2129:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24315,
                      "name": "createDividendWithExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24390,
                      "src": "2053:28:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:82:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24323,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:82:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _name Name/Title for identification",
            "id": 24325,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24312,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "2032:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24313,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24311,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "2023:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2023:15:67"
              }
            ],
            "name": "createDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24301,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1877:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24303,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1904:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24305,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1929:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24307,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1953:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24309,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24325,
                  "src": "1978:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24308,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1867:130:67"
            },
            "returnParameters": {
              "id": 24314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:67"
            },
            "scope": 24922,
            "src": "1844:298:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24353,
              "nodeType": "Block",
              "src": "2893:128:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24344,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24327,
                        "src": "2946:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24345,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24329,
                        "src": "2957:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24346,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24331,
                        "src": "2966:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24347,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24333,
                        "src": "2974:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24348,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24335,
                        "src": "2983:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24349,
                        "name": "excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58732,
                        "src": "2998:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24350,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24337,
                        "src": "3008:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24343,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "2903:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2903:111:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24352,
                  "nodeType": "ExpressionStatement",
                  "src": "2903:111:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _name Name/Title for identification",
            "id": 24354,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24340,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "2882:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24341,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24339,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "2873:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2873:15:67"
              }
            ],
            "name": "createDividendWithCheckpoint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24327,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2696:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2696:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24329,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2723:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2723:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24331,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2748:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2748:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24333,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2772:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24335,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2797:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24337,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24354,
                  "src": "2828:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24336,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2686:161:67"
            },
            "returnParameters": {
              "id": 24342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2893:0:67"
            },
            "scope": 24922,
            "src": "2649:372:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24389,
              "nodeType": "Block",
              "src": "3760:193:67",
              "statements": [
                {
                  "assignments": [
                    24374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24374,
                      "name": "checkpointId",
                      "nodeType": "VariableDeclaration",
                      "scope": 24389,
                      "src": "3770:20:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24373,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3770:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24378,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24375,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58759,
                        "src": "3793:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCheckpoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15161,
                      "src": "3793:30:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 24377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3770:55:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24380,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24356,
                        "src": "3878:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24381,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24358,
                        "src": "3889:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24382,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24360,
                        "src": "3898:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24383,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24362,
                        "src": "3906:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24384,
                        "name": "checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24374,
                        "src": "3915:12:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24385,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24365,
                        "src": "3929:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24386,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "3940:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24379,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "3835:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3835:111:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24388,
                  "nodeType": "ExpressionStatement",
                  "src": "3835:111:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend and checkpoint for the dividend\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24370,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "3749:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24371,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24369,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "3740:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:15:67"
              }
            ],
            "name": "createDividendWithExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24356,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3560:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3560:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24358,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3587:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24360,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3612:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24362,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3636:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3636:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24365,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3661:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24363,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3661:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24364,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3661:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24367,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24390,
                  "src": "3697:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3550:166:67"
            },
            "returnParameters": {
              "id": 24372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3760:0:67"
            },
            "scope": 24922,
            "src": "3513:440:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24421,
              "nodeType": "Block",
              "src": "4804:129:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24412,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24392,
                        "src": "4857:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24413,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24394,
                        "src": "4868:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24414,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24396,
                        "src": "4877:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24415,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24398,
                        "src": "4885:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24416,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24400,
                        "src": "4894:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24417,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24403,
                        "src": "4909:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24418,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24405,
                        "src": "4920:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24411,
                      "name": "_createDividendWithCheckpointAndExclusions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24650,
                      "src": "4814:42:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256,uint256,address[] memory,bytes32)"
                      }
                    },
                    "id": 24419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4814:112:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24420,
                  "nodeType": "ExpressionStatement",
                  "src": "4814:112:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24408,
                    "name": "ADMIN",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58762,
                    "src": "4793:5:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24409,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24407,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "4784:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4784:15:67"
              }
            ],
            "name": "createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24392,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4573:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24394,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4600:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24396,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4625:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4625:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24398,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4649:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4649:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24400,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4674:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4674:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24403,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4705:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24401,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4705:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24402,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4705:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24405,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24422,
                  "src": "4741:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24404,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4563:197:67"
            },
            "returnParameters": {
              "id": 24410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4804:0:67"
            },
            "scope": 24922,
            "src": "4513:420:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24649,
              "nodeType": "Block",
              "src": "5763:2012:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24441,
                            "name": "_excluded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24435,
                            "src": "5781:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 24442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5781:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24443,
                          "name": "EXCLUDED_ADDRESS_LIMIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58691,
                          "src": "5801:22:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5781:42:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206d616e7920616464726573736573206578636c75646564",
                        "id": 24445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5825:29:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        },
                        "value": "Too many addresses excluded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad6bbeab65aafa09c5a0199f3b6d3d9c624f5f0ceaea9d4127455caa2aae8d8a",
                          "typeString": "literal_string \"Too many addresses excluded\""
                        }
                      ],
                      "id": 24440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5773:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:82:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24447,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:82:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24449,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24426,
                          "src": "5873:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24450,
                          "name": "_maturity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24424,
                          "src": "5883:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5873:19:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "457870697279206265666f7265206d61747572697479",
                        "id": 24452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5894:24:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        },
                        "value": "Expiry before maturity"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbca1011afa52143eca812b4ae6f8974f984300173f590981c28739222360343",
                          "typeString": "literal_string \"Expiry before maturity\""
                        }
                      ],
                      "id": 24448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5865:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:54:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24454,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:54:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24456,
                          "name": "_expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24426,
                          "src": "6000:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24457,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64043,
                          "src": "6010:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6000:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45787069727920696e2070617374",
                        "id": 24459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6015:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        },
                        "value": "Expiry in past"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5b1a1253580801d00b7d14a8b965c659307370d61e1ad288af320f704f0b823",
                          "typeString": "literal_string \"Expiry in past\""
                        }
                      ],
                      "id": 24455,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "5992:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5992:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24461,
                  "nodeType": "ExpressionStatement",
                  "src": "5992:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24463,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24430,
                          "src": "6050:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6060:1:67",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6050:11:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206469766964656e642073656e74",
                        "id": 24466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6063:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        },
                        "value": "No dividend sent"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9cbf26dfbb8cb09305cf1aba4b80647de75c687df55e6fabf58881042dc3708",
                          "typeString": "literal_string \"No dividend sent\""
                        }
                      ],
                      "id": 24462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6042:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:40:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24468,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:40:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24470,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24428,
                          "src": "6100:6:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6118:1:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24471,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6110:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 24473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6110:10:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6100:20:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e",
                        "id": 24475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6122:15:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        },
                        "value": "Invalid token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e70ebd1d4072d337a7fabaa7bda70fa2633d6e3f89d5cb725a16b10d07e54c6",
                          "typeString": "literal_string \"Invalid token\""
                        }
                      ],
                      "id": 24469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6092:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6092:46:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24477,
                  "nodeType": "ExpressionStatement",
                  "src": "6092:46:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24479,
                          "name": "_checkpointId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24432,
                          "src": "6156:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 24480,
                              "name": "securityToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58759,
                              "src": "6173:13:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                                "typeString": "contract ISecurityToken"
                              }
                            },
                            "id": 24481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentCheckpointId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15208,
                            "src": "6173:33:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 24482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6173:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6156:52:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420636865636b706f696e74",
                        "id": 24484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6210:20:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        },
                        "value": "Invalid checkpoint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85c3ad96722524d748760d17bf67fbf55547212e2fce9ee84f25b8f3f7079401",
                          "typeString": "literal_string \"Invalid checkpoint\""
                        }
                      ],
                      "id": 24478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6148:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6148:83:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24486,
                  "nodeType": "ExpressionStatement",
                  "src": "6148:83:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24492,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64041,
                              "src": "6277:3:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 24493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6277:10:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24495,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64263,
                                "src": "6297:4:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24922",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20DividendCheckpoint_$24922",
                                  "typeString": "contract ERC20DividendCheckpoint"
                                }
                              ],
                              "id": 24494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6289:7:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 24496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6289:13:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24497,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24430,
                            "src": "6304:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24489,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24428,
                                "src": "6256:6:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24488,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "6249:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6249:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63938,
                          "src": "6249:27:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6249:63:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e737566666963656e7420616c6c6f77616e6365",
                        "id": 24499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6314:23:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        },
                        "value": "insufficent allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_850703b0894be396621274c59866cd886dcc5ebf12c7027eae9eea3d00afbb3a",
                          "typeString": "literal_string \"insufficent allowance\""
                        }
                      ],
                      "id": 24487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6241:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6241:97:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24501,
                  "nodeType": "ExpressionStatement",
                  "src": "6241:97:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 24507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24503,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24437,
                          "src": "6356:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 24505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6373:1:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 24504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6365:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          "id": 24506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6365:10:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "6356:19:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64044,
                      "src": "6348:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6348:28:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24509,
                  "nodeType": "ExpressionStatement",
                  "src": "6348:28:67"
                },
                {
                  "assignments": [
                    24511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24511,
                      "name": "dividendIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6386:21:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6386:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24514,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 24512,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "6410:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24513,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6410:16:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6386:40:67"
                },
                {
                  "assignments": [
                    24516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24516,
                      "name": "currentSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6436:21:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6436:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24521,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24519,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "6488:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24517,
                        "name": "securityToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58759,
                        "src": "6460:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                          "typeString": "contract ISecurityToken"
                        }
                      },
                      "id": 24518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupplyAt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15147,
                      "src": "6460:27:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 24520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6460:42:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6436:66:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24523,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24516,
                          "src": "6520:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 24524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6536:1:67",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6520:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6539:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24522,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "6512:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6512:44:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24528,
                  "nodeType": "ExpressionStatement",
                  "src": "6512:44:67"
                },
                {
                  "assignments": [
                    24530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24530,
                      "name": "excludedSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "6566:22:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24529,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6566:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24532,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 24531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6591:1:67",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6566:26:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 24537,
                            "name": "_checkpointId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24432,
                            "src": "6656:13:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24538,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64043,
                            "src": "6687:3:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24539,
                            "name": "_maturity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24424,
                            "src": "6758:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24540,
                            "name": "_expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24426,
                            "src": "6785:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24541,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24430,
                            "src": "6810:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6835:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6854:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 24544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6873:5:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6896:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 24546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6915:1:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "argumentTypes": null,
                            "id": 24547,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24437,
                            "src": "6934:5:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 24536,
                          "name": "Dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58726,
                          "src": "6630:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Dividend_$58726_storage_ptr_$",
                            "typeString": "type(struct DividendCheckpointStorage.Dividend storage pointer)"
                          }
                        },
                        "id": 24548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6630:323:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Dividend_$58726_memory",
                          "typeString": "struct DividendCheckpointStorage.Dividend memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24533,
                        "name": "dividends",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58729,
                        "src": "6602:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                        }
                      },
                      "id": 24535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6602:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Dividend_$58726_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct DividendCheckpointStorage.Dividend storage ref) returns (uint256)"
                      }
                    },
                    "id": 24549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6602:361:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24550,
                  "nodeType": "ExpressionStatement",
                  "src": "6602:361:67"
                },
                {
                  "body": {
                    "id": 24610,
                    "nodeType": "Block",
                    "src": "7021:364:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 24569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24563,
                                  "name": "_excluded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24435,
                                  "src": "7043:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 24565,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24564,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24552,
                                  "src": "7053:1:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7043:12:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 24567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7067:1:67",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 24566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7059:7:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 24568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7059:10:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "7043:26:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e76616c69642061646472657373",
                              "id": 24570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7071:17:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              },
                              "value": "Invalid address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
                                "typeString": "literal_string \"Invalid address\""
                              }
                            ],
                            "id": 24562,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "7035:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7035:54:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24572,
                        "nodeType": "ExpressionStatement",
                        "src": "7035:54:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 24582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "7111:56:67",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24574,
                                      "name": "dividends",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58729,
                                      "src": "7112:9:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                      }
                                    },
                                    "id": 24576,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24575,
                                      "name": "dividendIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24511,
                                      "src": "7122:13:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7112:24:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                    }
                                  },
                                  "id": 24577,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "dividendExcluded",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58719,
                                  "src": "7112:41:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24581,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 24578,
                                    "name": "_excluded",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24435,
                                    "src": "7154:9:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 24580,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 24579,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24552,
                                    "src": "7164:1:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7154:12:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7112:55:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6475706564206578636c7564652061646472657373",
                              "id": 24583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7169:23:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              },
                              "value": "duped exclude address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5c43bf177bb2d67887c9da2b9093f5b7102c9d207af587dfa41389d59a8e17d",
                                "typeString": "literal_string \"duped exclude address\""
                              }
                            ],
                            "id": 24573,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "7103:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7103:90:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24585,
                        "nodeType": "ExpressionStatement",
                        "src": "7103:90:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 24586,
                            "name": "excludedSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24530,
                            "src": "7207:14:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 24591,
                                      "name": "_excluded",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24435,
                                      "src": "7269:9:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 24593,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 24592,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24552,
                                      "src": "7279:1:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7269:12:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 24594,
                                    "name": "_checkpointId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24432,
                                    "src": "7283:13:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 24589,
                                    "name": "securityToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58759,
                                    "src": "7243:13:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISecurityToken_$15561",
                                      "typeString": "contract ISecurityToken"
                                    }
                                  },
                                  "id": 24590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOfAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15156,
                                  "src": "7243:25:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 24595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7243:54:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 24587,
                                "name": "excludedSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24530,
                                "src": "7224:14:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63394,
                              "src": "7224:18:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7224:74:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7207:91:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24598,
                        "nodeType": "ExpressionStatement",
                        "src": "7207:91:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24599,
                                  "name": "dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58729,
                                  "src": "7312:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                                  }
                                },
                                "id": 24601,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24600,
                                  "name": "dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24511,
                                  "src": "7322:13:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7312:24:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                                }
                              },
                              "id": 24602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "dividendExcluded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58719,
                              "src": "7312:41:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24606,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 24603,
                                "name": "_excluded",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24435,
                                "src": "7354:9:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24605,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 24604,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24552,
                                "src": "7364:1:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7354:12:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7312:55:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 24607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7370:4:67",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7312:62:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24609,
                        "nodeType": "ExpressionStatement",
                        "src": "7312:62:67"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24555,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24552,
                      "src": "6994:1:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24556,
                        "name": "_excluded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24435,
                        "src": "6998:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6998:16:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6994:20:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24611,
                  "initializationExpression": {
                    "assignments": [
                      24552
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24552,
                        "name": "j",
                        "nodeType": "VariableDeclaration",
                        "scope": 24611,
                        "src": "6979:9:67",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6979:7:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 24554,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6991:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6979:13:67"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 24560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7016:3:67",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 24559,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24552,
                        "src": "7016:1:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24561,
                    "nodeType": "ExpressionStatement",
                    "src": "7016:3:67"
                  },
                  "nodeType": "ForStatement",
                  "src": "6974:411:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24613,
                          "name": "currentSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24516,
                          "src": "7402:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 24614,
                          "name": "excludedSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24530,
                          "src": "7418:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7402:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420737570706c79",
                        "id": 24616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7434:16:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        },
                        "value": "Invalid supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e95080cc42f57557b1daea37045760cd5c8f0f0ded30dbbef3511c2403148fd6",
                          "typeString": "literal_string \"Invalid supply\""
                        }
                      ],
                      "id": 24612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "7394:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7394:57:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24618,
                  "nodeType": "ExpressionStatement",
                  "src": "7394:57:67"
                },
                {
                  "assignments": [
                    24620
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24620,
                      "name": "supplyForDividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24649,
                      "src": "7461:25:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24619,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7461:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24624,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24621,
                      "name": "currentSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24516,
                      "src": "7489:13:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 24622,
                      "name": "excludedSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24530,
                      "src": "7505:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7489:30:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7461:58:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24625,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58729,
                          "src": "7529:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24627,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24626,
                          "name": "dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24511,
                          "src": "7539:13:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7529:24:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24628,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58705,
                      "src": "7529:36:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24629,
                      "name": "supplyForDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24620,
                      "src": "7568:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7529:56:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24631,
                  "nodeType": "ExpressionStatement",
                  "src": "7529:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 24632,
                        "name": "dividendTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25115,
                        "src": "7595:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 24634,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24633,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24511,
                        "src": "7610:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7595:29:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 24635,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24428,
                      "src": "7627:6:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7595:38:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24637,
                  "nodeType": "ExpressionStatement",
                  "src": "7595:38:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24639,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24432,
                        "src": "7676:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24640,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24424,
                        "src": "7691:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24641,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24426,
                        "src": "7702:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24642,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24428,
                        "src": "7711:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24643,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24430,
                        "src": "7719:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24644,
                        "name": "supplyForDividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24620,
                        "src": "7728:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24645,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24511,
                        "src": "7747:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24646,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24437,
                        "src": "7762:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24638,
                      "name": "_emitERC20DividendDepositedEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24683,
                      "src": "7643:32:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7643:125:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24648,
                  "nodeType": "ExpressionStatement",
                  "src": "7643:125:67"
                }
              ]
            },
            "documentation": "@notice Creates a dividend with a provided checkpoint\n@param _maturity Time from which dividend can be paid\n@param _expiry Time until dividend can no longer be paid, and can be reclaimed by issuer\n@param _token Address of ERC20 token in which dividend is to be denominated\n@param _amount Amount of specified token for dividend\n@param _checkpointId Checkpoint id from which to create dividends\n@param _excluded List of addresses to exclude\n@param _name Name/Title for identification",
            "id": 24650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createDividendWithCheckpointAndExclusions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24424,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5554:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5554:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24426,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5581:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5581:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24428,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5606:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5606:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24430,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5630:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24432,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5655:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24431,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5655:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24435,
                  "name": "_excluded",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5686:26:67",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24433,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5686:7:67",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24434,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5686:9:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24437,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24650,
                  "src": "5722:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24436,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5722:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5544:197:67"
            },
            "returnParameters": {
              "id": 24439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5763:0:67"
            },
            "scope": 24922,
            "src": "5493:2282:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24682,
              "nodeType": "Block",
              "src": "8222:326:67",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24670,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64041,
                          "src": "8336:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8336:10:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24672,
                        "name": "_checkpointId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24652,
                        "src": "8360:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24673,
                        "name": "_maturity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24654,
                        "src": "8387:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24674,
                        "name": "_expiry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24656,
                        "src": "8410:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24675,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24658,
                        "src": "8431:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24676,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24660,
                        "src": "8451:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24677,
                        "name": "currentSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24662,
                        "src": "8472:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24678,
                        "name": "dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24664,
                        "src": "8499:13:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24679,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24666,
                        "src": "8526:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 24669,
                      "name": "ERC20DividendDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24255,
                      "src": "8300:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 24680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8300:241:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24681,
                  "nodeType": "EmitStatement",
                  "src": "8295:246:67"
                }
              ]
            },
            "documentation": "@notice Emits the ERC20DividendDeposited event.\nSeperated into a different function as a workaround for stack too deep error",
            "id": 24683,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20DividendDepositedEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24652,
                  "name": "_checkpointId",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "7987:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7987:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24654,
                  "name": "_maturity",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8018:17:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24653,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8018:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24656,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8045:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8045:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24658,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8070:14:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8070:7:67",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24660,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8094:15:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8094:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24662,
                  "name": "currentSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8119:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24661,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8119:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24664,
                  "name": "dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8150:21:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24666,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 24683,
                  "src": "8181:13:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24665,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8181:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7977:223:67"
            },
            "returnParameters": {
              "id": 24668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8222:0:67"
            },
            "scope": 24922,
            "src": "7936:612:67",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24777,
              "nodeType": "Block",
              "src": "8882:703:67",
              "statements": [
                {
                  "assignments": [
                    24693,
                    24695
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24693,
                      "name": "claim",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "8893:13:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8893:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 24695,
                      "name": "withheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "8908:16:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24694,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8908:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24700,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24697,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24689,
                        "src": "8946:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24698,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "8962:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 24696,
                      "name": "calculateDividend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23524,
                      "src": "8928:17:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 24699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:41:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8892:77:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24701,
                          "name": "_dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24687,
                          "src": "8979:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24704,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58715,
                        "src": "8979:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24705,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 24703,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "8997:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8979:25:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9007:4:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8979:32:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24708,
                  "nodeType": "ExpressionStatement",
                  "src": "8979:32:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24709,
                        "name": "_dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24687,
                        "src": "9021:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimedAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58703,
                      "src": "9021:23:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24714,
                            "name": "_dividend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24687,
                            "src": "9057:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                            }
                          },
                          "id": 24715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58703,
                          "src": "9057:23:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 24712,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24693,
                          "src": "9047:5:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63394,
                        "src": "9047:9:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 24716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9047:34:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9021:60:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24718,
                  "nodeType": "ExpressionStatement",
                  "src": "9021:60:67"
                },
                {
                  "assignments": [
                    24720
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24720,
                      "name": "claimAfterWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24777,
                      "src": "9091:26:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24719,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9091:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24725,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24723,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24695,
                        "src": "9130:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 24721,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "9120:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "9120:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9120:19:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9091:48:67"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24726,
                      "name": "claimAfterWithheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24720,
                      "src": "9153:18:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9174:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9153:22:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24743,
                  "nodeType": "IfStatement",
                  "src": "9149:156:67",
                  "trueBody": {
                    "id": 24742,
                    "nodeType": "Block",
                    "src": "9177:128:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 24736,
                                  "name": "_payee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24685,
                                  "src": "9247:6:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 24737,
                                  "name": "claimAfterWithheld",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24720,
                                  "src": "9255:18:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 24731,
                                        "name": "dividendTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25115,
                                        "src": "9206:14:67",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                          "typeString": "mapping(uint256 => address)"
                                        }
                                      },
                                      "id": 24733,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 24732,
                                        "name": "_dividendIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 24689,
                                        "src": "9221:14:67",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9206:30:67",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24730,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63976,
                                    "src": "9199:6:67",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 24734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9199:38:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$63976",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 24735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63918,
                                "src": "9199:47:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 24738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9199:75:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "7472616e73666572206661696c6564",
                              "id": 24739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9276:17:67",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              },
                              "value": "transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                                "typeString": "literal_string \"transfer failed\""
                              }
                            ],
                            "id": 24729,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              64044,
                              64045
                            ],
                            "referencedDeclaration": 64045,
                            "src": "9191:7:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 24740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9191:103:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24741,
                        "nodeType": "ExpressionStatement",
                        "src": "9191:103:67"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 24744,
                      "name": "withheld",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24695,
                      "src": "9318:8:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 24745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9329:1:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9318:12:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 24766,
                  "nodeType": "IfStatement",
                  "src": "9314:157:67",
                  "trueBody": {
                    "id": 24765,
                    "nodeType": "Block",
                    "src": "9332:139:67",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 24747,
                              "name": "_dividend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24687,
                              "src": "9346:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                              }
                            },
                            "id": 24749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalWithheld",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58709,
                            "src": "9346:23:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 24753,
                                "name": "withheld",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24695,
                                "src": "9400:8:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 24750,
                                  "name": "_dividend",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24687,
                                  "src": "9372:9:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                    "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                  }
                                },
                                "id": 24751,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalWithheld",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 58709,
                                "src": "9372:23:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 24752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63394,
                              "src": "9372:27:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 24754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9372:37:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9346:63:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24756,
                        "nodeType": "ExpressionStatement",
                        "src": "9346:63:67"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 24763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 24757,
                                "name": "_dividend",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24687,
                                "src": "9423:9:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                                  "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                                }
                              },
                              "id": 24760,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withheld",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58723,
                              "src": "9423:18:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 24761,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24759,
                              "name": "_payee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24685,
                              "src": "9442:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9423:26:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 24762,
                            "name": "withheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24695,
                            "src": "9452:8:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9423:37:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24764,
                        "nodeType": "ExpressionStatement",
                        "src": "9423:37:67"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24768,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24685,
                        "src": "9506:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24769,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24689,
                        "src": "9514:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24770,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "9530:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24772,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24771,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24689,
                          "src": "9545:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9530:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24773,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24693,
                        "src": "9562:5:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24774,
                        "name": "withheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24695,
                        "src": "9569:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24767,
                      "name": "ERC20DividendClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24267,
                      "src": "9485:20:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256,uint256)"
                      }
                    },
                    "id": 24775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9485:93:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24776,
                  "nodeType": "EmitStatement",
                  "src": "9480:98:67"
                }
              ]
            },
            "documentation": "@notice Internal function for paying dividends\n@param _payee Address of investor\n@param _dividend Storage with previously issued dividends\n@param _dividendIndex Dividend to pay",
            "id": 24778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24685,
                  "name": "_payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8797:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 24684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8797:15:67",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24687,
                  "name": "_dividend",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8821:26:67",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                    "typeString": "struct DividendCheckpointStorage.Dividend"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 24686,
                    "name": "Dividend",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 58726,
                    "src": "8821:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                      "typeString": "struct DividendCheckpointStorage.Dividend"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24689,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24778,
                  "src": "8849:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8849:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8796:76:67"
            },
            "returnParameters": {
              "id": 24691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8882:0:67"
            },
            "scope": 24922,
            "src": "8775:810:67",
            "stateMutability": "nonpayable",
            "superFunction": 23441,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24858,
              "nodeType": "Block",
              "src": "9827:730:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24787,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "9845:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24788,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58729,
                            "src": "9862:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24789,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "9862:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9845:33:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9880:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24786,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "9837:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:62:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24793,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:62:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24795,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64043,
                          "src": "9980:3:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24796,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58729,
                              "src": "9987:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24798,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24797,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24780,
                              "src": "9997:14:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9987:25:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24799,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58699,
                          "src": "9987:32:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9980:39:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4469766964656e642065787069727920696e20667574757265",
                        "id": 24801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10021:27:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        },
                        "value": "Dividend expiry in future"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c19756747eccd4f83d088119f0f002cf6ad1200cd3e28d3f70bd8b846cf8e2b9",
                          "typeString": "literal_string \"Dividend expiry in future\""
                        }
                      ],
                      "id": 24794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "9972:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9972:77:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24803,
                  "nodeType": "ExpressionStatement",
                  "src": "9972:77:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10067:36:67",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 24805,
                              "name": "dividends",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58729,
                              "src": "10068:9:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                                "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                              }
                            },
                            "id": 24807,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 24806,
                              "name": "_dividendIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24780,
                              "src": "10078:14:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10068:25:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                            }
                          },
                          "id": 24808,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reclaimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58707,
                          "src": "10068:35:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 24810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10105:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 24804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10059:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10059:64:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24812,
                  "nodeType": "ExpressionStatement",
                  "src": "10059:64:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24813,
                          "name": "dividends",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58729,
                          "src": "10133:9:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                          }
                        },
                        "id": 24815,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24814,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "10143:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10133:25:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                        }
                      },
                      "id": 24816,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reclaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58707,
                      "src": "10133:35:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 24817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10171:4:67",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10133:42:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24819,
                  "nodeType": "ExpressionStatement",
                  "src": "10133:42:67"
                },
                {
                  "assignments": [
                    24821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24821,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24858,
                      "src": "10185:25:67",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24820,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 58726,
                        "src": "10185:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24825,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24822,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "10213:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24824,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24823,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24780,
                      "src": "10223:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10213:25:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10185:53:67"
                },
                {
                  "assignments": [
                    24827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24827,
                      "name": "remainingAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 24858,
                      "src": "10248:23:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10248:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24834,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24831,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "10294:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24832,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimedAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58703,
                        "src": "10294:22:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24828,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "10274:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24829,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58701,
                        "src": "10274:15:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "10274:19:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10274:43:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10248:69:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24842,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "10383:17:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10383:19:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24844,
                            "name": "remainingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24827,
                            "src": "10404:15:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24837,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25115,
                                  "src": "10342:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24839,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24838,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24780,
                                  "src": "10357:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10342:30:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24836,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "10335:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10335:38:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63918,
                          "src": "10335:47:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10335:85:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10422:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10327:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10327:113:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24848,
                  "nodeType": "ExpressionStatement",
                  "src": "10327:113:67"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24850,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58688,
                        "src": "10478:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24851,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24780,
                        "src": "10486:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24852,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "10502:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24853,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24780,
                          "src": "10517:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10502:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24855,
                        "name": "remainingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24827,
                        "src": "10534:15:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24849,
                      "name": "ERC20DividendReclaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24277,
                      "src": "10455:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10455:95:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24857,
                  "nodeType": "EmitStatement",
                  "src": "10450:100:67"
                }
              ]
            },
            "documentation": "@notice Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends\n@param _dividendIndex Dividend to reclaim",
            "id": 24859,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24783,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58765,
                    "src": "9817:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24784,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24782,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "9808:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9808:18:67"
              }
            ],
            "name": "reclaimDividend",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24780,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24859,
                  "src": "9775:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9775:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9774:24:67"
            },
            "returnParameters": {
              "id": 24785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9827:0:67"
            },
            "scope": 24922,
            "src": "9750:807:67",
            "stateMutability": "nonpayable",
            "superFunction": 23446,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24920,
              "nodeType": "Block",
              "src": "10769:553:67",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 24868,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "10787:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24869,
                            "name": "dividends",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58729,
                            "src": "10804:9:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                              "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                            }
                          },
                          "id": 24870,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10804:16:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10787:33:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206469766964656e64",
                        "id": 24872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10822:18:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        },
                        "value": "Invalid dividend"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1711430c56a3f86986445ccbc2ded0d1119b2f73058933c34e537a35421ce18",
                          "typeString": "literal_string \"Invalid dividend\""
                        }
                      ],
                      "id": 24867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "10779:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10779:62:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24874,
                  "nodeType": "ExpressionStatement",
                  "src": "10779:62:67"
                },
                {
                  "assignments": [
                    24876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24876,
                      "name": "dividend",
                      "nodeType": "VariableDeclaration",
                      "scope": 24920,
                      "src": "10851:25:67",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                        "typeString": "struct DividendCheckpointStorage.Dividend"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 24875,
                        "name": "Dividend",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 58726,
                        "src": "10851:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24880,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 24877,
                      "name": "dividends",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58729,
                      "src": "10879:9:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Dividend_$58726_storage_$dyn_storage",
                        "typeString": "struct DividendCheckpointStorage.Dividend storage ref[] storage ref"
                      }
                    },
                    "id": 24879,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 24878,
                      "name": "_dividendIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24861,
                      "src": "10889:14:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10879:25:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Dividend_$58726_storage",
                      "typeString": "struct DividendCheckpointStorage.Dividend storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10851:53:67"
                },
                {
                  "assignments": [
                    24882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24882,
                      "name": "remainingWithheld",
                      "nodeType": "VariableDeclaration",
                      "scope": 24920,
                      "src": "10914:25:67",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24881,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10914:7:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 24889,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24886,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24876,
                          "src": "10969:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24887,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheldWithdrawn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58711,
                        "src": "10969:31:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 24883,
                          "name": "dividend",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24876,
                          "src": "10942:8:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                            "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                          }
                        },
                        "id": 24884,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalWithheld",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58709,
                        "src": "10942:22:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 24885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63370,
                      "src": "10942:26:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 24888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10942:59:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10914:87:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 24895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24890,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24876,
                        "src": "11011:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24892,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalWithheldWithdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58711,
                      "src": "11011:31:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 24893,
                        "name": "dividend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24876,
                        "src": "11045:8:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Dividend_$58726_storage_ptr",
                          "typeString": "struct DividendCheckpointStorage.Dividend storage pointer"
                        }
                      },
                      "id": 24894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalWithheld",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58709,
                      "src": "11045:22:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11011:56:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 24896,
                  "nodeType": "ExpressionStatement",
                  "src": "11011:56:67"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24904,
                              "name": "getTreasuryWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "11133:17:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 24905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11133:19:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 24906,
                            "name": "remainingWithheld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24882,
                            "src": "11154:17:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 24899,
                                  "name": "dividendTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25115,
                                  "src": "11092:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 24901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 24900,
                                  "name": "_dividendIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24861,
                                  "src": "11107:14:67",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11092:30:67",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 24898,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63976,
                              "src": "11085:6:67",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$63976_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 24902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11085:38:67",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$63976",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 24903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63918,
                          "src": "11085:47:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 24907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11085:87:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 24908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11174:17:67",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 24897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        64044,
                        64045
                      ],
                      "referencedDeclaration": 64045,
                      "src": "11077:7:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11077:115:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24910,
                  "nodeType": "ExpressionStatement",
                  "src": "11077:115:67"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 24912,
                        "name": "wallet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58688,
                        "src": "11241:6:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24913,
                        "name": "_dividendIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24861,
                        "src": "11249:14:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 24914,
                          "name": "dividendTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25115,
                          "src": "11265:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 24916,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 24915,
                          "name": "_dividendIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24861,
                          "src": "11280:14:67",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11265:30:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 24917,
                        "name": "remainingWithheld",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24882,
                        "src": "11297:17:67",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24911,
                      "name": "ERC20DividendWithholdingWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24287,
                      "src": "11207:33:67",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256)"
                      }
                    },
                    "id": 24918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11207:108:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24919,
                  "nodeType": "EmitStatement",
                  "src": "11202:113:67"
                }
              ]
            },
            "documentation": "@notice Allows issuer to withdraw withheld tax\n@param _dividendIndex Dividend to withdraw from",
            "id": 24921,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 24864,
                    "name": "OPERATOR",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 58765,
                    "src": "10759:8:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 24865,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 24863,
                  "name": "withPerm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34212,
                  "src": "10750:8:67",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10750:18:67"
              }
            ],
            "name": "withdrawWithholding",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24861,
                  "name": "_dividendIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 24921,
                  "src": "10717:22:67",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10717:7:67",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10716:24:67"
            },
            "returnParameters": {
              "id": 24866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10769:0:67"
            },
            "scope": 24922,
            "src": "10688:634:67",
            "stateMutability": "nonpayable",
            "superFunction": 23612,
            "visibility": "external"
          }
        ],
        "scope": 24923,
        "src": "283:11042:67"
      }
    ],
    "src": "0:11326:67"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.12",
  "updatedAt": "2019-09-24T16:14:04.246Z",
  "devdoc": {
    "methods": {
      "calculateDividend(uint256,address)": {
        "params": {
          "_dividendIndex": "Dividend to calculate",
          "_payee": "Affected investor address"
        },
        "return": "claim, withheld amounts"
      },
      "changeWallet(address)": {
        "params": {
          "_wallet": "Ethereum account address to receive reclaimed dividends and tax"
        }
      },
      "configure(address)": {
        "params": {
          "_wallet": "Ethereum account address to receive reclaimed dividends and tax"
        }
      },
      "constructor": {
        "params": {
          "_securityToken": "Address of the security token"
        }
      },
      "createCheckpoint()": {
        "return": "Checkpoint ID"
      },
      "createDividend(uint256,uint256,address,uint256,bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer",
          "_maturity": "Time from which dividend can be paid",
          "_name": "Name/Title for identification",
          "_token": "Address of ERC20 token in which dividend is to be denominated"
        }
      },
      "createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend",
          "_checkpointId": "Checkpoint id from which to create dividends",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer",
          "_maturity": "Time from which dividend can be paid",
          "_name": "Name/Title for identification",
          "_token": "Address of ERC20 token in which dividend is to be denominated"
        }
      },
      "createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend",
          "_checkpointId": "Checkpoint id from which to create dividends",
          "_excluded": "List of addresses to exclude",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer",
          "_maturity": "Time from which dividend can be paid",
          "_name": "Name/Title for identification",
          "_token": "Address of ERC20 token in which dividend is to be denominated"
        }
      },
      "createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)": {
        "params": {
          "_amount": "Amount of specified token for dividend",
          "_excluded": "List of addresses to exclude",
          "_expiry": "Time until dividend can no longer be paid, and can be reclaimed by issuer",
          "_maturity": "Time from which dividend can be paid",
          "_name": "Name/Title for identification",
          "_token": "Address of ERC20 token in which dividend is to be denominated"
        }
      },
      "getCheckpointData(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint Id to query for"
        },
        "return": "address[] list of investorsuint256[] investor balancesuint256[] investor withheld percentages"
      },
      "getDefaultExcluded()": {
        "return": "List of excluded addresses"
      },
      "getDividendData(uint256)": {
        "return": "uint256 timestamp of dividend creationuint256 timestamp of dividend maturityuint256 timestamp of dividend expiryuint256 amount of dividenduint256 claimed amount of dividendbytes32 name of dividend"
      },
      "getDividendIndex(uint256)": {
        "params": {
          "_checkpointId": "Checkpoint id to query"
        },
        "return": "uint256[]"
      },
      "getDividendProgress(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from"
        },
        "return": "address[] list of investorsbool[] whether investor has claimedbool[] whether investor is excludeduint256[] amount of withheld tax (estimate if not claimed)uint256[] amount of claim (estimate if not claimeed)uint256[] investor balance"
      },
      "getDividendsData()": {
        "return": "uint256[] timestamp of dividends creationuint256[] timestamp of dividends maturityuint256[] timestamp of dividends expiryuint256[] amount of dividendsuint256[] claimed amount of dividendsbytes32[] name of dividends"
      },
      "getInitFunction()": {
        "return": "bytes4"
      },
      "getPermissions()": {
        "return": "bytes32 array"
      },
      "isClaimed(address,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from",
          "_investor": "Investor address being checked"
        },
        "return": "bool whether the address has claimed"
      },
      "isExcluded(address,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from",
          "_investor": "Investor address being checked"
        },
        "return": "bool whether the address is excluded"
      },
      "pullDividendPayment(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to pull"
        }
      },
      "pushDividendPayment(uint256,uint256,uint256)": {
        "params": {
          "_dividendIndex": "Dividend to push",
          "_end": "Index in investor list at which to stop pushing dividends",
          "_start": "Index in investor list at which to start pushing dividends"
        }
      },
      "pushDividendPaymentToAddresses(uint256,address[])": {
        "params": {
          "_dividendIndex": "Dividend to push",
          "_payees": "Addresses to which to push the dividend"
        }
      },
      "reclaimDividend(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to reclaim"
        }
      },
      "reclaimERC20(address)": {
        "details": "We duplicate here due to the overriden owner & onlyOwner",
        "params": {
          "_tokenContract": "The address of the token contract"
        }
      },
      "reclaimETH()": {
        "details": "We duplicate here due to the overriden owner & onlyOwner"
      },
      "setDefaultExcluded(address[])": {
        "params": {
          "_excluded": "Addresses of investors"
        }
      },
      "setWithholding(address[],uint256[])": {
        "params": {
          "_investors": "Addresses of investors",
          "_withholding": "Withholding tax for individual investors (multiplied by 10**16)"
        }
      },
      "setWithholdingFixed(address[],uint256)": {
        "params": {
          "_investors": "Addresses of investor",
          "_withholding": "Withholding tax for all investors (multiplied by 10**16)"
        }
      },
      "updateDividendDates(uint256,uint256,uint256)": {
        "details": "NB - setting the maturity of a currently matured dividend to a future datewill effectively refreeze claims on that dividend until the new maturity date passes dev NB - setting the expiry date to a past date will mean no more payments can be pulledor pushed out of a dividend",
        "params": {
          "_dividendIndex": "Dividend to withdraw from",
          "_expiry": "updated expiry date",
          "_maturity": "updated maturity date"
        }
      },
      "withdrawWithholding(uint256)": {
        "params": {
          "_dividendIndex": "Dividend to withdraw from"
        }
      }
    },
    "title": "Checkpoint module for issuing ERC20 dividends"
  },
  "userdoc": {
    "methods": {
      "calculateDividend(uint256,address)": {
        "notice": "Calculate amount of dividends claimable"
      },
      "changeWallet(address)": {
        "notice": "Function used to change wallet address"
      },
      "configure(address)": {
        "notice": "Function used to intialize the contract variables"
      },
      "constructor": "Constructor",
      "createCheckpoint()": {
        "notice": "Creates a checkpoint on the security token"
      },
      "createDividend(uint256,uint256,address,uint256,bytes32)": {
        "notice": "Creates a dividend and checkpoint for the dividend"
      },
      "createDividendWithCheckpoint(uint256,uint256,address,uint256,uint256,bytes32)": {
        "notice": "Creates a dividend with a provided checkpoint"
      },
      "createDividendWithCheckpointAndExclusions(uint256,uint256,address,uint256,uint256,address[],bytes32)": {
        "notice": "Creates a dividend with a provided checkpoint"
      },
      "createDividendWithExclusions(uint256,uint256,address,uint256,address[],bytes32)": {
        "notice": "Creates a dividend and checkpoint for the dividend"
      },
      "getCheckpointData(uint256)": {
        "notice": "Retrieves list of investors, their balances, and their current withholding tax percentage"
      },
      "getDataStore()": {
        "notice": "used to return the data store address of securityToken"
      },
      "getDefaultExcluded()": {
        "notice": "Return the default excluded addresses"
      },
      "getDividendData(uint256)": {
        "notice": "Get static dividend data"
      },
      "getDividendIndex(uint256)": {
        "notice": "Get the index according to the checkpoint id"
      },
      "getDividendProgress(uint256)": {
        "notice": "Retrieves list of investors, their claim status and whether they are excluded"
      },
      "getDividendsData()": {
        "notice": "Get static dividend data"
      },
      "getInitFunction()": {
        "notice": "Init function i.e generalise function to maintain the structure of the module contract"
      },
      "getPermissions()": {
        "notice": "Return the permissions flag that are associated with this module"
      },
      "getTreasuryWallet()": {
        "notice": "Returns the treasury wallet address"
      },
      "isClaimed(address,uint256)": {
        "notice": "Checks whether an address has claimed a dividend"
      },
      "isExcluded(address,uint256)": {
        "notice": "Checks whether an address is excluded from claiming a dividend"
      },
      "pause()": {
        "notice": "Pause (overridden function)"
      },
      "pullDividendPayment(uint256)": {
        "notice": "Investors can pull their own dividends"
      },
      "pushDividendPayment(uint256,uint256,uint256)": {
        "notice": "Issuer can push dividends using the investor list from the security token"
      },
      "pushDividendPaymentToAddresses(uint256,address[])": {
        "notice": "Issuer can push dividends to provided addresses"
      },
      "reclaimDividend(uint256)": {
        "notice": "Issuer can reclaim remaining unclaimed dividend amounts, for expired dividends"
      },
      "reclaimERC20(address)": {
        "notice": "Reclaims ERC20Basic compatible tokens"
      },
      "reclaimETH()": {
        "notice": "Reclaims ETH"
      },
      "setDefaultExcluded(address[])": {
        "notice": "Function to clear and set list of excluded addresses used for future dividends"
      },
      "setWithholding(address[],uint256[])": {
        "notice": "Function to set withholding tax rates for investors"
      },
      "setWithholdingFixed(address[],uint256)": {
        "notice": "Function to set withholding tax rates for investors"
      },
      "unpause()": {
        "notice": "Unpause (overridden function)"
      },
      "updateDividendDates(uint256,uint256,uint256)": {
        "notice": "Allows issuer to change maturity / expiry dates for dividends"
      },
      "withdrawWithholding(uint256)": {
        "notice": "Allows issuer to withdraw withheld tax"
      }
    }
  }
}